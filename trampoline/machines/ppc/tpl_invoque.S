/**
 * @file tpl_invoque.S
 *
 * @section descr File description
 *
 * System call user level invoque API.
 *
 * @warning this file is generated by gen_invoque.sh based on the 
 * tpl_os_service_ids.h header file.
 *
 * @section copyright Copyright
 *
 * Trampoline OS
 *
 * Trampoline is copyright (c) IRCCyN 2005+
 * Copyright ESEO for function and data structures documentation and ARM port
 * Trampoline is protected by the French intellectual property law.
 *
 * This software is distributed under the Lesser GNU Public Licence
 *
 * @section infos File informations
 *
 * $Date$
 * $Rev$
 * $Author$
 * $URL$
 */
#include "tpl_os_application_def.h"
#include "tpl_os_service_ids.h"

#ifndef WITH_SYSTEM_CALL
#error "This file should not be part of your project since WITH_SYSTEM_CALL is not defined"
#endif

#include "tpl_assembler.h"

  .text
  .section .osApiCode CODE_ACCESS_RIGHT

  .global ActivateTask
ActivateTask:
  subi r1,r1,4
  stw  r0,0(r1)
  li   r0,OSServiceId_ActivateTask
  sc
  lwz  r0,0(r1)
  addi r1,r1,4
  blr
  
  .type ActivateTask,@function
  .size ActivateTask,$-ActivateTask

  .global TerminateTask
TerminateTask:
  subi r1,r1,4
  stw  r0,0(r1)
  li   r0,OSServiceId_TerminateTask
  sc
  lwz  r0,0(r1)
  addi r1,r1,4
  blr
  
  .type TerminateTask,@function
  .size TerminateTask,$-TerminateTask

  .global ChainTask
ChainTask:
  subi r1,r1,4
  stw  r0,0(r1)
  li   r0,OSServiceId_ChainTask
  sc
  lwz  r0,0(r1)
  addi r1,r1,4
  blr
  
  .type ChainTask,@function
  .size ChainTask,$-ChainTask

  .global Schedule
Schedule:
  subi r1,r1,4
  stw  r0,0(r1)
  li   r0,OSServiceId_Schedule
  sc
  lwz  r0,0(r1)
  addi r1,r1,4
  blr
  
  .type Schedule,@function
  .size Schedule,$-Schedule

  .global GetTaskID
GetTaskID:
  subi r1,r1,4
  stw  r0,0(r1)
  li   r0,OSServiceId_GetTaskID
  sc
  lwz  r0,0(r1)
  addi r1,r1,4
  blr
  
  .type GetTaskID,@function
  .size GetTaskID,$-GetTaskID

  .global GetTaskState
GetTaskState:
  subi r1,r1,4
  stw  r0,0(r1)
  li   r0,OSServiceId_GetTaskState
  sc
  lwz  r0,0(r1)
  addi r1,r1,4
  blr
  
  .type GetTaskState,@function
  .size GetTaskState,$-GetTaskState

  .global EnableAllInterrupts
EnableAllInterrupts:
  subi r1,r1,4
  stw  r0,0(r1)
  li   r0,OSServiceId_EnableAllInterrupts
  sc
  lwz  r0,0(r1)
  addi r1,r1,4
  blr
  
  .type EnableAllInterrupts,@function
  .size EnableAllInterrupts,$-EnableAllInterrupts

  .global DisableAllInterrupts
DisableAllInterrupts:
  subi r1,r1,4
  stw  r0,0(r1)
  li   r0,OSServiceId_DisableAllInterrupts
  sc
  lwz  r0,0(r1)
  addi r1,r1,4
  blr
  
  .type DisableAllInterrupts,@function
  .size DisableAllInterrupts,$-DisableAllInterrupts

  .global ResumeAllInterrupts
ResumeAllInterrupts:
  subi r1,r1,4
  stw  r0,0(r1)
  li   r0,OSServiceId_ResumeAllInterrupts
  sc
  lwz  r0,0(r1)
  addi r1,r1,4
  blr
  
  .type ResumeAllInterrupts,@function
  .size ResumeAllInterrupts,$-ResumeAllInterrupts

  .global SuspendAllInterrupts
SuspendAllInterrupts:
  subi r1,r1,4
  stw  r0,0(r1)
  li   r0,OSServiceId_SuspendAllInterrupts
  sc
  lwz  r0,0(r1)
  addi r1,r1,4
  blr
  
  .type SuspendAllInterrupts,@function
  .size SuspendAllInterrupts,$-SuspendAllInterrupts

  .global ResumeOSInterrupts
ResumeOSInterrupts:
  subi r1,r1,4
  stw  r0,0(r1)
  li   r0,OSServiceId_ResumeOSInterrupts
  sc
  lwz  r0,0(r1)
  addi r1,r1,4
  blr
  
  .type ResumeOSInterrupts,@function
  .size ResumeOSInterrupts,$-ResumeOSInterrupts

  .global SuspendOSInterrupts
SuspendOSInterrupts:
  subi r1,r1,4
  stw  r0,0(r1)
  li   r0,OSServiceId_SuspendOSInterrupts
  sc
  lwz  r0,0(r1)
  addi r1,r1,4
  blr
  
  .type SuspendOSInterrupts,@function
  .size SuspendOSInterrupts,$-SuspendOSInterrupts

  .global GetResource
GetResource:
  subi r1,r1,4
  stw  r0,0(r1)
  li   r0,OSServiceId_GetResource
  sc
  lwz  r0,0(r1)
  addi r1,r1,4
  blr
  
  .type GetResource,@function
  .size GetResource,$-GetResource

  .global ReleaseResource
ReleaseResource:
  subi r1,r1,4
  stw  r0,0(r1)
  li   r0,OSServiceId_ReleaseResource
  sc
  lwz  r0,0(r1)
  addi r1,r1,4
  blr
  
  .type ReleaseResource,@function
  .size ReleaseResource,$-ReleaseResource

  .global SetEvent
SetEvent:
  subi r1,r1,4
  stw  r0,0(r1)
  li   r0,OSServiceId_SetEvent
  sc
  lwz  r0,0(r1)
  addi r1,r1,4
  blr
  
  .type SetEvent,@function
  .size SetEvent,$-SetEvent

  .global ClearEvent
ClearEvent:
  subi r1,r1,4
  stw  r0,0(r1)
  li   r0,OSServiceId_ClearEvent
  sc
  lwz  r0,0(r1)
  addi r1,r1,4
  blr
  
  .type ClearEvent,@function
  .size ClearEvent,$-ClearEvent

  .global GetEvent
GetEvent:
  subi r1,r1,4
  stw  r0,0(r1)
  li   r0,OSServiceId_GetEvent
  sc
  lwz  r0,0(r1)
  addi r1,r1,4
  blr
  
  .type GetEvent,@function
  .size GetEvent,$-GetEvent

  .global WaitEvent
WaitEvent:
  subi r1,r1,4
  stw  r0,0(r1)
  li   r0,OSServiceId_WaitEvent
  sc
  lwz  r0,0(r1)
  addi r1,r1,4
  blr
  
  .type WaitEvent,@function
  .size WaitEvent,$-WaitEvent

  .global GetAlarmBase
GetAlarmBase:
  subi r1,r1,4
  stw  r0,0(r1)
  li   r0,OSServiceId_GetAlarmBase
  sc
  lwz  r0,0(r1)
  addi r1,r1,4
  blr
  
  .type GetAlarmBase,@function
  .size GetAlarmBase,$-GetAlarmBase

  .global GetAlarm
GetAlarm:
  subi r1,r1,4
  stw  r0,0(r1)
  li   r0,OSServiceId_GetAlarm
  sc
  lwz  r0,0(r1)
  addi r1,r1,4
  blr
  
  .type GetAlarm,@function
  .size GetAlarm,$-GetAlarm

  .global SetRelAlarm
SetRelAlarm:
  subi r1,r1,4
  stw  r0,0(r1)
  li   r0,OSServiceId_SetRelAlarm
  sc
  lwz  r0,0(r1)
  addi r1,r1,4
  blr
  
  .type SetRelAlarm,@function
  .size SetRelAlarm,$-SetRelAlarm

  .global SetAbsAlarm
SetAbsAlarm:
  subi r1,r1,4
  stw  r0,0(r1)
  li   r0,OSServiceId_SetAbsAlarm
  sc
  lwz  r0,0(r1)
  addi r1,r1,4
  blr
  
  .type SetAbsAlarm,@function
  .size SetAbsAlarm,$-SetAbsAlarm

  .global CancelAlarm
CancelAlarm:
  subi r1,r1,4
  stw  r0,0(r1)
  li   r0,OSServiceId_CancelAlarm
  sc
  lwz  r0,0(r1)
  addi r1,r1,4
  blr
  
  .type CancelAlarm,@function
  .size CancelAlarm,$-CancelAlarm

  .global GetActiveApplicationMode
GetActiveApplicationMode:
  subi r1,r1,4
  stw  r0,0(r1)
  li   r0,OSServiceId_GetActiveApplicationMode
  sc
  lwz  r0,0(r1)
  addi r1,r1,4
  blr
  
  .type GetActiveApplicationMode,@function
  .size GetActiveApplicationMode,$-GetActiveApplicationMode

  .global tpl_start_os
tpl_start_os:
  subi r1,r1,4
  stw  r0,0(r1)
  li   r0,OSServiceId_StartOS
  sc
  lwz  r0,0(r1)
  addi r1,r1,4
  blr
  
  .type tpl_start_os,@function
  .size tpl_start_os,$-tpl_start_os

  .global ShutdownOS
ShutdownOS:
  subi r1,r1,4
  stw  r0,0(r1)
  li   r0,OSServiceId_ShutdownOS
  sc
  lwz  r0,0(r1)
  addi r1,r1,4
  blr
  
  .type ShutdownOS,@function
  .size ShutdownOS,$-ShutdownOS

  .global TerminateISR
TerminateISR:
  subi r1,r1,4
  stw  r0,0(r1)
  li   r0,OSServiceId_TerminateISR
  sc
  lwz  r0,0(r1)
  addi r1,r1,4
  blr
  
  .type TerminateISR,@function
  .size TerminateISR,$-TerminateISR

/* End of file tpl_invoque.S */
