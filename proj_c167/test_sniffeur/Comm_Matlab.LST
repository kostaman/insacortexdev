C166 COMPILER V6.06, COMM_MATLAB                                                           12/21/2007 11:58:39 PAGE 1   


C166 COMPILER V6.06, COMPILATION OF MODULE COMM_MATLAB
OBJECT MODULE PLACED IN Comm_Matlab.OBJ
COMPILER INVOKED BY: C:\Keil\C166\BIN\C166.EXE Comm_Matlab.c OPTIMIZE(0,SPEED) BROWSE MOD167 DEFINE(STDIO=1) DEBUG

 stmt lvl     source

    1         //anim.c        Librairie d'animation
    2         #include <intrins.h>
    3         #include <stdio.h>
    4         #include <../../includes/user_libs/structDonnees.h> 
    5         #define LIB_ANIME
    6         #include <../../includes/user_libs/anim.h"
    7         
    8         extern void Init_IO_SSC(void); 
    9         extern Etat_Trotinette Consigne;
   10         
   11         /* void Attendons (long) -----------FONCTION d'ATTENTE ---------------------
   12          |
   13          |              Argument : durée de l'attente.
   14          |              Retourne : néant.
   15          |      Sert à règler la vitesse de progression de la chenille.
   16          -----------------------------------------------------------------------------*/
   17         void Attendons (long Duree)
   18                 {
   19  1              long Compte;
   20  1      
   21  1              for (Compte = 0; Compte < Duree; Compte++)
   22  1                      {
   23  2                      _nop_();        // inclut une instruction NOP (cf. C166 Library Functions)
   24  2                      _nop_();
   25  2                      _nop_();
   26  2                      _nop_();
   27  2                      _nop_();
   28  2                      }
   29  1              }
   30         
   31         void Attendre(int);
   32         int EcrireMatInt (char *,int, int *);
   33         
   34         
   35         
   36         /*************************************************************************/
   37         /***************************      FONCTION                   ************/
   38         /***********************************************************************/
   39         /* fonction d'envoie une séquence d'envoie d'entiers sous forme Ascii */
   40         /*********************************************************************/
   41         
   42         int EcrireMatInt (char *nomMat,int taille, int *vecteur)
   43         {
   44  1              int status ;
   45  1              int boukle ; 
   46  1              
   47  1      
   48  1      
   49  1              printf("#i\n"); /* Code de début de séquence enregistrement Int pour Matalb */
   50  1              scanf("%d",&status);  /*attente de confirmation Matlab */
   51  1      //      printf("J'ai recu %d\n",status); /* Code de début de séquence enregistrement Int pour Matalb */
   52  1          Attendre(1);
   53  1              if (status == 0)  /* ok pour matlab */
   54  1              {
   55  2                      printf("%s\n",nomMat);  /* Envoie du nom de la matrice Matlab */
C166 COMPILER V6.06, COMM_MATLAB                                                           12/21/2007 11:58:39 PAGE 2   

   56  2                      printf("%d\n",taille);  /* Envoie de la tailel de la matrice Matlab */
   57  2                      for (boukle = 0 ;  boukle < taille ; boukle++) /*  Envoie de la matrice Matlab */
   58  2                      {
   59  3                              printf("%d\n", *(vecteur + boukle) );
   60  3                              /*if(taille % 10==9){
   61  3                                      Attendre(2);
   62  3                              } */
   63  3                      }
   64  2                      scanf("%d",&status);
   65  2              //Attendre(600);
   66  2              } 
   67  1              
   68  1      
   69  1      
   70  1      return status; 
   71  1      }
   72         
   73         
   74         /* Fonction d'attente */
   75         /* Insertion de boucle d'attente pour ne pas assurer la synchronisation dans le dialogue */
   76         
   77         void Attendre(int Valun)
   78         {
   79  1      int indice,indice2 ;
   80  1      
   81  1      for (indice = 0;indice < Valun; indice ++)
   82  1                      {
   83  2                  for (indice2 = 0;indice2 < 0xFFFF; indice2 ++)
   84  2                              {
   85  3                              _nop_();
   86  3                              _nop_();
   87  3                              _nop_();
   88  3                              
   89  3                              }
   90  2                      } 
   91  1      }
   92         
   93         void EnvoyerEchantillonPosition(int NbreEntiers,int * PositionsVoitures)
   94         {
   95  1              EcrireMatInt("Donnees",NbreEntiers,PositionsVoitures);
   96  1      }
   97         
   98         //Renvoie la distance en pas de la prochaine station
   99         int DemanderDistanceProchaineStation(void)
  100         {
  101  1              int DistanceStationSuivante;
  102  1              printf("!i\n");
  103  1      
  104  1              scanf("%d",&DistanceStationSuivante); //Matlab fournit la position de la station suivante en pas
  105  1                                                                                        //Si 0 il faut quitter l'application
  106  1              return (int) (DistanceStationSuivante);
  107  1      }
  108         


MODULE INFORMATION:   INITIALIZED  UNINITIALIZED
  CODE SIZE        =         334     --------
  NEAR-CONST SIZE  =          27     --------
  FAR-CONST SIZE   =    --------     --------
  HUGE-CONST SIZE  =    --------     --------
  XHUGE-CONST SIZE =    --------     --------
  NEAR-DATA SIZE   =    --------     --------
C166 COMPILER V6.06, COMM_MATLAB                                                           12/21/2007 11:58:39 PAGE 3   

  FAR-DATA SIZE    =    --------     --------
  XHUGE-DATA SIZE  =    --------     --------
  IDATA-DATA SIZE  =    --------     --------
  SDATA-DATA SIZE  =    --------     --------
  BDATA-DATA SIZE  =    --------     --------
  HUGE-DATA SIZE   =    --------     --------
  BIT SIZE         =    --------     --------
  INIT'L SIZE      =    --------     --------
END OF MODULE INFORMATION.


C166 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
