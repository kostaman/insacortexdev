C166 COMPILER V6.08, CODE_APPLI                                                            06/28/2009 16:38:42 PAGE 1   


C166 COMPILER V6.08, COMPILATION OF MODULE CODE_APPLI
OBJECT MODULE PLACED IN .\objs\code_appli.obj
COMPILER INVOKED BY: C:\Keil\Evalsoft\C166\BIN\C166.EXE code_appli.c TINY BROWSE INCDIR(.\archi_appli;..\..\..\trampolin
                    -e-1.1\os;..\..\..\trampoline-1.1\com;..\..\..\trampoline-1.1\os\os_machine\c166;..\..\..\trampoline-1.1\goil\templates\c
                    -166;..\..\..\trampoline-1.1\debug) MOD167 DEFINE(WITH_COMPILER_SETTINGS) DEBUG OBJECT(.\objs\code_appli.obj) 

 stmt lvl     source

    1         // Hugues Malgouyres
    2         // Modifie par Pierre-Emmanuel Hladik
    3         // 06/01/2009
    4         /***********************************
    5         Fichier type du code pour la consigne
    6         ************************************/
    7          #include <C167CS.H>
    8         //#include "../os/tpl_os.h"
    9         //#include "../com/tpl_com.h"
   10         #include "tpl_os.h"
   11         #include "tpl_com.h"
   12         #include "tpl_os_generated_configuration.h"
   13         
   14         
   15         #include "mon_stdio_2007b.h"
   16         #include "driveurs_2008a.h"
   17         #include "lib_autom_2008a.h"
   18         
   19         void InitApp(void)
   20         {
   21  1              Init_Mon_Stdio();
   22  1              Configurer_Tout_Les_Periphs();
   23  1      }
   24         
   25         float Y = 100.0;
   26         TASK(Generer_Trajectoire)
   27         { 
   28  1              if (Iterer_Trajectoire()==1)
   29  1              {
   30  2                                      
   31  2              }
   32  1               TerminateTask();
   33  1      
   34  1      }
   35         
   36         TASK(Controler_Voiture)
   37         {
   38  1              int pos;
   39  1              Un_Etat cons;
   40  1      
   41  1              pos = Lire_Position();
   42  1              cons= Lire_Consigne();
   43  1              Fixe_Rapport((float) ((cons.Pos-pos)>>2));
   44  1              TerminateTask();
   45  1      
   46  1      }
   47         
   48         void main (void)
   49         {
   50  1              InitApp();
   51  1              Configurer_Tout_Les_Periphs();
   52  1              Init_Trajectoire(2000);
   53  1              StartOS(OSDEFAULTAPPMODE);      
C166 COMPILER V6.08, CODE_APPLI                                                            06/28/2009 16:38:42 PAGE 2   

   54  1      }


MODULE INFORMATION:   INITIALIZED  UNINITIALIZED
  CODE SIZE        =         106     --------
  NEAR-CONST SIZE  =    --------     --------
  FAR-CONST SIZE   =    --------     --------
  HUGE-CONST SIZE  =    --------     --------
  XHUGE-CONST SIZE =    --------     --------
  NEAR-DATA SIZE   =           4     --------
  FAR-DATA SIZE    =    --------     --------
  XHUGE-DATA SIZE  =    --------     --------
  IDATA-DATA SIZE  =    --------     --------
  SDATA-DATA SIZE  =    --------     --------
  BDATA-DATA SIZE  =    --------     --------
  HUGE-DATA SIZE   =    --------     --------
  BIT SIZE         =    --------     --------
  INIT'L SIZE      =           8     --------
END OF MODULE INFORMATION.


C166 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
