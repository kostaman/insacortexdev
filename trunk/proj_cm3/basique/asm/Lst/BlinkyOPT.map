ARM Linker, RVCT3.1 [Build 942] for uVision [Evaluation]

================================================================================

Section Cross References

    stm32f10x.o(RESET) refers to stm32f10x.o(STACK) for __initial_sp
    stm32f10x.o(RESET) refers to stm32f10x.o(.text) for Reset_Handler
    stm32f10x.o(RESET) refers to blinky.o(.text) for SysTick_Handler
    stm32f10x.o(.text) refers to entry.o($$startup$$) for __main
    retarget.o(.text) refers to serial.o(.text) for ser_putchar
    lcd_4bit.o(.text) refers to lcd_4bit.o(.constdata) for SWAP_DATA
    blinky.o(.text) refers to stm32_init.o(.text) for stm32_Init
    blinky.o(.text) refers to lcd_4bit.o(.text) for lcd_init
    blinky.o(.text) refers to printf8.o(i.__0printf_8) for __1printf
    blinky.o(.text) refers to blinky.o(.data) for ADC_ConvertedValue
    blinky.o(.text) refers (Special) to stubs.o(c$$printf_stubs) for _printf_longlong_hex
    blinky.o(.data) refers (Special) to stubs.o(c$$printf_stubs) for _printf_longlong_hex
    entry.o($$startup$$) refers to init.o(.text) for __init
    entry.o($$startup$$) refers to stm32f10x.o(STACK) for __initial_sp
    entry.o(__vectab_stack_and_reset_area) refers to stm32f10x.o(STACK) for __initial_sp
    entry.o(__vectab_stack_and_reset_area) refers to entry.o($$startup$$) for __main
    printfb.o(i.__0fprintf_bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf_bare) refers to retarget.o(.text) for fputc
    printfb.o(i.__0vfprintf_bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf_bare) refers to retarget.o(.text) for fputc
    printfb.o(i.__0printf_bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf_bare) refers to retarget.o(.text) for fputc
    printfb.o(i.__0printf_bare) refers to retarget.o(.data) for __stdout
    printfb.o(i.__0vprintf_bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf_bare) refers to retarget.o(.text) for fputc
    printfb.o(i.__0vprintf_bare) refers to retarget.o(.data) for __stdout
    printfb.o(i.__0sprintf_bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf_bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vsprintf_bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf_bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf_0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf_0) refers to retarget.o(.text) for fputc
    printf0.o(i.__0vfprintf_0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf_0) refers to retarget.o(.text) for fputc
    printf0.o(i.__0printf_0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf_0) refers to retarget.o(.text) for fputc
    printf0.o(i.__0printf_0) refers to retarget.o(.data) for __stdout
    printf0.o(i.__0vprintf_0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf_0) refers to retarget.o(.text) for fputc
    printf0.o(i.__0vprintf_0) refers to retarget.o(.data) for __stdout
    printf0.o(i.__0sprintf_0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf_0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vsprintf_0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf_0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf1.o(i.__0fprintf_1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf_1) refers to retarget.o(.text) for fputc
    printf1.o(i.__0vfprintf_1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf_1) refers to retarget.o(.text) for fputc
    printf1.o(i.__0printf_1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf_1) refers to retarget.o(.text) for fputc
    printf1.o(i.__0printf_1) refers to retarget.o(.data) for __stdout
    printf1.o(i.__0vprintf_1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf_1) refers to retarget.o(.text) for fputc
    printf1.o(i.__0vprintf_1) refers to retarget.o(.data) for __stdout
    printf1.o(i.__0sprintf_1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf_1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vsprintf_1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf_1) refers to printf1.o(i._sputc) for _sputc
    printf2.o(i.__0fprintf_2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf_2) refers to retarget.o(.text) for fputc
    printf2.o(i.__0vfprintf_2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf_2) refers to retarget.o(.text) for fputc
    printf2.o(i.__0printf_2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf_2) refers to retarget.o(.text) for fputc
    printf2.o(i.__0printf_2) refers to retarget.o(.data) for __stdout
    printf2.o(i.__0vprintf_2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf_2) refers to retarget.o(.text) for fputc
    printf2.o(i.__0vprintf_2) refers to retarget.o(.data) for __stdout
    printf2.o(i.__0sprintf_2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf_2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vsprintf_2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf_2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf3.o(i.__0fprintf_3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf_3) refers to retarget.o(.text) for fputc
    printf3.o(i.__0vfprintf_3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf_3) refers to retarget.o(.text) for fputc
    printf3.o(i.__0printf_3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf_3) refers to retarget.o(.text) for fputc
    printf3.o(i.__0printf_3) refers to retarget.o(.data) for __stdout
    printf3.o(i.__0vprintf_3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf_3) refers to retarget.o(.text) for fputc
    printf3.o(i.__0vprintf_3) refers to retarget.o(.data) for __stdout
    printf3.o(i.__0sprintf_3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf_3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vsprintf_3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf_3) refers to printf3.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf4.o(i.__0fprintf_4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf_4) refers to retarget.o(.text) for fputc
    printf4.o(i.__0vfprintf_4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf_4) refers to retarget.o(.text) for fputc
    printf4.o(i.__0printf_4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf_4) refers to retarget.o(.text) for fputc
    printf4.o(i.__0printf_4) refers to retarget.o(.data) for __stdout
    printf4.o(i.__0vprintf_4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf_4) refers to retarget.o(.text) for fputc
    printf4.o(i.__0vprintf_4) refers to retarget.o(.data) for __stdout
    printf4.o(i.__0sprintf_4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf_4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vsprintf_4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf_4) refers to printf4.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf_5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf_5) refers to retarget.o(.text) for fputc
    printf5.o(i.__0vfprintf_5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf_5) refers to retarget.o(.text) for fputc
    printf5.o(i.__0printf_5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf_5) refers to retarget.o(.text) for fputc
    printf5.o(i.__0printf_5) refers to retarget.o(.data) for __stdout
    printf5.o(i.__0vprintf_5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf_5) refers to retarget.o(.text) for fputc
    printf5.o(i.__0vprintf_5) refers to retarget.o(.data) for __stdout
    printf5.o(i.__0sprintf_5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf_5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vsprintf_5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf_5) refers to printf5.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf6.o(i.__0fprintf_6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf_6) refers to retarget.o(.text) for fputc
    printf6.o(i.__0vfprintf_6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf_6) refers to retarget.o(.text) for fputc
    printf6.o(i.__0printf_6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf_6) refers to retarget.o(.text) for fputc
    printf6.o(i.__0printf_6) refers to retarget.o(.data) for __stdout
    printf6.o(i.__0vprintf_6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf_6) refers to retarget.o(.text) for fputc
    printf6.o(i.__0vprintf_6) refers to retarget.o(.data) for __stdout
    printf6.o(i.__0sprintf_6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf_6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vsprintf_6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf_6) refers to printf6.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i.__0fprintf_7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf_7) refers to retarget.o(.text) for fputc
    printf7.o(i.__0vfprintf_7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf_7) refers to retarget.o(.text) for fputc
    printf7.o(i.__0printf_7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf_7) refers to retarget.o(.text) for fputc
    printf7.o(i.__0printf_7) refers to retarget.o(.data) for __stdout
    printf7.o(i.__0vprintf_7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf_7) refers to retarget.o(.text) for fputc
    printf7.o(i.__0vprintf_7) refers to retarget.o(.data) for __stdout
    printf7.o(i.__0sprintf_7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf_7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vsprintf_7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf_7) refers to printf7.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i.__0fprintf_8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf_8) refers to retarget.o(.text) for fputc
    printf8.o(i.__0vfprintf_8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf_8) refers to retarget.o(.text) for fputc
    printf8.o(i.__0printf_8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf_8) refers to retarget.o(.text) for fputc
    printf8.o(i.__0printf_8) refers to retarget.o(.data) for __stdout
    printf8.o(i.__0vprintf_8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf_8) refers to retarget.o(.text) for fputc
    printf8.o(i.__0vprintf_8) refers to retarget.o(.data) for __stdout
    printf8.o(i.__0sprintf_8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf_8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vsprintf_8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf_8) refers to printf8.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixull.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I_use_fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I_use_fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to retarget.o(.text) for fputc
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I_use_fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to retarget.o(.text) for fputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I_use_fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to retarget.o(.text) for fputc
    printfa.o(i.__0printf) refers to retarget.o(.data) for __stdout
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I_use_fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to retarget.o(.text) for fputc
    printfa.o(i.__0vprintf) refers to retarget.o(.data) for __stdout
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I_use_fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I_use_fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I_use_fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I_use_fp
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I_use_fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I_use_fp
    init.o(.text) refers to init.o(.emb_text) for __call_main
    init.o(.text) refers to blinky.o(.text) for main
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I_use_fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I_use_fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I_use_fp
    dfixull.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixull.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dfixull.o(.text) refers (Special) to iusefp.o(.text) for __I_use_fp
    cdrcmple.o(.text) refers (Special) to iusefp.o(.text) for __I_use_fp
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I_use_fp


================================================================================

Removing Unused input sections from the image.

    Removing stm32f10x.o(HEAP), (0 bytes).

1 unused section(s) (total 0 bytes) removed from the image.

================================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../../microlib/division.c                0x00000000   Number         0  uldiv.o ABSOLUTE
    ../../microlib/division.c                0x00000000   Number         0  uidiv.o ABSOLUTE
    ../../microlib/fpadd.c                   0x00000000   Number         0  dadd.o ABSOLUTE
    ../../microlib/fpdiv.c                   0x00000000   Number         0  ddiv.o ABSOLUTE
    ../../microlib/fpepilogue.c              0x00000000   Number         0  depilogue.o ABSOLUTE
    ../../microlib/fpfix.c                   0x00000000   Number         0  dfixull.o ABSOLUTE
    ../../microlib/fpmul.c                   0x00000000   Number         0  dmul.o ABSOLUTE
    ../../microlib/init/entry.s              0x00000000   Number         0  entry.o ABSOLUTE
    ../../microlib/init/init.c               0x00000000   Number         0  init.o ABSOLUTE
    ../../microlib/longlong.c                0x00000000   Number         0  llshl.o ABSOLUTE
    ../../microlib/longlong.c                0x00000000   Number         0  llushr.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printf1.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printf2.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printf3.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printf4.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printfa.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printf8.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printf7.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printf5.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printf6.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printfb.o ABSOLUTE
    ../../microlib/printf/printf.c           0x00000000   Number         0  printf0.o ABSOLUTE
    ../../microlib/printf/stubs.s            0x00000000   Number         0  stubs.o ABSOLUTE
    ../../microlib/stubs.s                   0x00000000   Number         0  iusefp.o ABSOLUTE
    ../../microlib/stubs.s                   0x00000000   Number         0  useno.o ABSOLUTE
    Blinky.c                                 0x00000000   Number         0  blinky.o ABSOLUTE
    LCD_4bit.c                               0x00000000   Number         0  lcd_4bit.o ABSOLUTE
    Retarget.c                               0x00000000   Number         0  retarget.o ABSOLUTE
    STM32F10x.s                              0x00000000   Number         0  stm32f10x.o ABSOLUTE
    STM32F10xOPT.s                           0x00000000   Number         0  stm32f10xopt.o ABSOLUTE
    STM32_Init.c                             0x00000000   Number         0  stm32_init.o ABSOLUTE
    Serial.c                                 0x00000000   Number         0  serial.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    RESET                                    0x08000000   Section      236  stm32f10x.o(RESET)
    $$startup$$                              0x080000ec   Section       12  entry.o($$startup$$)
    .emb_text                                0x080000f8   Section        2  init.o(.emb_text)
    .text                                    0x080000fc   Section       44  init.o(.text)
    i.__scatterload_copy                     0x08000128   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x08000136   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x08000138   Section       14  handlers.o(i.__scatterload_zeroinit)
    .text                                    0x08004168   Section       28  stm32f10x.o(.text)
    .text                                    0x08004184   Section       48  retarget.o(.text)
    .text                                    0x080041b4   Section      728  lcd_4bit.o(.text)
    delay                                    0x080041b5   Thumb Code    14  lcd_4bit.o(.text)
    lcd_read_status                          0x080041c3   Thumb Code   168  lcd_4bit.o(.text)
    wait_while_busy                          0x0800426b   Thumb Code    20  lcd_4bit.o(.text)
    lcd_write_data                           0x080042ed   Thumb Code    34  lcd_4bit.o(.text)
    .text                                    0x0800448c   Section       52  serial.o(.text)
    .text                                    0x080044c0   Section      796  stm32_init.o(.text)
    .text                                    0x080047dc   Section      436  blinky.o(.text)
    .text                                    0x08004990   Section       84  uldiv.o(.text)
    .text                                    0x080049e4   Section       32  llshl.o(.text)
    .text                                    0x08004a04   Section       30  llushr.o(.text)
    c$$printf_stubs                          0x08004a24   Number         0  stubs.o(c$$printf_stubs)
    i.__0printf_8                            0x08004a24   Section       32  printf8.o(i.__0printf_8)
    i._printf_core                           0x08004a44   Section     1112  printf8.o(i._printf_core)
    _printf_core                             0x08004a45   Thumb Code  1112  printf8.o(i._printf_core)
    i._printf_post_padding                   0x08004e9c   Section       36  printf8.o(i._printf_post_padding)
    _printf_post_padding                     0x08004e9d   Thumb Code    36  printf8.o(i._printf_post_padding)
    i._printf_pre_padding                    0x08004ec0   Section       44  printf8.o(i._printf_pre_padding)
    _printf_pre_padding                      0x08004ec1   Thumb Code    44  printf8.o(i._printf_pre_padding)
    .constdata                               0x08004eec   Section      128  lcd_4bit.o(.constdata)
    .ARM.__AT_0x1FFFF800                     0x1ffff800   Section       16  stm32f10xopt.o(.ARM.__AT_0x1FFFF800)
    .data                                    0x20000000   Section        8  retarget.o(.data)
    .data                                    0x20000008   Section       13  blinky.o(.data)
    ticks@SysTick_Handler_0                  0x20000008   Data           4  blinky.o(.data)
    timetick@SysTick_Handler_1               0x2000000c   Data           4  blinky.o(.data)
    leds@SysTick_Handler_2                   0x20000010   Data           1  blinky.o(.data)
    STACK                                    0x20000018   Section      512  stm32f10x.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$M$P$D$K$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  blinky.o ABSOLUTE
    __use_no_errno                           0x00000000   Number         0  useno.o ABSOLUTE
    __use_no_exception_handling              0x00000000   Number         0  useno.o ABSOLUTE
    __use_no_fp                              0x00000000   Number         0  useno.o ABSOLUTE
    __use_no_heap                            0x00000000   Number         0  useno.o ABSOLUTE
    __use_no_heap_region                     0x00000000   Number         0  useno.o ABSOLUTE
    __use_no_semihosting                     0x00000000   Number         0  useno.o ABSOLUTE
    __use_no_semihosting_swi                 0x00000000   Number         0  useno.o ABSOLUTE
    __use_no_signal_handling                 0x00000000   Number         0  useno.o ABSOLUTE
    __decompress                              - Undefined Weak Reference
    __Vectors                                0x08000000   Data           4  stm32f10x.o(RESET)
    __main                                   0x080000ed   Thumb Code     8  entry.o($$startup$$)
    __call_main                              0x080000f9   Thumb Code     2  init.o(.emb_text)
    __init                                   0x080000fd   Thumb Code    30  init.o(.text)
    __scatterload_rt2                        0x080000fd   Thumb Code     0  init.o(.text)
    __scatterload_copy                       0x08000129   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x08000137   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x08000139   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    Region$$Table$$Base                      0x08000148   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08000168   Number         0  anon$$obj.o(Region$$Table)
    Reset_Handler                            0x08004169   Thumb Code     4  stm32f10x.o(.text)
    NMI_Handler                              0x0800416d   Thumb Code     2  stm32f10x.o(.text)
    HardFault_Handler                        0x0800416f   Thumb Code     2  stm32f10x.o(.text)
    MemManage_Handler                        0x08004171   Thumb Code     2  stm32f10x.o(.text)
    BusFault_Handler                         0x08004173   Thumb Code     2  stm32f10x.o(.text)
    UsageFault_Handler                       0x08004175   Thumb Code     2  stm32f10x.o(.text)
    SVC_Handler                              0x08004177   Thumb Code     2  stm32f10x.o(.text)
    DebugMon_Handler                         0x08004179   Thumb Code     2  stm32f10x.o(.text)
    PendSV_Handler                           0x0800417b   Thumb Code     2  stm32f10x.o(.text)
    ADC_IRQHandler                           0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    CAN_RX1_IRQHandler                       0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    CAN_SCE_IRQHandler                       0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel1_IRQHandler                   0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel2_IRQHandler                   0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel3_IRQHandler                   0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel4_IRQHandler                   0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel5_IRQHandler                   0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel6_IRQHandler                   0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel7_IRQHandler                   0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    EXTI0_IRQHandler                         0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    EXTI15_10_IRQHandler                     0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    EXTI1_IRQHandler                         0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    EXTI2_IRQHandler                         0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    EXTI3_IRQHandler                         0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    EXTI4_IRQHandler                         0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    EXTI9_5_IRQHandler                       0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    FLASH_IRQHandler                         0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    I2C1_ER_IRQHandler                       0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    I2C1_EV_IRQHandler                       0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    I2C2_ER_IRQHandler                       0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    I2C2_EV_IRQHandler                       0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    PVD_IRQHandler                           0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    RCC_IRQHandler                           0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    RTCAlarm_IRQHandler                      0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    RTC_IRQHandler                           0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    SPI1_IRQHandler                          0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    SPI2_IRQHandler                          0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    TAMPER_IRQHandler                        0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    TIM1_BRK_IRQHandler                      0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    TIM1_CC_IRQHandler                       0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    TIM1_UP_IRQHandler                       0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    TIM2_IRQHandler                          0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    TIM3_IRQHandler                          0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    TIM4_IRQHandler                          0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    USART1_IRQHandler                        0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    USART2_IRQHandler                        0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    USART3_IRQHandler                        0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    USBWakeUp_IRQHandler                     0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    USB_HP_CAN_TX_IRQHandler                 0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    USB_LP_CAN_RX0_IRQHandler                0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    WWDG_IRQHandler                          0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    fputc                                    0x08004185   Thumb Code    14  retarget.o(.text)
    fgetc                                    0x08004193   Thumb Code    10  retarget.o(.text)
    ferror                                   0x0800419d   Thumb Code     8  retarget.o(.text)
    _ttywrch                                 0x080041a5   Thumb Code    12  retarget.o(.text)
    _sys_exit                                0x080041b1   Thumb Code     4  retarget.o(.text)
    lcd_write_4bit                           0x0800427f   Thumb Code    76  lcd_4bit.o(.text)
    lcd_write_cmd                            0x080042cb   Thumb Code    34  lcd_4bit.o(.text)
    lcd_putchar                              0x0800430f   Thumb Code    12  lcd_4bit.o(.text)
    lcd_init                                 0x0800431b   Thumb Code   158  lcd_4bit.o(.text)
    set_cursor                               0x080043b9   Thumb Code    30  lcd_4bit.o(.text)
    lcd_clear                                0x080043d7   Thumb Code    18  lcd_4bit.o(.text)
    lcd_print                                0x080043e9   Thumb Code    22  lcd_4bit.o(.text)
    lcd_bargraph                             0x080043ff   Thumb Code    52  lcd_4bit.o(.text)
    lcd_bargraphXY                           0x08004433   Thumb Code    64  lcd_4bit.o(.text)
    ser_putchar                              0x0800448d   Thumb Code    24  serial.o(.text)
    ser_getchar                              0x080044a5   Thumb Code    24  serial.o(.text)
    stm32_EfiSetup                           0x080044c1   Thumb Code     8  stm32_init.o(.text)
    stm32_ClockSetup                         0x080044c9   Thumb Code    52  stm32_init.o(.text)
    stm32_NvicSetup                          0x080044fd   Thumb Code     4  stm32_init.o(.text)
    stm32_IwdgSetup                          0x08004501   Thumb Code    32  stm32_init.o(.text)
    stm32_SysTickSetup                       0x08004521   Thumb Code    28  stm32_init.o(.text)
    stm32_RtcSetup                           0x0800453d   Thumb Code   182  stm32_init.o(.text)
    stm32_TimerSetup                         0x080045f3   Thumb Code    10  stm32_init.o(.text)
    stm32_GpioSetup                          0x080045fd   Thumb Code    60  stm32_init.o(.text)
    stm32_UsartSetup                         0x08004639   Thumb Code   160  stm32_init.o(.text)
    stm32_ExtiSetup                          0x080046d9   Thumb Code    34  stm32_init.o(.text)
    stm32_AfRemapSetup                       0x080046fb   Thumb Code    24  stm32_init.o(.text)
    stm32_TamperSetup                        0x08004713   Thumb Code   102  stm32_init.o(.text)
    stm32_Init                               0x08004779   Thumb Code    24  stm32_init.o(.text)
    stm32_GetPCLK1                           0x08004791   Thumb Code     4  stm32_init.o(.text)
    adc_Init                                 0x080047dd   Thumb Code   112  blinky.o(.text)
    SysTick_Handler                          0x0800484d   Thumb Code   114  blinky.o(.text)
    main                                     0x080048bf   Thumb Code   104  blinky.o(.text)
    __aeabi_uldivmod                         0x08004991   Thumb Code    84  uldiv.o(.text)
    __aeabi_llsl                             0x080049e5   Thumb Code    32  llshl.o(.text)
    _ll_shift_l                              0x080049e5   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x08004a05   Thumb Code    30  llushr.o(.text)
    _ll_ushift_r                             0x08004a05   Thumb Code     0  llushr.o(.text)
    __0printf_8                              0x08004a25   Thumb Code    22  printf8.o(i.__0printf_8)
    __1printf                                0x08004a25   Thumb Code     0  printf8.o(i.__0printf_8)
    _printf_charcount                        0x08004a24   Number         0  stubs.o(c$$printf_stubs)
    _printf_fp_dec                           0x08004a24   Number         0  stubs.o(c$$printf_stubs)
    _printf_fp_hex                           0x08004a24   Number         0  stubs.o(c$$printf_stubs)
    _printf_int_dec                          0x08004a24   Number         0  stubs.o(c$$printf_stubs)
    _printf_longlong_dec                     0x08004a24   Number         0  stubs.o(c$$printf_stubs)
    _printf_longlong_hex                     0x08004a24   Number         0  stubs.o(c$$printf_stubs)
    _printf_longlong_oct                     0x08004a24   Number         0  stubs.o(c$$printf_stubs)
    _printf_mbtowc                           0x08004a24   Number         0  stubs.o(c$$printf_stubs)
    _printf_percent                          0x08004a24   Number         0  stubs.o(c$$printf_stubs)
    _printf_pre_padding                      0x08004a24   Number         0  stubs.o(c$$printf_stubs)
    _printf_return_value                     0x08004a24   Number         0  stubs.o(c$$printf_stubs)
    _printf_sizespec                         0x08004a24   Number         0  stubs.o(c$$printf_stubs)
    _printf_str                              0x08004a24   Number         0  stubs.o(c$$printf_stubs)
    _printf_truncate_signed                  0x08004a24   Number         0  stubs.o(c$$printf_stubs)
    _printf_truncate_unsigned                0x08004a24   Number         0  stubs.o(c$$printf_stubs)
    _printf_wc                               0x08004a24   Number         0  stubs.o(c$$printf_stubs)
    _printf_wctomb                           0x08004a24   Number         0  stubs.o(c$$printf_stubs)
    SWAP_DATA                                0x08004eec   Data          64  lcd_4bit.o(.constdata)
    UserFont                                 0x08004f2c   Data          64  lcd_4bit.o(.constdata)
    __stdout                                 0x20000000   Data           4  retarget.o(.data)
    __stdin                                  0x20000004   Data           4  retarget.o(.data)
    ADC_ConvertedValue                       0x20000012   Data           2  blinky.o(.data)
    Clock1s                                  0x20000014   Data           1  blinky.o(.data)
    __initial_sp                             0x20000218   Number         0  stm32f10x.o(STACK)


================================================================================

Memory Map of the image

  Image Entry point : 0x08004169

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00004f84, Max: 0x00080000, ABSOLUTE)

    Execution Region ER_IROM1 (Base: 0x08000000, Size: 0x00000168, Max: 0x00080000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x000000ec   Data   RO            3    RESET               stm32f10x.o
    0x080000ec   0x0000000c   Code   RO          179  * $$startup$$         entry.o(mc_w.l)
    0x080000f8   0x00000002   Code   RO          380    .emb_text           init.o(mc_w.l)
    0x080000fa   0x00000002   PAD
    0x080000fc   0x0000002c   Code   RO          379    .text               init.o(mc_w.l)
    0x08000128   0x0000000e   Code   RO          408    i.__scatterload_copy  handlers.o(mc_w.l)
    0x08000136   0x00000002   Code   RO          410    i.__scatterload_null  handlers.o(mc_w.l)
    0x08000138   0x0000000e   Code   RO          409    i.__scatterload_zeroinit  handlers.o(mc_w.l)
    0x08000146   0x00000002   PAD
    0x08000148   0x00000020   Data   RO          404    Region$$Table       anon$$obj.o


    Execution Region ER_IROM2 (Base: 0x08004168, Size: 0x00000e04, Max: 0xffffffff, ABSOLUTE, FIXED)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08004168   0x0000001c   Code   RO            4  * .text               stm32f10x.o
    0x08004184   0x00000030   Code   RO           14    .text               retarget.o
    0x080041b4   0x000002d8   Code   RO           35    .text               lcd_4bit.o
    0x0800448c   0x00000034   Code   RO          132    .text               serial.o
    0x080044c0   0x0000031c   Code   RO          144    .text               stm32_init.o
    0x080047dc   0x000001b4   Code   RO          159    .text               blinky.o
    0x08004990   0x00000054   Code   RO          385    .text               uldiv.o(mc_w.l)
    0x080049e4   0x00000020   Code   RO          398    .text               llshl.o(mc_w.l)
    0x08004a04   0x0000001e   Code   RO          400    .text               llushr.o(mc_w.l)
    0x08004a22   0x00000002   PAD
    0x08004a24   0x00000000   Code   RO          378    c$$printf_stubs     stubs.o(mc_w.l)
    0x08004a24   0x00000020   Code   RO          339    i.__0printf_8       printf8.o(mc_w.l)
    0x08004a44   0x00000458   Code   RO          336    i._printf_core      printf8.o(mc_w.l)
    0x08004e9c   0x00000024   Code   RO          344    i._printf_post_padding  printf8.o(mc_w.l)
    0x08004ec0   0x0000002c   Code   RO          343    i._printf_pre_padding  printf8.o(mc_w.l)
    0x08004eec   0x00000080   Data   RO           36    .constdata          lcd_4bit.o


    Execution Region RW_IRAM1 (Base: 0x20000000, Size: 0x00000018, Max: 0x00018000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00000008   Data   RW           15    .data               retarget.o
    0x20000008   0x0000000d   Data   RW          160    .data               blinky.o


    Execution Region RW_IRAM2 (Base: 0x20000018, Size: 0x00000200, Max: 0x00018000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000018   0x00000200   Zero   RW            1    STACK               stm32f10x.o



  Load Region LR$$.ARM.__AT_0x1FFFF800 (Base: 0x1ffff800, Size: 0x00000010, Max: 0x00000010, ABSOLUTE)

    Execution Region ER$$.ARM.__AT_0x1FFFF800 (Base: 0x1ffff800, Size: 0x00000010, Max: 0x00000010, ABSOLUTE, UNINIT)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x1ffff800   0x00000010   Code   RO           11    .ARM.__AT_0x1FFFF800  stm32f10xopt.o


================================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

       436        106          0         13          0        991   blinky.o
       728         26        128          0          0       3770   lcd_4bit.o
        48          0          0          8          0       3832   retarget.o
        52          4          0          0          0        486   serial.o
       796         72          0          0          0       1901   stm32_init.o
        28          4        236          0        512       1776   stm32f10x.o
        16         16          0          0          0        208   stm32f10xopt.o

    ------------------------------------------------------------------------
      2104        228      16780         24        512      12964   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         0          0      16384          3          0          0   (incl. Padding)

    ------------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        12          4          0          0          0          0   entry.o
        30          0          0          0          0          0   handlers.o
        46         14          0          0          0          0   init.o
        32          0          0          0          0          0   llshl.o
        30          0          0          0          0          0   llushr.o
      1224         54          0          0          0          0   printf8.o
         0          0          0          0          0          0   stubs.o
        84          0          0          0          0          0   uldiv.o

    ------------------------------------------------------------------------
      1464         72          0          0          0          0   Library Totals
         6          0          0          0          0          0   (incl. Padding)

    ------------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1458         72          0          0          0          0   mc_w.l

    ------------------------------------------------------------------------
      1464         72          0          0          0          0   Library Totals

    ------------------------------------------------------------------------

================================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      3568        300      16780         24        512      12964   Grand Totals
      3568        300      16780         24        512      12964   ELF Image Totals
      3568        300      16780         24          0          0   ROM Totals

================================================================================

    Total RO  Size (Code + RO Data)                20348 (  19.87kB)
    Total RW  Size (RW Data + ZI Data)               536 (   0.52kB)
    Total ROM Size (Code + RO Data + RW Data)      20372 (  19.89kB)

================================================================================

