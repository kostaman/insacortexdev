ARM Linker, RVCT3.1 [Build 942] for uVision [Evaluation]

================================================================================

Section Cross References

    stm32f10x.o(RESET) refers to stm32f10x.o(STACK) for __initial_sp
    stm32f10x.o(RESET) refers to stm32f10x.o(.text) for Reset_Handler
    stm32f10x.o(RESET) refers to can.o(.text) for USB_HP_CAN_TX_IRQHandler
    stm32f10x.o(.text) refers to entry.o($$startup$$) for __main
    lcd_4bit.o(.text) refers to lcd_4bit.o(.constdata) for SWAP_DATA
    can.o(.text) refers to stm32_init.o(.text) for stm32_GetPCLK1
    can.o(.text) refers to can.o(.data) for CAN_TxRdy
    can.o(.text) refers to can.o(.bss) for CAN_RxMsg
    candemo.o(.text) refers to lcd_4bit.o(.text) for set_cursor
    candemo.o(.text) refers to can.o(.text) for CAN_setup
    candemo.o(.text) refers to stm32_init.o(.text) for stm32_Init
    candemo.o(.text) refers to candemo.o(.data) for hex_chars
    candemo.o(.text) refers to can.o(.bss) for CAN_TxMsg
    candemo.o(.text) refers to can.o(.data) for CAN_TxRdy
    entry.o($$startup$$) refers to init.o(.text) for __init
    entry.o($$startup$$) refers to stm32f10x.o(STACK) for __initial_sp
    entry.o(__vectab_stack_and_reset_area) refers to stm32f10x.o(STACK) for __initial_sp
    entry.o(__vectab_stack_and_reset_area) refers to entry.o($$startup$$) for __main
    init.o(.text) refers to init.o(.emb_text) for __call_main
    init.o(.text) refers to candemo.o(.text) for main


================================================================================

Removing Unused input sections from the image.

    Removing stm32f10x.o(HEAP), (0 bytes).

1 unused section(s) (total 0 bytes) removed from the image.

================================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../../microlib/init/entry.s              0x00000000   Number         0  entry.o ABSOLUTE
    ../../microlib/init/init.c               0x00000000   Number         0  init.o ABSOLUTE
    CAN.c                                    0x00000000   Number         0  can.o ABSOLUTE
    CanDemo.c                                0x00000000   Number         0  candemo.o ABSOLUTE
    LCD_4bit.c                               0x00000000   Number         0  lcd_4bit.o ABSOLUTE
    STM32F10x.s                              0x00000000   Number         0  stm32f10x.o ABSOLUTE
    STM32_Init.c                             0x00000000   Number         0  stm32_init.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    RESET                                    0x08000000   Section      236  stm32f10x.o(RESET)
    $$startup$$                              0x080000ec   Section       12  entry.o($$startup$$)
    .emb_text                                0x080000f8   Section        2  init.o(.emb_text)
    .text                                    0x080000fc   Section       44  init.o(.text)
    i.__scatterload_copy                     0x08000128   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x08000136   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x08000138   Section       14  handlers.o(i.__scatterload_zeroinit)
    .text                                    0x08004168   Section       28  stm32f10x.o(.text)
    .text                                    0x08004184   Section      600  stm32_init.o(.text)
    .text                                    0x080043dc   Section      728  lcd_4bit.o(.text)
    delay                                    0x080043dd   Thumb Code    14  lcd_4bit.o(.text)
    lcd_read_status                          0x080043eb   Thumb Code   168  lcd_4bit.o(.text)
    wait_while_busy                          0x08004493   Thumb Code    20  lcd_4bit.o(.text)
    lcd_write_data                           0x08004515   Thumb Code    34  lcd_4bit.o(.text)
    .text                                    0x080046b4   Section     1040  can.o(.text)
    .text                                    0x08004ac4   Section      468  candemo.o(.text)
    .constdata                               0x08004c98   Section      128  lcd_4bit.o(.constdata)
    .data                                    0x20000000   Section       10  can.o(.data)
    CAN_filterIdx@CAN_wrFilter_0             0x20000008   Data           2  can.o(.data)
    .data                                    0x2000000c   Section       41  candemo.o(.data)
    disp_buf@val_display_0                   0x20000024   Data          17  candemo.o(.data)
    .bss                                     0x20000038   Section       32  can.o(.bss)
    STACK                                    0x20000058   Section      512  stm32f10x.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$M$P$D$K$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  candemo.o ABSOLUTE
    __decompress                              - Undefined Weak Reference
    __Vectors                                0x08000000   Data           4  stm32f10x.o(RESET)
    __main                                   0x080000ed   Thumb Code     8  entry.o($$startup$$)
    __call_main                              0x080000f9   Thumb Code     2  init.o(.emb_text)
    __init                                   0x080000fd   Thumb Code    30  init.o(.text)
    __scatterload_rt2                        0x080000fd   Thumb Code     0  init.o(.text)
    __scatterload_copy                       0x08000129   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x08000137   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x08000139   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    Region$$Table$$Base                      0x08000148   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x08000168   Number         0  anon$$obj.o(Region$$Table)
    Reset_Handler                            0x08004169   Thumb Code     4  stm32f10x.o(.text)
    NMI_Handler                              0x0800416d   Thumb Code     2  stm32f10x.o(.text)
    HardFault_Handler                        0x0800416f   Thumb Code     2  stm32f10x.o(.text)
    MemManage_Handler                        0x08004171   Thumb Code     2  stm32f10x.o(.text)
    BusFault_Handler                         0x08004173   Thumb Code     2  stm32f10x.o(.text)
    UsageFault_Handler                       0x08004175   Thumb Code     2  stm32f10x.o(.text)
    SVC_Handler                              0x08004177   Thumb Code     2  stm32f10x.o(.text)
    DebugMon_Handler                         0x08004179   Thumb Code     2  stm32f10x.o(.text)
    PendSV_Handler                           0x0800417b   Thumb Code     2  stm32f10x.o(.text)
    SysTick_Handler                          0x0800417d   Thumb Code     2  stm32f10x.o(.text)
    ADC_IRQHandler                           0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    CAN_RX1_IRQHandler                       0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    CAN_SCE_IRQHandler                       0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel1_IRQHandler                   0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel2_IRQHandler                   0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel3_IRQHandler                   0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel4_IRQHandler                   0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel5_IRQHandler                   0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel6_IRQHandler                   0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    DMAChannel7_IRQHandler                   0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    EXTI0_IRQHandler                         0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    EXTI15_10_IRQHandler                     0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    EXTI1_IRQHandler                         0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    EXTI2_IRQHandler                         0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    EXTI3_IRQHandler                         0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    EXTI4_IRQHandler                         0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    EXTI9_5_IRQHandler                       0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    FLASH_IRQHandler                         0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    I2C1_ER_IRQHandler                       0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    I2C1_EV_IRQHandler                       0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    I2C2_ER_IRQHandler                       0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    I2C2_EV_IRQHandler                       0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    PVD_IRQHandler                           0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    RCC_IRQHandler                           0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    RTCAlarm_IRQHandler                      0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    RTC_IRQHandler                           0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    SPI1_IRQHandler                          0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    SPI2_IRQHandler                          0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    TAMPER_IRQHandler                        0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    TIM1_BRK_IRQHandler                      0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    TIM1_CC_IRQHandler                       0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    TIM1_TRG_COM_IRQHandler                  0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    TIM1_UP_IRQHandler                       0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    TIM2_IRQHandler                          0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    TIM3_IRQHandler                          0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    TIM4_IRQHandler                          0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    USART1_IRQHandler                        0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    USART2_IRQHandler                        0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    USART3_IRQHandler                        0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    USBWakeUp_IRQHandler                     0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    WWDG_IRQHandler                          0x0800417f   Thumb Code     0  stm32f10x.o(.text)
    stm32_EfiSetup                           0x08004185   Thumb Code     8  stm32_init.o(.text)
    stm32_ClockSetup                         0x0800418d   Thumb Code    52  stm32_init.o(.text)
    stm32_NvicSetup                          0x080041c1   Thumb Code     4  stm32_init.o(.text)
    stm32_IwdgSetup                          0x080041c5   Thumb Code    32  stm32_init.o(.text)
    stm32_SysTickSetup                       0x080041e5   Thumb Code    28  stm32_init.o(.text)
    stm32_RtcSetup                           0x08004201   Thumb Code   182  stm32_init.o(.text)
    stm32_TimerSetup                         0x080042b7   Thumb Code    10  stm32_init.o(.text)
    stm32_GpioSetup                          0x080042c1   Thumb Code    34  stm32_init.o(.text)
    stm32_UsartSetup                         0x080042e3   Thumb Code     8  stm32_init.o(.text)
    stm32_ExtiSetup                          0x080042eb   Thumb Code    34  stm32_init.o(.text)
    stm32_AfRemapSetup                       0x0800430d   Thumb Code    24  stm32_init.o(.text)
    stm32_TamperSetup                        0x08004325   Thumb Code   102  stm32_init.o(.text)
    stm32_Init                               0x0800438b   Thumb Code    16  stm32_init.o(.text)
    stm32_GetPCLK1                           0x0800439b   Thumb Code     4  stm32_init.o(.text)
    lcd_write_4bit                           0x080044a7   Thumb Code    76  lcd_4bit.o(.text)
    lcd_write_cmd                            0x080044f3   Thumb Code    34  lcd_4bit.o(.text)
    lcd_putchar                              0x08004537   Thumb Code    12  lcd_4bit.o(.text)
    lcd_init                                 0x08004543   Thumb Code   158  lcd_4bit.o(.text)
    set_cursor                               0x080045e1   Thumb Code    30  lcd_4bit.o(.text)
    lcd_clear                                0x080045ff   Thumb Code    18  lcd_4bit.o(.text)
    lcd_print                                0x08004611   Thumb Code    22  lcd_4bit.o(.text)
    lcd_bargraph                             0x08004627   Thumb Code    52  lcd_4bit.o(.text)
    lcd_bargraphXY                           0x0800465b   Thumb Code    64  lcd_4bit.o(.text)
    CAN_setup                                0x080046b5   Thumb Code   222  can.o(.text)
    CAN_start                                0x08004793   Thumb Code    30  can.o(.text)
    CAN_testmode                             0x080047b1   Thumb Code    36  can.o(.text)
    CAN_waitReady                            0x080047d5   Thumb Code    22  can.o(.text)
    CAN_wrMsg                                0x080047eb   Thumb Code   202  can.o(.text)
    CAN_rdMsg                                0x080048b5   Thumb Code   180  can.o(.text)
    CAN_wrFilter                             0x08004969   Thumb Code   208  can.o(.text)
    USB_HP_CAN_TX_IRQHandler                 0x08004a39   Thumb Code    52  can.o(.text)
    USB_LP_CAN_RX0_IRQHandler                0x08004a6d   Thumb Code    28  can.o(.text)
    Hex_Str                                  0x08004ac5   Thumb Code    38  candemo.o(.text)
    delay                                    0x08004aeb   Thumb Code    10  candemo.o(.text)
    adc_Init                                 0x08004af5   Thumb Code    68  candemo.o(.text)
    adc_Get                                  0x08004b39   Thumb Code    28  candemo.o(.text)
    val_display                              0x08004b55   Thumb Code    52  candemo.o(.text)
    can_Init                                 0x08004b89   Thumb Code    32  candemo.o(.text)
    main                                     0x08004ba9   Thumb Code   136  candemo.o(.text)
    SWAP_DATA                                0x08004c98   Data          64  lcd_4bit.o(.constdata)
    UserFont                                 0x08004cd8   Data          64  lcd_4bit.o(.constdata)
    CAN_TxRdy                                0x20000000   Data           4  can.o(.data)
    CAN_RxRdy                                0x20000004   Data           4  can.o(.data)
    val_Tx                                   0x2000000c   Data           4  candemo.o(.data)
    val_Rx                                   0x20000010   Data           4  candemo.o(.data)
    hex_chars                                0x20000014   Data          16  candemo.o(.data)
    CAN_TxMsg                                0x20000038   Data          16  can.o(.bss)
    CAN_RxMsg                                0x20000048   Data          16  can.o(.bss)
    __initial_sp                             0x20000258   Number         0  stm32f10x.o(STACK)


================================================================================

Memory Map of the image

  Image Entry point : 0x08004169

  Load Region LR_IROM1 (Base: 0x08000000, Size: 0x00004d50, Max: 0x00080000, ABSOLUTE)

    Execution Region ER_IROM1 (Base: 0x08000000, Size: 0x00000168, Max: 0x00080000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08000000   0x000000ec   Data   RO            3    RESET               stm32f10x.o
    0x080000ec   0x0000000c   Code   RO          161  * $$startup$$         entry.o(mc_w.l)
    0x080000f8   0x00000002   Code   RO          167    .emb_text           init.o(mc_w.l)
    0x080000fa   0x00000002   PAD
    0x080000fc   0x0000002c   Code   RO          166    .text               init.o(mc_w.l)
    0x08000128   0x0000000e   Code   RO          173    i.__scatterload_copy  handlers.o(mc_w.l)
    0x08000136   0x00000002   Code   RO          175    i.__scatterload_null  handlers.o(mc_w.l)
    0x08000138   0x0000000e   Code   RO          174    i.__scatterload_zeroinit  handlers.o(mc_w.l)
    0x08000146   0x00000002   PAD
    0x08000148   0x00000020   Data   RO          170    Region$$Table       anon$$obj.o


    Execution Region ER_IROM2 (Base: 0x08004168, Size: 0x00000bb0, Max: 0xffffffff, ABSOLUTE, FIXED)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x08004168   0x0000001c   Code   RO            4  * .text               stm32f10x.o
    0x08004184   0x00000258   Code   RO           11    .text               stm32_init.o
    0x080043dc   0x000002d8   Code   RO          111    .text               lcd_4bit.o
    0x080046b4   0x00000410   Code   RO          124    .text               can.o
    0x08004ac4   0x000001d4   Code   RO          144    .text               candemo.o
    0x08004c98   0x00000080   Data   RO          112    .constdata          lcd_4bit.o


    Execution Region RW_IRAM1 (Base: 0x20000000, Size: 0x00000038, Max: 0x00018000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x0000000a   Data   RW          125    .data               can.o
    0x2000000a   0x00000002   PAD
    0x2000000c   0x00000029   Data   RW          145    .data               candemo.o


    Execution Region RW_IRAM2 (Base: 0x20000038, Size: 0x00000220, Max: 0x00018000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000038   0x00000020   Zero   RW          126    .bss                can.o
    0x20000058   0x00000200   Zero   RW            1    STACK               stm32f10x.o


================================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      1040         60          0         10         32       2529   can.o
       468        104          0         41          0       1763   candemo.o
       728         26        128          0          0       3750   lcd_4bit.o
       600         62          0          0          0       3193   stm32_init.o
        28          4        236          0        512       1590   stm32f10x.o

    ------------------------------------------------------------------------
      2864        256      16780         56        544      12828   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         0          0      16384          5          0          3   (incl. Padding)

    ------------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        12          4          0          0          0          0   entry.o
        30          0          0          0          0          0   handlers.o
        46         14          0          0          0          0   init.o

    ------------------------------------------------------------------------
        92         18          0          0          0          0   Library Totals
         4          0          0          0          0          0   (incl. Padding)

    ------------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

        88         18          0          0          0          0   mc_w.l

    ------------------------------------------------------------------------
        92         18          0          0          0          0   Library Totals

    ------------------------------------------------------------------------

================================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      2956        274      16780         56        544      12828   Grand Totals
      2956        274      16780         56        544      12828   ELF Image Totals
      2956        274      16780         56          0          0   ROM Totals

================================================================================

    Total RO  Size (Code + RO Data)                19736 (  19.27kB)
    Total RW  Size (RW Data + ZI Data)               600 (   0.59kB)
    Total ROM Size (Code + RO Data + RW Data)      19792 (  19.33kB)

================================================================================

