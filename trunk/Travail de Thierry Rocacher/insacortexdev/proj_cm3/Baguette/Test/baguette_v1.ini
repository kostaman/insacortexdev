Signal void Baguette (void)
{
	unsigned char i;
	unsigned int PortB_tmp ;
	printf("Voila la baguette \n");
	while (1) {
			PortB_tmp = PORTB;
			for (i=8;i<16;i++)
			{
		 		if (PortB_tmp&(1<<i)) printf(" ");
		 		else printf("*");
			}
		 	printf("\n");  
		 
  			swatch(0.001); // microseconde
	}
}

Signal void Baguette_Inversee (void)
{
	unsigned char i;
	unsigned int PortB_tmp ;
	printf("Voila la baguette \n");
	while (1) {
			PortB_tmp = PORTB;
			for (i=8;i<16;i++)
			{
		 		if (PortB_tmp&(1<<i)) printf("*");
		 		else printf(" ");
			}
		 	printf("\n");  
		 
  			swatch(0.001); // microseconde
	}
}

Signal void Accel (void)
{
	unsigned char i;
	float delta ;

	delta  = 3.0/0.1*0.0005 ; // pente de 14 uint  par 0.5ms => V/0.5ms
	printf("ça secoue graave \n");
	ADC1_IN0 = 1.65;
	ADC1_IN1 = 1.65;
	while (1) {
			while (ADC1_IN0 < 3.2)
			{
				ADC1_IN0=ADC1_IN0+delta;
				ADC1_IN1=ADC1_IN1+delta;
  				twatch(PCLK2/2000); // ms
			}
			twatch(PCLK2*80/1000);
			while (ADC1_IN0 >0.1 )
			{
				ADC1_IN0=ADC1_IN0-delta;
				ADC1_IN1=ADC1_IN1-delta;
  				twatch(PCLK2/2000); // ms
			}
			twatch(PCLK2*50/1000);

	}
}

KILL button *
define button "Lance baguette","Baguette()"
define button "Lance baguette Inversee","Baguette_Inversee()"
define button "Lance secouée","Accel()"
define button  "voir Taches","LA ADC1_IN0; LA ADC1_IN1; LA PORTB"
