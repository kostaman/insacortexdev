%!PS-Adobe-2.0 EPSF-2.0
%%Title: ./DFIG-figures/specifTacheGenererConsigne2.fig
%%Creator: fig2dev Version 3.2 Patchlevel 5-alpha5
%%CreationDate: Mon Nov 13 16:22:08 2006
%%For: malg@lesia09-03 (,,,)
%%BoundingBox: 0 0 461 558
%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def
/col32 {0.557 0.557 0.557 srgb} bind def

end
save
newpath 0 558 moveto 0 0 lineto 461 0 lineto 461 558 lineto closepath clip newpath
-158.0 740.6 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06299 0.06299 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 100
% Polyline
0 slj
0 slc
7.500 slw
n 6615 8010 m 6480 7740 l 6615 7470 l 6750 7740 l
 6615 8010 l  cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
n 2625 2925 m 2520 2925 2520 11370 105 arcto 4 {pop} repeat
  2520 11475 9705 11475 105 arcto 4 {pop} repeat
  9810 11475 9810 3030 105 arcto 4 {pop} repeat
  9810 2925 2625 2925 105 arcto 4 {pop} repeat
 cp gs col7 1.00 shd ef gr gs col0 s gr 
/Helvetica ff 180.00 scf sf
2790 3150 m
gs 1 -1 sc (Activity GenererConsigne) col0 sh gr
% here ends figure;
% 
% here starts figure with depth 50
% Polyline
0 slj
0 slc
7.500 slw
n 4140 3915 m
 4140 4230 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 276.00 261.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 4005 4095 m
 4275 4095 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 267.00 273.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 4275 4095 m
 4275 4230 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 285.00 273.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 4005 4095 m
 4005 4230 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 267.00 273.00] PATmp PATsp ef gr PATusp gs col0 s gr 
% Polyline
n 6885 5715 m 7920 5715 l 7920 6255 l 6885 6255 l
 cp gs col0 s gr 
/Times-Roman ff 180.00 scf sf
7110 5940 m
gs 1 -1 sc (Marche) col0 sh gr
/Times-Roman ff 180.00 scf sf
7110 6195 m
gs 1 -1 sc ([True]) col0 sh gr
% Polyline
n 8700 5715 m 8595 5715 8595 6150 105 arcto 4 {pop} repeat
  8595 6255 9615 6255 105 arcto 4 {pop} repeat
  9720 6255 9720 5820 105 arcto 4 {pop} repeat
  9720 5715 8700 5715 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
/Times-Roman ff 180.00 scf sf
8685 5985 m
gs 1 -1 sc (Envoyer) col0 sh gr
/Times-Roman ff 180.00 scf sf
8685 6240 m
gs 1 -1 sc (Marche) col0 sh gr
% Polyline
n 6616 7515 m 6435 7785 l 6616 8055 l 6795 7785 l
 6616 7515 l  cp gs col0 s gr 
% Polyline
n 7200 7605 m 7358 7830 l 7515 7605 l
 7200 7605 l  cp gs col0 s gr 
% Polyline
n 7200 8055 m 7358 7830 l 7515 8055 l
 7200 8055 l  cp gs col0 s gr 
% Polyline
n 6045 8865 m 5940 8865 5940 9480 105 arcto 4 {pop} repeat
  5940 9585 7950 9585 105 arcto 4 {pop} repeat
  8055 9585 8055 8970 105 arcto 4 {pop} repeat
  8055 8865 6045 8865 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
/Times-Roman ff 180.00 scf sf
6480 9135 m
gs 1 -1 sc (Calculer) col0 sh gr
/Times-Roman ff 180.00 scf sf
6480 9390 m
gs 1 -1 sc (Consigne) col0 sh gr
% Polyline
n 6675 10395 m 6570 10395 6570 10830 105 arcto 4 {pop} repeat
  6570 10935 7590 10935 105 arcto 4 {pop} repeat
  7695 10935 7695 10500 105 arcto 4 {pop} repeat
  7695 10395 6675 10395 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
/Times-Roman ff 180.00 scf sf
6660 10665 m
gs 1 -1 sc (Envoyer) col0 sh gr
/Times-Roman ff 180.00 scf sf
6660 10920 m
gs 1 -1 sc (Consigne) col0 sh gr
% Polyline
n 5176 8685 m 4995 8955 l 5176 9225 l 5355 8955 l
 5176 8685 l  cp gs col0 s gr 
% Polyline
n 3060 8685 m 4095 8685 l 4095 9225 l 3060 9225 l
 cp gs col0 s gr 
/Times-Roman ff 180.00 scf sf
3285 8910 m
gs 1 -1 sc (Marche) col0 sh gr
/Times-Roman ff 180.00 scf sf
3285 9165 m
gs 1 -1 sc ([False]) col0 sh gr
% Ellipse
n 3780 3330 82 82 0 360 DrawEllipse gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 246.53 216.53] PATmp PATsp ef gr PATusp gs col0 s gr

% Polyline
gs  clippath
3720 3597 m 3720 3750 l 3840 3750 l 3840 3597 l 3840 3597 l 3780 3717 l 3720 3597 l cp
eoclip
n 3780 3420 m
 3780 3735 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 252.00 228.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 3720 3597 m 3780 3717 l 3840 3597 l  col0 s
% Polyline
gs  clippath
4812 4065 m 4965 4065 l 4965 3945 l 4812 3945 l 4812 3945 l 4932 4005 l 4812 4065 l cp
eoclip
n 4320 4005 m
 4950 4005 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 288.00 267.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 4812 4065 m 4932 4005 l 4812 3945 l  col0 s
% Polyline
gs  clippath
7107 4065 m 7260 4065 l 7260 3945 l 7107 3945 l 7107 3945 l 7227 4005 l 7107 4065 l cp
eoclip
n 6750 4005 m
 7245 4005 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 450.00 267.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 7107 4065 m 7227 4005 l 7107 3945 l  col0 s
% Polyline
gs  clippath
7635 4542 m 7635 4695 l 7755 4695 l 7755 4542 l 7755 4542 l 7695 4662 l 7635 4542 l cp
eoclip
n 7695 4185 m
 7695 4680 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 513.00 279.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 7635 4542 m 7695 4662 l 7755 4542 l  col0 s
% Polyline
n 7245 3780 m 8100 3780 l 8100 4185 l 7245 4185 l
 cp gs col0 s gr 
% Polyline
gs  clippath
7320 5577 m 7320 5730 l 7440 5730 l 7440 5577 l 7440 5577 l 7380 5697 l 7320 5577 l cp
eoclip
n 7380 5220 m
 7380 5715 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 492.00 348.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 7320 5577 m 7380 5697 l 7440 5577 l  col0 s
% Polyline
n 6495 4635 m 6390 4635 6390 5115 105 arcto 4 {pop} repeat
  6390 5220 8445 5220 105 arcto 4 {pop} repeat
  8550 5220 8550 4740 105 arcto 4 {pop} repeat
  8550 4635 6495 4635 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
n 5055 3690 m 4950 3690 4950 4170 105 arcto 4 {pop} repeat
  4950 4275 6645 4275 105 arcto 4 {pop} repeat
  6750 4275 6750 3795 105 arcto 4 {pop} repeat
  6750 3690 5055 3690 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
n 3255 3690 m 3150 3690 3150 4260 105 arcto 4 {pop} repeat
  3150 4365 4215 4365 105 arcto 4 {pop} repeat
  4320 4365 4320 3795 105 arcto 4 {pop} repeat
  4320 3690 3255 3690 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
gs  clippath
8457 6045 m 8610 6045 l 8610 5925 l 8457 5925 l 8457 5925 l 8577 5985 l 8457 6045 l cp
eoclip
n 7920 5985 m
 8595 5985 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 528.00 399.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 8457 6045 m 8577 5985 l 8457 5925 l  col0 s
% Polyline
gs  clippath
6600 6342 m 6600 6495 l 6720 6495 l 6720 6342 l 6720 6342 l 6660 6462 l 6600 6342 l cp
eoclip
n 6660 5220 m
 6660 6480 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 444.00 348.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 6600 6342 m 6660 6462 l 6720 6342 l  col0 s
% Polyline
n 6030 6480 m 7155 6480 l 7155 7110 l 6030 7110 l
 cp gs col0 s gr 
% Polyline
gs  clippath
6555 7377 m 6555 7530 l 6675 7530 l 6675 7377 l 6675 7377 l 6615 7497 l 6555 7377 l cp
eoclip
n 6615 7110 m
 6615 7515 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 441.00 474.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 6555 7377 m 6615 7497 l 6675 7377 l  col0 s
% Polyline
gs  clippath
6555 8322 m 6555 8475 l 6675 8475 l 6675 8322 l 6675 8322 l 6615 8442 l 6555 8322 l cp
eoclip
n 6615 8055 m
 6615 8460 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 441.00 537.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 6555 8322 m 6615 8442 l 6675 8322 l  col0 s
% Polyline
15.000 slw
n 6345 8460 m
 7560 8460 l gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
7275 8322 m 7275 8475 l 7395 8475 l 7395 8322 l 7395 8322 l 7335 8442 l 7275 8322 l cp
eoclip
n 7335 8055 m
 7335 8460 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 489.00 537.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 7275 8322 m 7335 8442 l 7395 8322 l  col0 s
% Polyline
gs  clippath
6870 8727 m 6870 8880 l 6990 8880 l 6990 8727 l 6990 8727 l 6930 8847 l 6870 8727 l cp
eoclip
n 6930 8460 m
 6930 8865 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 462.00 564.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 6870 8727 m 6930 8847 l 6990 8727 l  col0 s
% Polyline
gs  clippath
6870 9852 m 6870 10005 l 6990 10005 l 6990 9852 l 6990 9852 l 6930 9972 l 6870 9852 l cp
eoclip
n 6930 9585 m
 6930 9990 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 462.00 639.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 6870 9852 m 6930 9972 l 6990 9852 l  col0 s
% Polyline
15.000 slw
n 6570 9990 m
 7245 9990 l gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
7050 10257 m 7050 10410 l 7170 10410 l 7170 10257 l 7170 10257 l 7110 10377 l 7050 10257 l cp
eoclip
n 7110 9990 m
 7110 10395 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 474.00 666.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 7050 10257 m 7110 10377 l 7170 10257 l  col0 s
% Polyline
gs  clippath
5235 9363 m 5235 9210 l 5115 9210 l 5115 9363 l 5115 9363 l 5175 9243 l 5235 9363 l cp
eoclip
n 6660 9990 m 6660 10215 l 5175 10215 l
 5175 9225 l gs col0 s gr gr

% arrowhead
n 5235 9363 m 5175 9243 l 5115 9363 l  col0 s
% Polyline
gs  clippath
4233 8895 m 4080 8895 l 4080 9015 l 4233 9015 l 4233 9015 l 4113 8955 l 4233 8895 l cp
eoclip
n 4995 8955 m
 4095 8955 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 273.00 597.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 4233 8895 m 4113 8955 l 4233 9015 l  col0 s
% Polyline
gs  clippath
6297 7845 m 6450 7845 l 6450 7725 l 6297 7725 l 6297 7725 l 6417 7785 l 6297 7845 l cp
eoclip
n 5175 8685 m 5175 7785 l
 6435 7785 l gs col0 s gr gr

% arrowhead
n 6297 7845 m 6417 7785 l 6297 7725 l  col0 s
% Polyline
gs  clippath
3495 9492 m 3495 9645 l 3615 9645 l 3615 9492 l 3615 9492 l 3555 9612 l 3495 9492 l cp
eoclip
n 3555 9225 m
 3555 9630 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 237.00 615.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 3495 9492 m 3555 9612 l 3615 9492 l  col0 s
% Polyline
n 3075 9630 m 2970 9630 2970 10065 105 arcto 4 {pop} repeat
  2970 10170 3990 10170 105 arcto 4 {pop} repeat
  4095 10170 4095 9735 105 arcto 4 {pop} repeat
  4095 9630 3075 9630 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
gs  clippath
3495 10482 m 3495 10635 l 3615 10635 l 3615 10482 l 3615 10482 l 3555 10602 l 3495 10482 l cp
eoclip
n 3555 10170 m
 3555 10620 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 237.00 678.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 3495 10482 m 3555 10602 l 3615 10482 l  col0 s
% Polyline
15.000 slw
n 3195 10620 m
 3960 10620 l gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
3765 11067 m 3765 11220 l 3885 11220 l 3885 11067 l 3885 11067 l 3825 11187 l 3765 11067 l cp
eoclip
n 3825 10620 m
 3825 11205 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 255.00 708.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 3765 11067 m 3825 11187 l 3885 11067 l  col0 s
% Polyline
n 3645 11205 m 4680 11205 l 4680 11745 l 3645 11745 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
gs  clippath
3012 4065 m 3165 4065 l 3165 3945 l 3012 3945 l 3012 3945 l 3132 4005 l 3012 4065 l cp
eoclip
n 3375 10620 m 3375 11070 l 2745 11070 l 2745 4005 l
 3150 4005 l gs col0 s gr gr

% arrowhead
n 3012 4065 m 3132 4005 l 3012 3945 l  col0 s
% Polyline
n 6615 11205 m 7650 11205 l 7650 11745 l 6615 11745 l
 cp gs col7 1.00 shd ef gr gs col0 s gr 
% Polyline
gs  clippath
7050 11067 m 7050 11220 l 7170 11220 l 7170 11067 l 7170 11067 l 7110 11187 l 7050 11067 l cp
eoclip
n 7110 10935 m
 7110 11205 l gs /PC [[0.00 0.00 0.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 474.00 729.00] PATmp PATsp ef gr PATusp gs col0 s gr gr

% arrowhead
n 7050 11067 m 7110 11187 l 7170 11067 l  col0 s
% Polyline
gs  clippath
4350 11067 m 4350 11220 l 4470 11220 l 4470 11067 l 4470 11067 l 4410 11187 l 4350 11067 l cp
eoclip
n 9180 6255 m 9180 10980 l 4410 10980 l
 4410 11205 l gs col0 s gr gr

% arrowhead
n 4350 11067 m 4410 11187 l 4470 11067 l  col0 s
/Times-Roman ff 180.00 scf sf
3375 4185 m
gs 1 -1 sc (Station) col0 sh gr
/Times-Roman ff 180.00 scf sf
3330 3960 m
gs 1 -1 sc (Attente) col0 sh gr
/Times-Roman ff 180.00 scf sf
5040 3960 m
gs 1 -1 sc (Recherche Position) col0 sh gr
/Times-Roman ff 180.00 scf sf
5040 4215 m
gs 1 -1 sc (A Atteindre) col0 sh gr
/Times-Roman ff 180.00 scf sf
7335 4050 m
gs 1 -1 sc (Position) col0 sh gr
/Times-Roman ff 180.00 scf sf
6615 4905 m
gs 1 -1 sc (Calculer Parametre) col0 sh gr
/Times-Roman ff 180.00 scf sf
7020 5160 m
gs 1 -1 sc (Rampe) col0 sh gr
/Times-Roman ff 180.00 scf sf
6120 6750 m
gs 1 -1 sc (Parametre) col0 sh gr
/Times-Roman ff 180.00 scf sf
6120 7005 m
gs 1 -1 sc (Rampe) col0 sh gr
/Times-Roman ff 180.00 scf sf
7245 7560 m
gs 1 -1 sc (10ms) col0 sh gr
/Times-Roman ff 180.00 scf sf
4005 8190 m
gs 1 -1 sc ([PositionAtteinte=False]) col0 sh gr
/Times-Roman ff 180.00 scf sf
4365 8865 m
gs 1 -1 sc ([else]) col0 sh gr
/Times-Roman ff 180.00 scf sf
3060 9900 m
gs 1 -1 sc (Envoyer) col0 sh gr
/Times-Roman ff 180.00 scf sf
3285 10155 m
gs 1 -1 sc (Arret) col0 sh gr
/Times-Roman ff 180.00 scf sf
3780 11520 m
gs 1 -1 sc (Marche) col0 sh gr
/Times-Roman ff 180.00 scf sf
6750 11520 m
gs 1 -1 sc (Consigne) col0 sh gr
/Times-Roman ff 180.00 scf sf
5670 3150 m
gs 1 -1 sc (<<Active>>) col0 sh gr
% here ends figure;
$F2psEnd
rs
end
showpage
%%Trailer
%EOF
