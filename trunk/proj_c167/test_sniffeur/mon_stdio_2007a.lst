C166 COMPILER V6.08, MON_STDIO_2007A                                                       12/11/2008 08:49:48 PAGE 1   


C166 COMPILER V6.08, COMPILATION OF MODULE MON_STDIO_2007A
OBJECT MODULE PLACED IN .\mon_stdio_2007a.obj
COMPILER INVOKED BY: C:\Keil\Evalsoft\C166\BIN\C166.EXE ..\..\includes\libs\mon_stdio_2007a.c BROWSE INCDIR(..\..\libs_t
                    -hierry\SourceC167\Developpement_Capcom_V2) MOD167 DEBUG PRINT(.\mon_stdio_2007a.lst) OBJECT(.\mon_stdio_2007a.obj) 

 stmt lvl     source

    1         /* STDIO_ASC.c ****************************************************************
    2          *      Entrées-Sorties série via le port asynchrone ASC en simu et en réel       *
    3          *  stdio.h est donc utilisable (printf etc.) et visualisables sur la         *
    4          *  "serial windows #1" de Keil.
    5          *   Septembre 2007 pascal Acco                                                                                           *
    6          ******************************************************************************
    7          ******************************************************************************
    8          * En mode réel, UTILISEZ la clé de compilation et d'assemblage MCB167NET.        *
    9          * En mode  simulé, EFFACEZ cette clé. (Onglets C166 et A166 du projet)           *
   10          ******************************************************************************
   11          * void Init_IO_ASC(void) : il faut lancer cette fonction en premier afin de  *
   12          *                      pouvoir bénéficier de la bibliothèque stdio et effectuer des E/S. *
   13          *                              - Mode réel : les E/S passent par la ligne ASC configurée par *
   14          *                 le moniteur: On fait rien donc !                           *
   15          *                              - Mode simulé : les E/S passent par la liasion série ASC      *
   16          *                                              (visu sur fenêtre SERIAL #1 de KEIL).                     *
   17          *                                                                                                                                                        *
   18          ******************************************************************************/
   19         
   20         #include <c167cs.h>
   21         #include <intrins.h>
   22         
   23         #define Trappe_Logicielle 0x50
   24         
   25           
   26         void Init_Mon_Stdio (void)
   27                 {
   28  1      #if(STDIO==1)
*** WARNING C322 IN LINE 28 OF ..\..\includes\libs\mon_stdio_2007a.c: 'STDIO': unknown identifier
              //# MODE SIMULE # MODE SIMULE # MODE SIMULE # MODE SIMULE # MODE SIMULE # MODE
                      P3 = P3 | 0x0400;               /* La bascule 10 de sortie du port P3 doit être à '1'
                                              car elle est combinée par un ET avec la fonction alternative.
                                                                                                                      (User's Manual, p. 7-7) */
                      DP3 = DP3 | 0x0400;             // ligne P3.10 en sortie - TxD
                      _nop_();                                // pipe-line !   (User's Manual, p. 4-8)
                      DP3 = DP3 & 0xF7FF;             // ligne P3.11 en entrée - RxD
                      _nop_();                                // pipe-line !
                      S0TIC = 0x0080;                 // prêt à émettre, sans IT.
                      S0RIC = 0;                              // rien reçu, sans IT itou.
                      S0BG  = 0x0040;                 // vitesse : 9600 bauds.
              
              /*  S0CON : voir User's Manual, pp. 11-2 et 11-3.
                        S0R   1   Générateur de bauds en marche                       S0CON.15
                        S0LB  0   Usage normal, sans rebouclage                       S0CON.14
                        S0BRS 0   Vitesse définie par S0BG.                           S0CON.13
                        S0ODD 0   Parité.                                                                     S0CON.12
                         ---  0       --                                                                              S0CON.11
                        S0OE  0   RAZ du drapeau d'erreur de débordement      S0CON.10
                        S0FE  0   RAZ du drapeau d'erreur de trame            S0CON.9
                        S0PE  0   RAZ du drapeau d'erreur de parité           S0CON.8
                        S0OEN 0   Ignore les débordements                                     S0CON.7
                        S0FEN 0   Ignore les erreurs de trame                         S0CON.6
                        S0PEN 0   Ignore la parité                                            S0CON.5
                        S0REN 1   RECEPTEUR EN MARCHE !                                       S0CON.4
C166 COMPILER V6.08, MON_STDIO_2007A                                                       12/11/2008 08:49:48 PAGE 2   

                        S0STP 0   Trame avec 1 bit de stop                            S0CON.3
                        S0M   001 Trame avec 8 bits de données, async.        S0CON.2-0
                      ---------------
                      c'est-à-dire  S0CON <-- 1000 0000 0001 0001b = 8011h
               */
                      S0CON = 0x8011;
              #else
   61  1              _nop_ ();
   62  1      #endif
   63  1      //# ENDIF # ENDIF # ENDIF # ENDIF # ENDIF # ENDIF # ENDIF # ENDIF # ENDIF # END
   64  1      }


MODULE INFORMATION:   INITIALIZED  UNINITIALIZED
  CODE SIZE        =           4     --------
  NEAR-CONST SIZE  =    --------     --------
  FAR-CONST SIZE   =    --------     --------
  HUGE-CONST SIZE  =    --------     --------
  XHUGE-CONST SIZE =    --------     --------
  NEAR-DATA SIZE   =    --------     --------
  FAR-DATA SIZE    =    --------     --------
  XHUGE-DATA SIZE  =    --------     --------
  IDATA-DATA SIZE  =    --------     --------
  SDATA-DATA SIZE  =    --------     --------
  BDATA-DATA SIZE  =    --------     --------
  HUGE-DATA SIZE   =    --------     --------
  BIT SIZE         =    --------     --------
  INIT'L SIZE      =    --------     --------
END OF MODULE INFORMATION.


C166 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
