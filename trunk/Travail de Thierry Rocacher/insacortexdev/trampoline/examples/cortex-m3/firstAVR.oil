/* Running the following example:
 *just call goil a first time using the command line:
 *goil --target=cortex-m3 -g --templates=../../goil/templates/ firstAVR.oil
 *(COMPILER, LINKER and ASSEMBLER in OS section may be adapted to your 
 * specific install of avr cross-compiler)
 *
 *Then a Makefile is generated. Just type:
 *make
 *To clean the project, call:
 *make clean
 * It will remove all generated files, except the Makefile.
 */
OIL_VERSION = "2.5" : "test" ;

CPU test {

    OS config {
        STATUS = STANDARD;
        TRAMPOLINE_BASE_PATH = "../..";
        APP_NAME = "firstAVR_bin";
        APP_SRC = "firstAVR_main.c";
       // APP_SRC = "STM32_Init.c";
        CFLAGS  = "-Wall -Os -g -I. -mcpu=cortex-m3 -mthumb"; 
        LDFLAGS = "-Wall -Os -g -I. -mcpu=cortex-m3 -mthumb";
        LDFLAGS = "-T ./Cortex_M.ld";
        ASFLAGS = "-Wall -Os -g -I. -mcpu=cortex-m3 -mthumb -c";
        COMPILER  = "/usr/local/armCortex/bin/arm-eabi-gcc";
        LINKER    = "/usr/local/armCortex/bin/arm-eabi-gcc";
        ASSEMBLER = "/usr/local/armCortex/bin/arm-eabi-gcc";
    } ;


    APPMODE std {
    };

    TASK startTask {
        PRIORITY = 5;
        AUTOSTART = TRUE {APPMODE = std;};
        ACTIVATION = 1;
        SCHEDULE = FULL;
        STACKSIZE = 256;
    };

    TASK secondTask {
        PRIORITY = 4;
        AUTOSTART = FALSE;
        ACTIVATION = 1;
        SCHEDULE = FULL;
        STACKSIZE = 256;
    };

//	COUNTER SystemCounter {
//		TICKSPERBASE = 10;
//		MAXALLOWEDVALUE = 1000;
//		MINCYCLE = 1;
//		SOURCE = TIMER2_OVF_vect;
//	};
//  
//	ALARM periodicAl {
//		COUNTER= SystemCounter;
//		ACTION = ACTIVATETASK {
//			TASK = periodicTask;
//		};
//		AUTOSTART = TRUE {
//			ALARMTIME = 1;
//			CYCLETIME = 1;
//			APPMODE = std;
//		};
//	};
//
//    TASK periodicTask {
//        PRIORITY = 10;
//        AUTOSTART = FALSE;
//        ACTIVATION = 1;
//        SCHEDULE = FULL;
//        STACKSIZE = 256;
//    };
//
//    ISR boutonISR {
//        CATEGORY = 2;
//        PRIORITY = 20;
//        STACKSIZE = 256;
//        TRAP = INT7_vect;
//    };
};
