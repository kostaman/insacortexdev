C166 COMPILER V6.08, TPL_OS_ERROR                                                          06/28/2009 16:38:38 PAGE 1   


C166 COMPILER V6.08, COMPILATION OF MODULE TPL_OS_ERROR
OBJECT MODULE PLACED IN .\objs\tpl_os_error.obj
COMPILER INVOKED BY: C:\Keil\Evalsoft\C166\BIN\C166.EXE ..\..\..\trampoline-1.1\os\tpl_os_error.c TINY BROWSE INCDIR(.\a
                    -rchi_appli;..\..\..\trampoline-1.1\os;..\..\..\trampoline-1.1\com;..\..\..\trampoline-1.1\os\os_machine\c166;..\..\..\tr
                    -ampoline-1.1\goil\templates\c166;..\..\..\trampoline-1.1\debug) MOD167 DEFINE(WITH_COMPILER_SETTINGS) DEBUG PRINT(.\tpl_
                    -os_error.lst) OBJECT(.\objs\tpl_os_error.obj) 

 stmt lvl     source

    1         /**
    2          * @file tpl_os_error.c
    3          *
    4          * @section copyright Copyright
    5          *
    6          * Trampoline OS
    7          *
    8          * Trampoline is copyright (c) IRCCyN 2005+
    9          * Copyright ESEO for function and data structures documentation
   10          * Trampoline is protected by the French intellectual property law.
   11          *
   12          * This software is distributed under the Lesser GNU Public Licence
   13          *
   14          * @section infos File informations
   15          *
   16          * $Date: 2007-11-09 14:33:58 +0100 (Fri, 09 Nov 2007) $
   17          * $Rev: 401 $
   18          * $Author: ayrton $
   19          * $URL: https://trampoline.rts-software.org/svn/trunk/os/tpl_os_error.c $
   20          *
   21          * @section descr File description
   22          *
   23          * Trampoline Errors macros, functions and datatypes header
   24          */
   25         
   26         #include "tpl_os_error.h"
   27         #include "tpl_os_internal_types.h"
   28         
   29         #ifdef WITH_ERROR_HOOK
              
              #include "tpl_os_definitions.h"
              
              #define OS_START_SEC_VAR_UNSPECIFIED
              #include "tpl_memmap.h"
              
              VAR(tpl_service_call_desc, OS_VAR) tpl_service;
              
              #define OS_STOP_SEC_VAR_UNSPECIFIED
              #include "tpl_memmap.h"
              
              
              #define OS_START_SEC_CODE
              #include "tpl_memmap.h"
              
              /**
               * Function used to call the application error hook
               *
               * @param error error code which raised the hook call
               *
               * Do not call it directly, use #PROCESS_ERROR macro
               *
               * @see #PROCESS_ERROR
C166 COMPILER V6.08, TPL_OS_ERROR                                                          06/28/2009 16:38:38 PAGE 2   

               */
              FUNC(void, OS_CODE) tpl_call_error_hook(
                  CONST(tpl_status, AUTOMATIC) error)
              {
              
              /**
               * This flag is used to avoid error hook call recursion
               */
                  _STATIC_ VAR(tpl_bool, AUTOMATIC) in_error_hook = FALSE;
              
                  if (!in_error_hook)
                  {
                      in_error_hook = TRUE;
                      ErrorHook(error);
                      in_error_hook = FALSE;
                  }
              }
              
              #define OS_STOP_SEC_CODE
              #include "tpl_memmap.h"
              
              #endif /* WITH_ERROR_HOOK */
   75         
   76         /* End of file tpl_os_error.c */


MODULE INFORMATION:   INITIALIZED  UNINITIALIZED
  CODE SIZE        =    --------     --------
  NEAR-CONST SIZE  =    --------     --------
  FAR-CONST SIZE   =    --------     --------
  HUGE-CONST SIZE  =    --------     --------
  XHUGE-CONST SIZE =    --------     --------
  NEAR-DATA SIZE   =    --------     --------
  FAR-DATA SIZE    =    --------     --------
  XHUGE-DATA SIZE  =    --------     --------
  IDATA-DATA SIZE  =    --------     --------
  SDATA-DATA SIZE  =    --------     --------
  BDATA-DATA SIZE  =    --------     --------
  HUGE-DATA SIZE   =    --------     --------
  BIT SIZE         =    --------     --------
  INIT'L SIZE      =    --------     --------
END OF MODULE INFORMATION.


C166 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
