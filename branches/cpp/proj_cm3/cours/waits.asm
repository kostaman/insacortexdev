; generated by ARM C/C++ Compiler with , RVCT4.0 [Build 524] for uVision
; commandline ArmCC [--debug -c -S -owaits.o --depend=waits.d --device=DARMSTM --apcs=interwork -O3 -Otime -I. -I..\..\lib_cm3 -I..\..\minilib\include -I..\..\system -IC:\Keil\ARM\INC -IC:\Keil\ARM\INC\ST\STM32F10x -D__MICROLIB --omf_browse=waits.crf waits.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||.text||, CODE, READONLY, ALIGN=2

wait_s32_u8 PROC
        LDR      r2,|L1.112|
        MOVS     r0,#0
        LDRB     r1,[r2,#0]  ; Nombre_D_Appels
        ADDS     r1,r1,#1
        STRB     r1,[r2,#0]
|L1.10|
        ADDS     r0,r0,#1
        CMP      r0,#0xf000
        BLT      |L1.10|
        BX       lr
        ENDP

wait_vs32_vu8 PROC
        LDR      r0,|L1.112|
        LDRB     r1,[r0,#0]  ; Nombre_D_Appels
        ADDS     r1,r1,#1
        STRB     r1,[r0,#0]
        MOVS     r1,#0
        B        |L1.36|
|L1.32|
        LDR      r1,[r0,#4]  ; imbecile
        ADDS     r1,r1,#1
|L1.36|
        STR      r1,[r0,#4]  ; imbecile
        LDR      r1,[r0,#4]  ; imbecile
        CMP      r1,#0xf000
        BLT      |L1.32|
        BX       lr
        ENDP

wait_vu32_su8 PROC
        LDR      r0,|L1.112|
        LDRB     r1,[r0,#0]  ; Nombre_D_Appels
        ADDS     r1,r1,#1
        STRB     r1,[r0,#0]
        LDRB     r1,[r0,#1]  ; Number_Of_Wait_Calls
        ADDS     r1,r1,#1
        STRB     r1,[r0,#1]
        MOVS     r0,#0
|L1.64|
        ADDS     r0,r0,#1
        CMP      r0,#0xf000
        BCC      |L1.64|
        BX       lr
        ENDP

wait_in_reverse_vu32_su8 PROC
        LDR      r0,|L1.112|
        LDRB     r1,[r0,#0]  ; Nombre_D_Appels
        ADDS     r1,r1,#1
        STRB     r1,[r0,#0]
        LDRB     r1,[r0,#2]  ; Number_Of_Wait_Calls
        ADDS     r1,r1,#1
        STRB     r1,[r0,#2]
        MOV      r0,#0xf000
|L1.92|
        SUBS     r0,r0,#1
        BNE      |L1.92|
        BX       lr
        ENDP

Get_Number_Of_Wait_Calls PROC
        LDR      r0,|L1.112|
        LDRB     r0,[r0,#3]  ; Number_Of_Wait_Calls
        BX       lr
        ENDP

Get_Nombre_D_Appels PROC
        LDR      r0,|L1.112|
        LDRB     r0,[r0,#0]  ; Nombre_D_Appels
        BX       lr
        ENDP

        DCW      0x0000
|L1.112|
        DCD      ||.data||

        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.data||, DATA, ALIGN=2

Nombre_D_Appels
        DCB      0x00
Number_Of_Wait_Calls
        DCB      0x00
|symbol_number.8|
        DCB      0x00
|symbol_number.9|
        DCB      0x00
imbecile
        DCD      0x00000000

        EXPORT wait_s32_u8 [CODE]
        EXPORT wait_vs32_vu8 [CODE]
        EXPORT wait_vu32_su8 [CODE]
        EXPORT wait_in_reverse_vu32_su8 [CODE]
        EXPORT Get_Number_Of_Wait_Calls [CODE]
        EXPORT Get_Nombre_D_Appels [CODE]
        EXPORT Nombre_D_Appels [DATA]
        EXPORT imbecile [DATA]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]

        KEEP Number_Of_Wait_Calls
        KEEP |symbol_number.8|
        EXPORTAS |symbol_number.8|, Number_Of_Wait_Calls
        KEEP |symbol_number.9|
        EXPORTAS |symbol_number.9|, Number_Of_Wait_Calls

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
