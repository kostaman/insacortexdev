C166 COMPILER V6.08, COMM_MATLAB_2007A                                                     12/11/2008 08:49:49 PAGE 1   


C166 COMPILER V6.08, COMPILATION OF MODULE COMM_MATLAB_2007A
OBJECT MODULE PLACED IN .\comm_matlab_2007a.obj
COMPILER INVOKED BY: C:\Keil\Evalsoft\C166\BIN\C166.EXE ..\..\includes\libs\comm_matlab_2007a.c BROWSE INCDIR(..\..\libs
                    -_thierry\SourceC167\Developpement_Capcom_V2) MOD167 DEBUG PRINT(.\comm_matlab_2007a.lst) OBJECT(.\comm_matlab_2007a.obj)
                    - 

 stmt lvl     source

    1         #ifndef _COMM_MATLAB_
    2         #define _COMM_MATLAB_
    3         
    4         #include <intrins.h>
    5         #include <stdio.h>
    6         
    7         
    8         //___________________________________________________
    9         // Fonction d'attente 
   10         // Insertion de boucle d'attente pour ne pas assurer 
   11         // la synchronisation dans le dialogue 
   12         
   13         void Attendre(int Valun)
   14         {
   15  1              int indice,indice2 ;
   16  1      
   17  1              for (indice = 0;indice < Valun; indice ++)
   18  1              {
   19  2                  for (indice2 = 0;indice2 < 0xFFFF; indice2 ++)
   20  2                      {
   21  3                              _nop_();
   22  3                              _nop_();
   23  3                              _nop_();
   24  3                              
   25  3                      }
   26  2              } 
   27  1      }
   28         
   29         
   30         
   31         /*************************************************************************/
   32         /***************************      FONCTION                   ************/
   33         /***********************************************************************/
   34         /* fonction d'envoie une séquence d'envoie d'entiers sous forme Ascii */
   35         /*********************************************************************/
   36         
   37         int EcrireMatInt (char *nomMat,int taille, int *vecteur)
   38         {
   39  1              int status ;
   40  1              int boukle ; 
   41  1              
   42  1              printf("#i\n"); /* Code de début de séquence enregistrement Int pour Matalb */
   43  1              scanf("%d",&status);  /*attente de confirmation Matlab */
   44  1              //      printf("J'ai recu %d\n",status); /* Code de début de séquence enregistrement Int pour Matalb */
   45  1          Attendre(1);
   46  1              if (status == 0)  /* ok pour matlab */
   47  1              {
   48  2                      printf("%s\n",nomMat);  /* Envoie du nom de la matrice Matlab */
   49  2                      printf("%d\n",taille);  /* Envoie de la tailel de la matrice Matlab */
   50  2                      for (boukle = 0 ;  boukle < taille ; boukle++) /*  Envoie de la matrice Matlab */
   51  2                      {
   52  3                              printf("%d\n", *(vecteur + boukle) );
   53  3                              /*if(taille % 10==9){
C166 COMPILER V6.08, COMM_MATLAB_2007A                                                     12/11/2008 08:49:49 PAGE 2   

   54  3                                      Attendre(2);
   55  3                              } */
   56  3                      }
   57  2                      scanf("%d",&status);
   58  2              //Attendre(600);
   59  2              } 
   60  1              
   61  1      return status; 
   62  1      }
   63         
   64         /*************************************************************************/
   65         /***************************      FONCTION                   ************/
   66         /***********************************************************************/
   67         /* fonction d'envoie une séquence sous forme binaire */
   68         /*********************************************************************/
   69         
   70         int Envoi_Matrice_En_Binaire (char *nomMat,int taille, int *vecteur)
   71         {
   72  1              int status ;
   73  1              int boukle ;
   74  1              char * vec_byte = vecteur; 
*** WARNING C91 IN LINE 74 OF ..\..\INCLUDES\LIBS\COMM_MATLAB_2007A.C: '=': pointer to different objects
   75  1              
   76  1              printf("#ib\n"); /* Code de début de séquence enregistrement Int pour Matalb */
   77  1              scanf("%d",&status);  /*attente de confirmation Matlab */
   78  1              //      printf("J'ai recu %d\n",status); /* Code de début de séquence enregistrement Int pour Matalb */
   79  1          Attendre(1);
   80  1              if (status == 0)  /* ok pour matlab */
   81  1              {
   82  2                      printf("%s\n",nomMat);  /* Envoie du nom de la matrice Matlab */
   83  2                      printf("%d\n",taille);  /* Envoie de la tailel de la matrice Matlab */
   84  2                      for (boukle = 0 ;  boukle < taille ; boukle++) /*  Envoie de la matrice Matlab */
   85  2                      {
   86  3                              printf("%s%s", *(vec_byte++),*(vec_byte++) );
   87  3                              /*if(taille % 10==9){
   88  3                                      Attendre(2);
   89  3                              } */
   90  3                      }
   91  2                      scanf("%d",&status);
   92  2              //Attendre(600);
   93  2              } 
   94  1              
   95  1      return status; 
   96  1      }
   97         
   98         
   99         #endif


MODULE INFORMATION:   INITIALIZED  UNINITIALIZED
  CODE SIZE        =         242     --------
  NEAR-CONST SIZE  =          25     --------
  FAR-CONST SIZE   =    --------     --------
  HUGE-CONST SIZE  =    --------     --------
  XHUGE-CONST SIZE =    --------     --------
  NEAR-DATA SIZE   =    --------     --------
  FAR-DATA SIZE    =    --------     --------
  XHUGE-DATA SIZE  =    --------     --------
  IDATA-DATA SIZE  =    --------     --------
  SDATA-DATA SIZE  =    --------     --------
  BDATA-DATA SIZE  =    --------     --------
  HUGE-DATA SIZE   =    --------     --------
C166 COMPILER V6.08, COMM_MATLAB_2007A                                                     12/11/2008 08:49:49 PAGE 3   

  BIT SIZE         =    --------     --------
  INIT'L SIZE      =    --------     --------
END OF MODULE INFORMATION.


C166 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
