C166 COMPILER V6.11, MAIN_ENREGISTREUR                                                     01/09/2009 15:42:12 PAGE 1   


C166 COMPILER V6.11, COMPILATION OF MODULE MAIN_ENREGISTREUR
OBJECT MODULE PLACED IN main_enregistreur.OBJ
COMPILER INVOKED BY: C:\Keil\C166\BIN\C166.EXE main_enregistreur.c COMPACT BROWSE INCDIR(..\..\libs_thierry\SourceC167\D
                    -eveloppement_Capcom_V2) MOD167 DEBUG

 stmt lvl     source

    1         //Hugues Malgouyres
    2         //16 10 2006
    3         //Prise en main du controleur de CAN
    4         
    5         //Définir ses clefs dans l'onglet C166 du projet
    6         //ID_VOITURE 0 1 ou 2
    7         //VERBEUX   // active les printf 
    8         //DEBUG     // Active les envois incrémentaux de vitesse et position (pas de périph)
    9         
   10         
   11         #include <c167cs.h>
   12         #include <intrins.h>
   13         #include <rtx166t.h>
   14         #include <stdio.h>
   15         #include "../../includes/libs/driveurs_2008a.h" 
   16         #include "../../includes/libs/lib_autom_2008a.h" 
   17         #include "../../includes/libs/comm_matlab_2007a.h"
   18         
   19         #define NUM_T_SNIFFER           1
   20         #define NUM_T_INIT                      0
   21         
   22         #define PERIODE_SNIFFER         4  //tours de tourniquet à 1ms
   23         #define PERIODE 2000 //ms
   24         #define CRENEAUX 3 // nombre d eplateaux
   25         #define NB_VOITURES 1
   26         
   27         int pTab[PERIODE*CRENEAUX/PERIODE_SNIFFER]      ;
   28         int pVit[PERIODE*CRENEAUX/PERIODE_SNIFFER]      ;
   29         Un_Etat  Voiture;
   30          int Val = 0;
   31         void Tache_Sniffer(void) _task_ NUM_T_SNIFFER
   32         {
   33  1              unsigned int Creneaux,Longueur;
   34  1              int i = 0;
   35  1              
   36  1              char PosName[4]="Pos";
   37  1              char VitName[4]="Vit";
   38  1      
   39  1              for (Creneaux=0;Creneaux<CRENEAUX;Creneaux++)
   40  1              {
   41  2                      Fixe_Rapport((float)Val);
   42  2                      Toggle_Led(2);
   43  2                      for (Longueur=0;Longueur<(PERIODE/PERIODE_SNIFFER);Longueur++)
   44  2                      {
   45  3                              os_wait(K_IVL,PERIODE_SNIFFER,0);
   46  3      
   47  3                              //1 - Lecture de l'état du système global
   48  3                              Voiture = Lire_Etat_Absolu();
   49  3                              pTab[i] = Voiture.Pos; 
   50  3                              pVit[i++] = Voiture.Vit; 
   51  3                              #ifdef VERBEUX
                                      //printf("___________\nCV = %f         CP=%d\n",Voiture.Vit,Voiture.Pos);
                                      #endif
   54  3      
C166 COMPILER V6.11, MAIN_ENREGISTREUR                                                     01/09/2009 15:42:12 PAGE 2   

   55  3                              //1 - Transmettre état local de la voiture
   56  3                      }
   57  2                      if (Val == 1)   Val = -1;
   58  2                      else Val=1;
   59  2      
   60  2              }
   61  1              Toggle_Led(5);
   62  1              EcrireMatInt (PosName,PERIODE*CRENEAUX/PERIODE_SNIFFER, pTab);
   63  1              Toggle_Led(6);
   64  1              EcrireMatInt (VitName,PERIODE*CRENEAUX/PERIODE_SNIFFER, pVit);
   65  1              Toggle_Led(7);
   66  1              while(1);
   67  1      }
   68         
   69          
   70         
   71         void tDemar (void) _task_ NUM_T_INIT
   72         {
   73  1      
   74  1              Configurer_Tout_Les_Periphs();
   75  1              Init_Led();
   76  1              Toggle_Led(1);
   77  1              //Initialiser_Can();
   78  1              
   79  1              //1 - Interruption enabled
   80  1              //IEN   =1;
   81  1      
   82  1              //1 - Initialisation etat trotinette
   83  1      
   84  1              os_create_task (NUM_T_SNIFFER);
   85  1      
   86  1      
   87  1              os_delete_task (NUM_T_INIT);
   88  1      }


MODULE INFORMATION:   INITIALIZED  UNINITIALIZED
  CODE SIZE        =         272     --------
  NEAR-CONST SIZE  =           8     --------
  FAR-CONST SIZE   =    --------     --------
  HUGE-CONST SIZE  =    --------     --------
  XHUGE-CONST SIZE =    --------     --------
  NEAR-DATA SIZE   =           8     --------
  FAR-DATA SIZE    =        6000     --------
  XHUGE-DATA SIZE  =    --------     --------
  IDATA-DATA SIZE  =    --------     --------
  SDATA-DATA SIZE  =    --------     --------
  BDATA-DATA SIZE  =    --------     --------
  HUGE-DATA SIZE   =    --------     --------
  BIT SIZE         =    --------     --------
  INIT'L SIZE      =           6     --------
END OF MODULE INFORMATION.


C166 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
