<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [J:\acco\zipzap\insacortexdev_svn\proj_cm3\Metro\Metro_Version_2009d\metro.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image J:\acco\zipzap\insacortexdev_svn\proj_cm3\Metro\Metro_Version_2009d\metro.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, RVCT4.0 [Build 524]: Last Updated: Fri Sep 04 21:30:34 2009
<BR><P>
<H3>Maximum Stack Usage =         80 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
rt_sys_init &rArr; rt_tsk_create &rArr; rt_dispatch &rArr; rt_switch_req
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[b1496c]">SysTick_Handler</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[b1c694]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b1c694]">NMI_Handler</a><BR>
 <LI><a href="#[b1c658]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b1c658]">HardFault_Handler</a><BR>
 <LI><a href="#[b1c61c]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b1c61c]">MemManage_Handler</a><BR>
 <LI><a href="#[b1c5e0]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b1c5e0]">BusFault_Handler</a><BR>
 <LI><a href="#[b1c5a4]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b1c5a4]">UsageFault_Handler</a><BR>
 <LI><a href="#[b1c52c]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b1c52c]">DebugMon_Handler</a><BR>
 <LI><a href="#[b1c478]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b1c478]">ADC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[b1c6d0]">Reset_Handler</a>
 <LI><a href="#[b1c694]">NMI_Handler</a>
 <LI><a href="#[b1c658]">HardFault_Handler</a>
 <LI><a href="#[b1c61c]">MemManage_Handler</a>
 <LI><a href="#[b1c5e0]">BusFault_Handler</a>
 <LI><a href="#[b1c5a4]">UsageFault_Handler</a>
 <LI><a href="#[b14a20]">SVC_Handler</a>
 <LI><a href="#[b1c52c]">DebugMon_Handler</a>
 <LI><a href="#[b149e4]">PendSV_Handler</a>
 <LI><a href="#[b1496c]">SysTick_Handler</a>
 <LI><a href="#[b1baa0]">WWDG_IRQHandler</a>
 <LI><a href="#[b1bf50]">PVD_IRQHandler</a>
 <LI><a href="#[b1bde8]">TAMPER_IRQHandler</a>
 <LI><a href="#[b1be9c]">RTC_IRQHandler</a>
 <LI><a href="#[b1c07c]">FLASH_IRQHandler</a>
 <LI><a href="#[b1bf14]">RCC_IRQHandler</a>
 <LI><a href="#[b1c220]">EXTI0_IRQHandler</a>
 <LI><a href="#[b1c1a8]">EXTI1_IRQHandler</a>
 <LI><a href="#[b1c16c]">EXTI2_IRQHandler</a>
 <LI><a href="#[b1c130]">EXTI3_IRQHandler</a>
 <LI><a href="#[b1c0f4]">EXTI4_IRQHandler</a>
 <LI><a href="#[b1c3c4]">DMAChannel1_IRQHandler</a>
 <LI><a href="#[b189a4]">DMAChannel2_IRQHandler</a>
 <LI><a href="#[b1c34c]">DMAChannel3_IRQHandler</a>
 <LI><a href="#[b1c310]">DMAChannel4_IRQHandler</a>
 <LI><a href="#[b1c2d4]">DMAChannel5_IRQHandler</a>
 <LI><a href="#[b1c298]">DMAChannel6_IRQHandler</a>
 <LI><a href="#[b1c25c]">DMAChannel7_IRQHandler</a>
 <LI><a href="#[b1c478]">ADC_IRQHandler</a>
 <LI><a href="#[b1bb18]">USB_HP_CAN_TX_IRQHandler</a>
 <LI><a href="#[b1badc]">USB_LP_CAN_RX0_IRQHandler</a>
 <LI><a href="#[b1c43c]">CAN_RX1_IRQHandler</a>
 <LI><a href="#[b1c400]">CAN_SCE_IRQHandler</a>
 <LI><a href="#[b1c0b8]">EXTI9_5_IRQHandler</a>
 <LI><a href="#[b1bdac]">TIM1_BRK_IRQHandler</a>
 <LI><a href="#[b1bcf8]">TIM1_UP_IRQHandler</a>
 <LI><a href="#[b1bd34]">TIM1_TRG_COM_IRQHandler</a>
 <LI><a href="#[b1bd70]">TIM1_CC_IRQHandler</a>
 <LI><a href="#[b1bcbc]">TIM2_IRQHandler</a>
 <LI><a href="#[b1bc80]">TIM3_IRQHandler</a>
 <LI><a href="#[b1bc44]">TIM4_IRQHandler</a>
 <LI><a href="#[b1c004]">I2C1_EV_IRQHandler</a>
 <LI><a href="#[b1c040]">I2C1_ER_IRQHandler</a>
 <LI><a href="#[b1bf8c]">I2C2_EV_IRQHandler</a>
 <LI><a href="#[b1bfc8]">I2C2_ER_IRQHandler</a>
 <LI><a href="#[b1be60]">SPI1_IRQHandler</a>
 <LI><a href="#[b1be24]">SPI2_IRQHandler</a>
 <LI><a href="#[b1bc08]">USART1_IRQHandler</a>
 <LI><a href="#[b1bbcc]">USART2_IRQHandler</a>
 <LI><a href="#[b1bb90]">USART3_IRQHandler</a>
 <LI><a href="#[b1c1e4]">EXTI15_10_IRQHandler</a>
 <LI><a href="#[b1bed8]">RTCAlarm_IRQHandler</a>
 <LI><a href="#[b1bb54]">USBWakeUp_IRQHandler</a>
 <LI><a href="#[b18170]">main</a>
 <LI><a href="#[b160dc]">rt_alloc_box</a>
 <LI><a href="#[b160a0]">rt_free_box</a>
 <LI><a href="#[b0ebac]">__main</a>
 <LI><a href="#[b17f90]">rt_itv_set</a>
 <LI><a href="#[b17f54]">rt_itv_wait</a>
 <LI><a href="#[b17edc]">rt_tsk_create</a>
 <LI><a href="#[b17f18]">rt_sys_init</a>
 <LI><a href="#[b189e0]">fputc</a>
 <LI><a href="#[b1b08c]">os_idle_demon</a>
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[b0ebac]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(.text)
</UL>
<P><STRONG><a name="[144a97c]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[144a850]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[1449680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[144a814]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[1449680]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[144a724]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7.o(.ARM.Collect$$$$00000007))

<P><STRONG><a name="[b14b4c]"></a>rt_incw</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_cm3.o(.emb_text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b137d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_psh
</UL>

<P><STRONG><a name="[b14b10]"></a>rt_decw</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal_cm3.o(.emb_text), UNUSED)

<P><STRONG><a name="[b14ad4]"></a>rt_inc16</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hal_cm3.o(.emb_text), UNUSED)

<P><STRONG><a name="[b15e48]"></a>rt_set_PSP</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal_cm3.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[b17f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sys_init
</UL>

<P><STRONG><a name="[b17fcc]"></a>os_set_env</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, hal_cm3.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[b18170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b14a98]"></a>_alloc_box</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hal_cm3.o(.emb_text), UNUSED)

<P><STRONG><a name="[b14a5c]"></a>_free_box</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hal_cm3.o(.emb_text), UNUSED)

<P><STRONG><a name="[b14a20]"></a>SVC_Handler</STRONG> (Thumb, 124 bytes, Stack size 0 bytes, hal_cm3.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b149e4]"></a>PendSV_Handler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, hal_cm3.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b149a8]"></a>Sys_Handler</STRONG> (Thumb, 76 bytes, Stack size 0 bytes, hal_cm3.o(.emb_text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b1487c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_systick
<LI><a href="#[b148b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_pop_req
</UL>

<P><STRONG><a name="[b1496c]"></a>SysTick_Handler</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, hal_cm3.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1c6d0]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f10x.o(.text))

<P><STRONG><a name="[b1c694]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b1c694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b1c694]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1c658]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b1c658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b1c658]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1c61c]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b1c61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b1c61c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1c5e0]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b1c5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b1c5e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1c5a4]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b1c5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b1c5a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1c52c]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b1c52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b1c52c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1c478]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b1c478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[b1c478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1c43c]"></a>CAN_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1c400]"></a>CAN_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1c3c4]"></a>DMAChannel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1c34c]"></a>DMAChannel3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1c310]"></a>DMAChannel4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1c2d4]"></a>DMAChannel5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1c298]"></a>DMAChannel6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1c25c]"></a>DMAChannel7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1c220]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1c1e4]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1c1a8]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1c16c]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1c130]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1c0f4]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1c0b8]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1c07c]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1c040]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1c004]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1bfc8]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1bf8c]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1bf50]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1bf14]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1bed8]"></a>RTCAlarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1be9c]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1be60]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1be24]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1bde8]"></a>TAMPER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1bdac]"></a>TIM1_BRK_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1bd70]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1bd34]"></a>TIM1_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1bcf8]"></a>TIM1_UP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1bcbc]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1bc80]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1bc44]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1bc08]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1bbcc]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1bb90]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1bb54]"></a>USBWakeUp_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1bb18]"></a>USB_HP_CAN_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1badc]"></a>USB_LP_CAN_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1baa0]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f10x.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b1b08c]"></a>os_idle_demon</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rtx_conf_cm.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> rt_task.o(i.rt_sys_init)
</UL>
<P><STRONG><a name="[b1b050]"></a>os_tmr_call</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rtx_conf_cm.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b13724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tmr_tick
</UL>

<P><STRONG><a name="[b1b014]"></a>os_stk_overflow</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, rtx_conf_cm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b163e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_switch_req
</UL>

<P><STRONG><a name="[b18bfc]"></a>Setup_Pll_As_Clock_System</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, metro_librairie_version2009d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b18968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Periphs
</UL>

<P><STRONG><a name="[b18bc0]"></a>Init_PortA</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, metro_librairie_version2009d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b18968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Periphs
</UL>

<P><STRONG><a name="[b18b84]"></a>Init_PortB</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, metro_librairie_version2009d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b18968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Periphs
</UL>

<P><STRONG><a name="[b18b48]"></a>Init_PortC</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, metro_librairie_version2009d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b18968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Periphs
</UL>

<P><STRONG><a name="[b18b0c]"></a>Init_Timer2</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, metro_librairie_version2009d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b18968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Periphs
</UL>

<P><STRONG><a name="[b18ad0]"></a>Pwm1</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, metro_librairie_version2009d.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b18a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fixe_Rapport
</UL>

<P><STRONG><a name="[b18a94]"></a>Pwm2</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, metro_librairie_version2009d.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b18a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fixe_Rapport
</UL>

<P><STRONG><a name="[b18a58]"></a>Fixe_Rapport</STRONG> (Thumb, 148 bytes, Stack size 4 bytes, metro_librairie_version2009d.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b18a94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pwm2
<LI><a href="#[b18ad0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Pwm1
</UL>
<BR>[Called By]<UL><LI><a href="#[b181ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consigne
</UL>

<P><STRONG><a name="[b18a1c]"></a>setup_usart</STRONG> (Thumb, 268 bytes, Stack size 0 bytes, metro_librairie_version2009d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b18968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Periphs
</UL>

<P><STRONG><a name="[b189e0]"></a>fputc</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, metro_librairie_version2009d.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> printf1.o(i.__0printf$1)
</UL>
<P><STRONG><a name="[b189a4]"></a>DMAChannel2_IRQHandler</STRONG> (Thumb, 256 bytes, Stack size 0 bytes, metro_librairie_version2009d.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> stm32f10x.o(RESET)
</UL>
<P><STRONG><a name="[b18968]"></a>Init_Periphs</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, metro_librairie_version2009d.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Init_Periphs
</UL>
<BR>[Calls]<UL><LI><a href="#[b18a1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;setup_usart
<LI><a href="#[b18b0c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Timer2
<LI><a href="#[b18b48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PortC
<LI><a href="#[b18b84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PortB
<LI><a href="#[b18bc0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_PortA
<LI><a href="#[b18bfc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Setup_Pll_As_Clock_System
</UL>
<BR>[Called By]<UL><LI><a href="#[b18170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b181e8]"></a>mesure</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, identification.o(.text), UNUSED)

<P><STRONG><a name="[b181ac]"></a>consigne</STRONG> (Thumb, 132 bytes, Stack size 0 bytes, identification.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b0e8dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getc
<LI><a href="#[b18a58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Fixe_Rapport
<LI><a href="#[14522e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>

<P><STRONG><a name="[b18170]"></a>main</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, identification.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = main &rArr; Init_Periphs
</UL>
<BR>[Calls]<UL><LI><a href="#[b17fcc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_set_env
<LI><a href="#[b18968]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Init_Periphs
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry7.o(.ARM.Collect$$$$00000007)
</UL>
<P><STRONG><a name="[144a5f8]"></a>fgetc</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fgetc.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b0e8dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getc
</UL>

<P><STRONG><a name="[1449e3c]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[1449e00]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[14524c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[1449680]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[144a814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[144a850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[1449644]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[1449248]"></a>__I$use$semihosting$fgetc</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, iusesemig.o(.text), UNUSED)

<P><STRONG><a name="[145235c]"></a>__0printf$1</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[14524c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[1452320]"></a>__1printf$1</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1), UNUSED)

<P><STRONG><a name="[14522e4]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b181ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consigne
</UL>

<P><STRONG><a name="[1448ec4]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[1448e88]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[1448e4c]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[b162bc]"></a>_init_box</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, rt_membox.o(i._init_box))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _init_box
</UL>
<BR>[Called By]<UL><LI><a href="#[b17f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sys_init
</UL>

<P><STRONG><a name="[b16280]"></a>dbg_init</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, hal_cm3.o(i.dbg_init))
<BR><BR>[Called By]<UL><LI><a href="#[b17f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sys_init
</UL>

<P><STRONG><a name="[b16208]"></a>dbg_task_notify</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, hal_cm3.o(i.dbg_task_notify))
<BR><BR>[Called By]<UL><LI><a href="#[b17edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_create
</UL>

<P><STRONG><a name="[b161cc]"></a>dbg_task_switch</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hal_cm3.o(i.dbg_task_switch))
<BR><BR>[Called By]<UL><LI><a href="#[b163e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_switch_req
</UL>

<P><STRONG><a name="[b0e8dc]"></a>getc</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, getc.o(i.getc), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[144a5f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fgetc
</UL>
<BR>[Called By]<UL><LI><a href="#[b181ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;consigne
</UL>

<P><STRONG><a name="[b160dc]"></a>rt_alloc_box</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, rt_membox.o(i.rt_alloc_box))
<BR><BR>[Called By]<UL><LI><a href="#[b16e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_init_context
<LI><a href="#[b17edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_cm3.o(.emb_text)
</UL>
<P><STRONG><a name="[b16460]"></a>rt_block</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, rt_task.o(i.rt_block))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rt_block &rArr; rt_switch_req
</UL>
<BR>[Calls]<UL><LI><a href="#[b15fb0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_dly
<LI><a href="#[b16064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_first
<LI><a href="#[b163e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_switch_req
</UL>
<BR>[Called By]<UL><LI><a href="#[b17f54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_itv_wait
</UL>

<P><STRONG><a name="[b1388c]"></a>rt_chk_robin</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, rt_robin.o(i.rt_chk_robin), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b15f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
<LI><a href="#[b16064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_first
</UL>
<BR>[Called By]<UL><LI><a href="#[b1487c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_systick
</UL>

<P><STRONG><a name="[b13850]"></a>rt_dec_dly</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, rt_list.o(i.rt_dec_dly), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b15f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
</UL>
<BR>[Called By]<UL><LI><a href="#[b1487c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_systick
</UL>

<P><STRONG><a name="[b16424]"></a>rt_dispatch</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, rt_task.o(i.rt_dispatch))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rt_dispatch &rArr; rt_switch_req
</UL>
<BR>[Calls]<UL><LI><a href="#[b15f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_rdy_first
<LI><a href="#[b15f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
<LI><a href="#[b16064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_first
<LI><a href="#[b163e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_switch_req
</UL>
<BR>[Called By]<UL><LI><a href="#[b17edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_create
</UL>

<P><STRONG><a name="[b13814]"></a>rt_evt_psh</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, rt_event.o(i.rt_evt_psh), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b15ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_rmv_dly
<LI><a href="#[b15f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
</UL>
<BR>[Called By]<UL><LI><a href="#[b148b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_pop_req
</UL>

<P><STRONG><a name="[b160a0]"></a>rt_free_box</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, rt_membox.o(i.rt_free_box))
<BR><BR>[Called By]<UL><LI><a href="#[b13724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tmr_tick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal_cm3.o(.emb_text)
</UL>
<P><STRONG><a name="[b16064]"></a>rt_get_first</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, rt_list.o(i.rt_get_first))
<BR><BR>[Called By]<UL><LI><a href="#[b13760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_psh
<LI><a href="#[b137d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_psh
<LI><a href="#[b1388c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_chk_robin
<LI><a href="#[b1487c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_systick
<LI><a href="#[b148b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_pop_req
<LI><a href="#[b16424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dispatch
<LI><a href="#[b16460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_block
</UL>

<P><STRONG><a name="[b15fec]"></a>rt_init_stack</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, hal_cm3.o(i.rt_init_stack))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rt_init_stack
</UL>
<BR>[Called By]<UL><LI><a href="#[b16e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_init_context
</UL>

<P><STRONG><a name="[b17f90]"></a>rt_itv_set</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, rt_time.o(i.rt_itv_set))
<BR>[Address Reference Count : 1]<UL><LI> identification.o(.text)
</UL>
<P><STRONG><a name="[b17f54]"></a>rt_itv_wait</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, rt_time.o(i.rt_itv_wait))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = rt_itv_wait &rArr; rt_block &rArr; rt_switch_req
</UL>
<BR>[Calls]<UL><LI><a href="#[b16460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_block
</UL>
<BR>[Address Reference Count : 1]<UL><LI> identification.o(.text)
</UL>
<P><STRONG><a name="[b137d8]"></a>rt_mbx_psh</STRONG> (Thumb, 120 bytes, Stack size 16 bytes, rt_mailbox.o(i.rt_mbx_psh), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b14b4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_incw
<LI><a href="#[b15ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_rmv_dly
<LI><a href="#[b15f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
<LI><a href="#[b16064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_first
</UL>
<BR>[Called By]<UL><LI><a href="#[b148b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_pop_req
</UL>

<P><STRONG><a name="[b148b8]"></a>rt_pop_req</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, rt_system.o(i.rt_pop_req), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b13760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_psh
<LI><a href="#[b1379c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_psq_deq
<LI><a href="#[b137d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_psh
<LI><a href="#[b13814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_evt_psh
<LI><a href="#[b15f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_rdy_first
<LI><a href="#[b16064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_first
<LI><a href="#[b163e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_switch_req
</UL>
<BR>[Called By]<UL><LI><a href="#[b149a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Handler
</UL>

<P><STRONG><a name="[b1379c]"></a>rt_psq_deq</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, rt_list.o(i.rt_psq_deq), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b148b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_pop_req
</UL>

<P><STRONG><a name="[b15fb0]"></a>rt_put_dly</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, rt_list.o(i.rt_put_dly))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = rt_put_dly
</UL>
<BR>[Called By]<UL><LI><a href="#[b16460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_block
</UL>

<P><STRONG><a name="[b15f74]"></a>rt_put_prio</STRONG> (Thumb, 54 bytes, Stack size 12 bytes, rt_list.o(i.rt_put_prio))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = rt_put_prio
</UL>
<BR>[Called By]<UL><LI><a href="#[b13760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_psh
<LI><a href="#[b137d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_psh
<LI><a href="#[b13814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_evt_psh
<LI><a href="#[b13850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dec_dly
<LI><a href="#[b1388c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_chk_robin
<LI><a href="#[b16424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dispatch
</UL>

<P><STRONG><a name="[b15f38]"></a>rt_put_rdy_first</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, rt_list.o(i.rt_put_rdy_first))
<BR><BR>[Called By]<UL><LI><a href="#[b1487c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_systick
<LI><a href="#[b148b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_pop_req
<LI><a href="#[b16424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dispatch
</UL>

<P><STRONG><a name="[b15ec0]"></a>rt_rmv_dly</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, rt_list.o(i.rt_rmv_dly), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[b13760]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sem_psh
<LI><a href="#[b137d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_mbx_psh
<LI><a href="#[b13814]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_evt_psh
</UL>

<P><STRONG><a name="[b13760]"></a>rt_sem_psh</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, rt_semaphore.o(i.rt_sem_psh), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b15ec0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_rmv_dly
<LI><a href="#[b15f74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_prio
<LI><a href="#[b16064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_first
</UL>
<BR>[Called By]<UL><LI><a href="#[b148b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_pop_req
</UL>

<P><STRONG><a name="[b163e8]"></a>rt_switch_req</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, rt_task.o(i.rt_switch_req))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = rt_switch_req
</UL>
<BR>[Calls]<UL><LI><a href="#[b161cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_task_switch
<LI><a href="#[b1b014]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_stk_overflow
</UL>
<BR>[Called By]<UL><LI><a href="#[b1487c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_systick
<LI><a href="#[b148b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_pop_req
<LI><a href="#[b16424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dispatch
<LI><a href="#[b16460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_block
</UL>

<P><STRONG><a name="[b17f18]"></a>rt_sys_init</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, rt_task.o(i.rt_sys_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = rt_sys_init &rArr; rt_tsk_create &rArr; rt_dispatch &rArr; rt_switch_req
</UL>
<BR>[Calls]<UL><LI><a href="#[b15e48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_set_PSP
<LI><a href="#[b16280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_init
<LI><a href="#[b162bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_box
<LI><a href="#[b16e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_init_context
<LI><a href="#[b17edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_create
</UL>
<BR>[Address Reference Count : 1]<UL><LI> identification.o(.text)
</UL>
<P><STRONG><a name="[b1487c]"></a>rt_systick</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, rt_system.o(i.rt_systick), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b13724]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tmr_tick
<LI><a href="#[b13850]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dec_dly
<LI><a href="#[b1388c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_chk_robin
<LI><a href="#[b15f38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_put_rdy_first
<LI><a href="#[b16064]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_get_first
<LI><a href="#[b163e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_switch_req
</UL>
<BR>[Called By]<UL><LI><a href="#[b149a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sys_Handler
</UL>

<P><STRONG><a name="[b13724]"></a>rt_tmr_tick</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, rt_timer.o(i.rt_tmr_tick), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[b160a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_free_box
<LI><a href="#[b1b050]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;os_tmr_call
</UL>
<BR>[Called By]<UL><LI><a href="#[b1487c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_systick
</UL>

<P><STRONG><a name="[b17edc]"></a>rt_tsk_create</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, rt_task.o(i.rt_tsk_create))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = rt_tsk_create &rArr; rt_dispatch &rArr; rt_switch_req
</UL>
<BR>[Calls]<UL><LI><a href="#[b160dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_alloc_box
<LI><a href="#[b16208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dbg_task_notify
<LI><a href="#[b16424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_dispatch
<LI><a href="#[b16e74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_init_context
</UL>
<BR>[Called By]<UL><LI><a href="#[b17f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sys_init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> identification.o(.text)
</UL><P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[b16e74]"></a>rt_init_context</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, rt_task.o(i.rt_init_context))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = rt_init_context &rArr; rt_init_stack
</UL>
<BR>[Calls]<UL><LI><a href="#[b15fec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_init_stack
<LI><a href="#[b160dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_alloc_box
</UL>
<BR>[Called By]<UL><LI><a href="#[b17edc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_tsk_create
<LI><a href="#[b17f18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;rt_sys_init
</UL>

<P><STRONG><a name="[14524c4]"></a>_printf_core</STRONG> (Thumb, 328 bytes, Stack size 88 bytes, printf1.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1449e00]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[145235c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$1
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
