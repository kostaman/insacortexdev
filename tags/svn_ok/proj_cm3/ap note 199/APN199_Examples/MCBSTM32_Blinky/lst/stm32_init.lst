ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"STM32_Init.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 01010000 		.text
  20      02007900 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.align	2
  23              		.global	stm32_EfiSetup
  24              		.thumb
  25              		.thumb_func
  26              		.type	stm32_EfiSetup, %function
  27              	stm32_EfiSetup:
  28              	.LFB2:
  29              		.file 1 "STM32_Init.c"
   1:STM32_Init.c  **** /*----------------------------------------------------------------------------
   2:STM32_Init.c  ****  * Name:    STM32_Init.c
   3:STM32_Init.c  ****  * Purpose: STM32 peripherals initialisation
   4:STM32_Init.c  ****  * Version: V1.23
   5:STM32_Init.c  ****  *----------------------------------------------------------------------------
   6:STM32_Init.c  ****  * This file is part of the uVision/ARM development tools.
   7:STM32_Init.c  ****  * This software may only be used under the terms of a valid, current,
   8:STM32_Init.c  ****  * end user licence from KEIL for a compatible version of KEIL software
   9:STM32_Init.c  ****  * development tools. Nothing else gives you the right to use this software.
  10:STM32_Init.c  ****  *
  11:STM32_Init.c  ****  * This software is supplied "AS IS" without warranties of any kind.
  12:STM32_Init.c  ****  *
  13:STM32_Init.c  ****  * Copyright (c) 2005-2008 Keil Software. All rights reserved.
  14:STM32_Init.c  ****  *----------------------------------------------------------------------------
  15:STM32_Init.c  ****  * History:
  16:STM32_Init.c  ****  *          V1.23 error correction for RTC configuration (LSI selected)
  17:STM32_Init.c  ****  *          V1.22 added Nested Vectored Interrupt Controller Section
  18:STM32_Init.c  ****  *          V1.21 error correction for timer settings
  19:STM32_Init.c  ****  *          V1.20 added Alternate Function remap Configuration Section
  20:STM32_Init.c  ****  *                error correction for timer settings
  21:STM32_Init.c  ****  *          V1.10 added more Sections 
  22:STM32_Init.c  ****  *          V1.00 Initial Version
  23:STM32_Init.c  ****  *----------------------------------------------------------------------------*/
  24:STM32_Init.c  **** 
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 2


  25:STM32_Init.c  **** #include <stm32f10x_lib.h>                        // STM32F10x Library Definitions
  26:STM32_Init.c  **** #include "STM32_Reg.h"                            // missing bit definitions
  27:STM32_Init.c  **** 
  28:STM32_Init.c  **** //-------- <<< Use Configuration Wizard in Context Menu >>> -----------------
  29:STM32_Init.c  **** //
  30:STM32_Init.c  **** 
  31:STM32_Init.c  **** 
  32:STM32_Init.c  **** //=========================================================================== Clock Configuration
  33:STM32_Init.c  **** // <e0> Clock Configuration
  34:STM32_Init.c  **** //   <h> Clock Control Register Configuration (RCC_CR)
  35:STM32_Init.c  **** //     <e1.24> PLLON: PLL enable         
  36:STM32_Init.c  **** //       <i> Default: PLL Disabled
  37:STM32_Init.c  **** //       <o2.18..21> PLLMUL: PLL Multiplication Factor
  38:STM32_Init.c  **** //         <i> Default: PLLSRC * 2
  39:STM32_Init.c  **** //                       <0=> PLLSRC * 2
  40:STM32_Init.c  **** //                       <1=> PLLSRC * 3
  41:STM32_Init.c  **** //                       <2=> PLLSRC * 4
  42:STM32_Init.c  **** //                       <3=> PLLSRC * 5
  43:STM32_Init.c  **** //                       <4=> PLLSRC * 6
  44:STM32_Init.c  **** //                       <5=> PLLSRC * 7
  45:STM32_Init.c  **** //                       <6=> PLLSRC * 8
  46:STM32_Init.c  **** //                       <7=> PLLSRC * 9
  47:STM32_Init.c  **** //                       <8=> PLLSRC * 10
  48:STM32_Init.c  **** //                       <9=> PLLSRC * 11
  49:STM32_Init.c  **** //                       <10=> PLLSRC * 12
  50:STM32_Init.c  **** //                       <11=> PLLSRC * 13
  51:STM32_Init.c  **** //                       <12=> PLLSRC * 14
  52:STM32_Init.c  **** //                       <13=> PLLSRC * 15
  53:STM32_Init.c  **** //                       <14=> PLLSRC * 16
  54:STM32_Init.c  **** //       <o2.17> PLLXTPRE: HSE divider for PLL entry
  55:STM32_Init.c  **** //         <i> Default: HSE
  56:STM32_Init.c  **** //                       <0=> HSE
  57:STM32_Init.c  **** //                       <1=> HSE / 2
  58:STM32_Init.c  **** //       <o2.16> PLLSRC: PLL entry clock source         
  59:STM32_Init.c  **** //         <i> Default: HSI/2
  60:STM32_Init.c  **** //                       <0=> HSI / 2
  61:STM32_Init.c  **** //                       <1=> HSE (PLLXTPRE output)
  62:STM32_Init.c  **** //     </e>
  63:STM32_Init.c  **** //     <o1.19> CSSON: Clock Security System enable
  64:STM32_Init.c  **** //       <i> Default: Clock detector OFF
  65:STM32_Init.c  **** //     <o1.18> HSEBYP: External High Speed clock Bypass
  66:STM32_Init.c  **** //       <i> Default: HSE oscillator not bypassed
  67:STM32_Init.c  **** //     <o1.16> HSEON: External High Speed clock enable 
  68:STM32_Init.c  **** //       <i> Default: HSE oscillator OFF
  69:STM32_Init.c  **** //     <o1.3..7> HSITRIM: Internal High Speed clock trimming  <0-31>
  70:STM32_Init.c  **** //       <i> Default: 0
  71:STM32_Init.c  **** //     <o1.0> HSION: Internal High Speed clock enable
  72:STM32_Init.c  **** //       <i> Default: internal 8MHz RC oscillator OFF
  73:STM32_Init.c  **** //   </h>
  74:STM32_Init.c  **** //   <h> Clock Configuration Register Configuration (RCC_CFGR)
  75:STM32_Init.c  **** //     <o2.24..26> MCO: Microcontroller Clock Output   
  76:STM32_Init.c  **** //       <i> Default: MCO = noClock
  77:STM32_Init.c  **** //                     <0=> MCO = noClock
  78:STM32_Init.c  **** //                     <4=> MCO = SYSCLK
  79:STM32_Init.c  **** //                     <5=> MCO = HSI
  80:STM32_Init.c  **** //                     <6=> MCO = HSE
  81:STM32_Init.c  **** //                     <7=> MCO = PLLCLK / 2
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 3


  82:STM32_Init.c  **** //     <o2.22> USBPRE: USB prescaler
  83:STM32_Init.c  **** //       <i> Default: USBCLK = PLLCLK / 1.5
  84:STM32_Init.c  **** //                     <0=> USBCLK = PLLCLK / 1.5
  85:STM32_Init.c  **** //                     <1=> USBCLK = PLLCLK
  86:STM32_Init.c  **** //     <o2.14..15> ADCPRE: ADC prescaler
  87:STM32_Init.c  **** //       <i> Default: ADCCLK=PCLK2 / 2
  88:STM32_Init.c  **** //                     <0=> ADCCLK = PCLK2 / 2
  89:STM32_Init.c  **** //                     <1=> ADCCLK = PCLK2 / 4
  90:STM32_Init.c  **** //                     <2=> ADCCLK = PCLK2 / 6
  91:STM32_Init.c  **** //                     <3=> ADCCLK = PCLK2 / 8
  92:STM32_Init.c  **** //     <o2.11..13> PPRE2: APB High speed prescaler (APB2)
  93:STM32_Init.c  **** //       <i> Default: PCLK2 = HCLK
  94:STM32_Init.c  **** //                     <0=> PCLK2 = HCLK
  95:STM32_Init.c  **** //                     <4=> PCLK2 = HCLK / 2 
  96:STM32_Init.c  **** //                     <5=> PCLK2 = HCLK / 4 
  97:STM32_Init.c  **** //                     <6=> PCLK2 = HCLK / 8 
  98:STM32_Init.c  **** //                     <7=> PCLK2 = HCLK / 16 
  99:STM32_Init.c  **** //     <o2.8..10> PPRE1: APB Low speed prescaler (APB1) 
 100:STM32_Init.c  **** //       <i> Default: PCLK1 = HCLK
 101:STM32_Init.c  **** //                     <0=> PCLK1 = HCLK
 102:STM32_Init.c  **** //                     <4=> PCLK1 = HCLK / 2 
 103:STM32_Init.c  **** //                     <5=> PCLK1 = HCLK / 4 
 104:STM32_Init.c  **** //                     <6=> PCLK1 = HCLK / 8 
 105:STM32_Init.c  **** //                     <7=> PCLK1 = HCLK / 16 
 106:STM32_Init.c  **** //     <o2.4..7> HPRE: AHB prescaler 
 107:STM32_Init.c  **** //       <i> Default: HCLK = SYSCLK
 108:STM32_Init.c  **** //                     <0=> HCLK = SYSCLK
 109:STM32_Init.c  **** //                     <8=> HCLK = SYSCLK / 2
 110:STM32_Init.c  **** //                     <9=> HCLK = SYSCLK / 4
 111:STM32_Init.c  **** //                     <10=> HCLK = SYSCLK / 8
 112:STM32_Init.c  **** //                     <11=> HCLK = SYSCLK / 16
 113:STM32_Init.c  **** //                     <12=> HCLK = SYSCLK / 64
 114:STM32_Init.c  **** //                     <13=> HCLK = SYSCLK / 128
 115:STM32_Init.c  **** //                     <14=> HCLK = SYSCLK / 256
 116:STM32_Init.c  **** //                     <15=> HCLK = SYSCLK / 512
 117:STM32_Init.c  **** //     <o2.0..1> SW: System Clock Switch
 118:STM32_Init.c  **** //       <i> Default: SYSCLK = HSE
 119:STM32_Init.c  **** //                     <0=> SYSCLK = HSI
 120:STM32_Init.c  **** //                     <1=> SYSCLK = HSE
 121:STM32_Init.c  **** //                     <2=> SYSCLK = PLLCLK
 122:STM32_Init.c  **** //   </h>
 123:STM32_Init.c  **** //   <o3>HSE: External High Speed Clock [Hz] <4000000-16000000>
 124:STM32_Init.c  **** //   <i> clock value for the used External High Speed Clock (4MHz <= HSE <= 16MHz).
 125:STM32_Init.c  **** //   <i> Default: 8000000  (8MHz)
 126:STM32_Init.c  **** // </e> End of Clock Configuration
 127:STM32_Init.c  **** #define __CLOCK_SETUP              1
 128:STM32_Init.c  **** #define __RCC_CR_VAL               0x01010082
 129:STM32_Init.c  **** #define __RCC_CFGR_VAL             0x001D8402
 130:STM32_Init.c  **** #define __HSE                      8000000
 131:STM32_Init.c  **** 
 132:STM32_Init.c  **** 
 133:STM32_Init.c  **** //=========================================================================== Nested Vectored Inter
 134:STM32_Init.c  **** // <e0> Nested Vectored Interrupt Controller (NVIC)
 135:STM32_Init.c  **** //   <e1.0> Vector Table Offset Register 
 136:STM32_Init.c  **** //     <o2.29> TBLBASE: Vector Table Base         
 137:STM32_Init.c  **** //       <i> Default: FLASH
 138:STM32_Init.c  **** //              <0=> FLASH
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 4


 139:STM32_Init.c  **** //              <1=> RAM
 140:STM32_Init.c  **** //     <o2.7..28> TBLOFF: Vector Table Offset <0x0-0x1FFFFFC0:0x80><#/0x80>
 141:STM32_Init.c  **** //       <i> Default: 0x00000000
 142:STM32_Init.c  **** //   </e>
 143:STM32_Init.c  **** // </e> End of Clock Configuration
 144:STM32_Init.c  **** #define __NVIC_SETUP              0
 145:STM32_Init.c  **** #define __NVIC_USED               0x00000000
 146:STM32_Init.c  **** #define __NVIC_VTOR_VAL           0x00000000
 147:STM32_Init.c  **** 
 148:STM32_Init.c  **** 
 149:STM32_Init.c  **** //=========================================================================== Independent Watchdog 
 150:STM32_Init.c  **** // <e0> Independent Watchdog Configuration
 151:STM32_Init.c  **** //   <o1> IWDG period [us] <125-32000000:125>
 152:STM32_Init.c  **** //   <i> Set the timer period for Independent Watchdog.
 153:STM32_Init.c  **** //   <i> Default: 1000000  (1s)
 154:STM32_Init.c  **** // </e>
 155:STM32_Init.c  **** #define __IWDG_SETUP              0
 156:STM32_Init.c  **** #define __IWDG_PERIOD             0x001E8480
 157:STM32_Init.c  **** 
 158:STM32_Init.c  **** 
 159:STM32_Init.c  **** //=========================================================================== System Timer Configur
 160:STM32_Init.c  **** // <e0> System Timer Configuration
 161:STM32_Init.c  **** //   <o1.2> System Timer clock source selection
 162:STM32_Init.c  **** //   <i> Default: SYSTICKCLK = HCLK/8
 163:STM32_Init.c  **** //                     <0=> SYSTICKCLK = HCLK/8
 164:STM32_Init.c  **** //                     <1=> SYSTICKCLK = HCLK
 165:STM32_Init.c  **** //   <o2> SYSTICK period [ms] <1-1000:10>
 166:STM32_Init.c  **** //   <i> Set the timer period for System Timer.
 167:STM32_Init.c  **** //   <i> Default: 1  (1ms)
 168:STM32_Init.c  **** //   <o1.1> System Timer interrupt enabled
 169:STM32_Init.c  **** // </e>
 170:STM32_Init.c  **** #define __SYSTICK_SETUP           1
 171:STM32_Init.c  **** #define __SYSTICK_CTRL_VAL        0x00000006
 172:STM32_Init.c  **** #define __SYSTICK_PERIOD          0x0000000A
 173:STM32_Init.c  **** 
 174:STM32_Init.c  **** 
 175:STM32_Init.c  **** //=========================================================================== Real Time Clock Confi
 176:STM32_Init.c  **** // <e0> Real Time Clock Configuration
 177:STM32_Init.c  **** //   <o1.8..9> RTC clock source selection
 178:STM32_Init.c  **** //   <i> Default: No Clock
 179:STM32_Init.c  **** //                     <0=> No Clock
 180:STM32_Init.c  **** //                     <1=> RTCCLK = LSE (32,768kHz)
 181:STM32_Init.c  **** //                     <2=> RTCCLK = LSI (32 kHz)
 182:STM32_Init.c  **** //                     <3=> RTCCLK = HSE/128
 183:STM32_Init.c  **** //   <o2> RTC period [ms] <10-1000:10>
 184:STM32_Init.c  **** //   <i> Set the timer period for Real Time Clock.
 185:STM32_Init.c  **** //   <i> Default: 1000  (1s)
 186:STM32_Init.c  **** //   <h> RTC Time Value
 187:STM32_Init.c  **** //     <o3> Hour <0-23>
 188:STM32_Init.c  **** //     <o4> Minute <0-59>
 189:STM32_Init.c  **** //     <o5> Second <0-59>
 190:STM32_Init.c  **** //   </h>
 191:STM32_Init.c  **** //   <h> RTC Alarm Value
 192:STM32_Init.c  **** //     <o6> Hour <0-23>
 193:STM32_Init.c  **** //     <o7> Minute <0-59>
 194:STM32_Init.c  **** //     <o8> Second <0-59>
 195:STM32_Init.c  **** //   </h>
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 5


 196:STM32_Init.c  **** //   <e9> RTC interrupts
 197:STM32_Init.c  **** //     <o10.0> RTC_CRH.SECIE: Second interrupt enabled
 198:STM32_Init.c  **** //     <o10.1> RTC_CRH.ALRIE: Alarm interrupt enabled
 199:STM32_Init.c  **** //     <o10.2> RTC_CRH.OWIE: Overflow interrupt enabled
 200:STM32_Init.c  **** //   </e>
 201:STM32_Init.c  **** // </e>
 202:STM32_Init.c  **** #define __RTC_SETUP               0
 203:STM32_Init.c  **** #define __RTC_CLKSRC_VAL          0x00000100
 204:STM32_Init.c  **** #define __RTC_PERIOD              0x000003E8
 205:STM32_Init.c  **** #define __RTC_TIME_H              0x00
 206:STM32_Init.c  **** #define __RTC_TIME_M              0x00
 207:STM32_Init.c  **** #define __RTC_TIME_S              0x00
 208:STM32_Init.c  **** #define __RTC_ALARM_H             0x00
 209:STM32_Init.c  **** #define __RTC_ALARM_M             0x01
 210:STM32_Init.c  **** #define __RTC_ALARM_S             0x00
 211:STM32_Init.c  **** #define __RTC_INTERRUPTS          0x00000001
 212:STM32_Init.c  **** #define __RTC_CRH                 0x00000001
 213:STM32_Init.c  **** 
 214:STM32_Init.c  **** 
 215:STM32_Init.c  **** //=========================================================================== Timer Configuration
 216:STM32_Init.c  **** // <e0> Timer Configuration
 217:STM32_Init.c  **** //--------------------------------------------------------------------------- Timer 1 enabled
 218:STM32_Init.c  **** //   <e1.0> TIM1 : Timer 1 enabled
 219:STM32_Init.c  **** //     <o4> TIM1 period [us] <1-72000000:10>
 220:STM32_Init.c  **** //       <i> Set the timer period for Timer 1.
 221:STM32_Init.c  **** //       <i> Default: 1000  (1ms)
 222:STM32_Init.c  **** //       <i> Ignored if detailed settings is selected
 223:STM32_Init.c  **** //     <o7> TIM1 repetition counter <0-255>
 224:STM32_Init.c  **** //       <i> Set the repetition counter for Timer 1.
 225:STM32_Init.c  **** //       <i> Default: 0
 226:STM32_Init.c  **** //       <i> Ignored if detailed settings is selected
 227:STM32_Init.c  **** //     <e2.0> TIM1 detailed settings
 228:STM32_Init.c  **** //--------------------------------------------------------------------------- Timer 1 detailed sett
 229:STM32_Init.c  **** //       <o5> TIM1.PSC: Timer1 Prescaler <0-65535>
 230:STM32_Init.c  **** //         <i> Set the prescaler for Timer 1.
 231:STM32_Init.c  **** //       <o6> TIM1.ARR: Timer1 Auto-reload <0-65535>
 232:STM32_Init.c  **** //         <i> Set the Auto-reload for Timer 1.
 233:STM32_Init.c  **** //       <o7> TIM1.RCR: Timer1 Repetition Counter <0-255>
 234:STM32_Init.c  **** //         <i> Set the Repetition Counter for Timer 1.
 235:STM32_Init.c  **** //
 236:STM32_Init.c  **** //       <h> Timer 1 Control Register 1 Configuration (TIM1_CR1)
 237:STM32_Init.c  **** //         <o8.8..9> TIM1_CR1.CKD: Clock division   
 238:STM32_Init.c  **** //           <i> Default: tDTS = tCK_INT
 239:STM32_Init.c  **** //           <i> devision ratio between timer clock and dead time
 240:STM32_Init.c  **** //                     <0=> tDTS = tCK_INT
 241:STM32_Init.c  **** //                     <1=> tDTS = 2*tCK_INT
 242:STM32_Init.c  **** //                     <2=> tDTS = 4*tCK_INT
 243:STM32_Init.c  **** //         <o8.7> TIM1_CR1.ARPE: Auto-reload preload enable
 244:STM32_Init.c  **** //           <i> Default: Auto-reload preload disenabled
 245:STM32_Init.c  **** //         <o8.5..6> TIM1_CR1.CMS: Center aligned mode selection   
 246:STM32_Init.c  **** //           <i> Default: Edge-aligned
 247:STM32_Init.c  **** //                     <0=> Edge-aligned
 248:STM32_Init.c  **** //                     <1=> Center-aligned mode1
 249:STM32_Init.c  **** //                     <2=> Center-aligned mode2
 250:STM32_Init.c  **** //                     <3=> Center-aligned mode3
 251:STM32_Init.c  **** //         <o8.4> TIM1_CR1.DIR: Direction
 252:STM32_Init.c  **** //           <i> Default: DIR = Counter used as up-counter
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 6


 253:STM32_Init.c  **** //           <i> read only if timer is configured as Center-aligned or Encoder mode   
 254:STM32_Init.c  **** //                     <0=> Counter used as up-counter
 255:STM32_Init.c  **** //                     <1=> Counter used as down-counter
 256:STM32_Init.c  **** //         <o8.3> TIM1_CR1.OPM: One pulse mode enable
 257:STM32_Init.c  **** //           <i> Default: One pulse mode disabled
 258:STM32_Init.c  **** //         <o8.2> TIM1_CR1.URS: Update request source   
 259:STM32_Init.c  **** //           <i> Default: URS = Counter over-/underflow, UG bit, Slave mode controller
 260:STM32_Init.c  **** //                     <0=> Counter over-/underflow, UG bit, Slave mode controller
 261:STM32_Init.c  **** //                     <1=> Counter over-/underflow
 262:STM32_Init.c  **** //         <o8.1> TIM1_CR1.UDIS: Update disable
 263:STM32_Init.c  **** //           <i> Default: Update enabled
 264:STM32_Init.c  **** //       </h>
 265:STM32_Init.c  **** //
 266:STM32_Init.c  **** //       <h> Timer 1 Control Register 2 Configuration (TIM1_CR2)
 267:STM32_Init.c  **** //         <o9.14> TIM1_CR2.OIS4: Output Idle state4 (OC4 output)   <0-1>
 268:STM32_Init.c  **** //         <o9.13> TIM1_CR2.OIS3N: Output Idle state3 (OC3N output) <0-1>
 269:STM32_Init.c  **** //         <o9.12> TIM1_CR2.OIS3: Output Idle state3 (OC3 output)   <0-1>
 270:STM32_Init.c  **** //         <o9.11> TIM1_CR2.OIS2N: Output Idle state2 (OC2N output) <0-1> 
 271:STM32_Init.c  **** //         <o9.10> TIM1_CR2.OIS2: Output Idle state2 (OC2 output)   <0-1>
 272:STM32_Init.c  **** //         <o9.9> TIM1_CR2.OIS1N: Output Idle state1 (OC1N output)
 273:STM32_Init.c  **** //           <i> Default: OC1 = 0
 274:STM32_Init.c  **** //                     <0=> OC1N=0 when MOE=0
 275:STM32_Init.c  **** //                     <1=> OC1N=1 when MOE=0
 276:STM32_Init.c  **** //         <o9.8> TIM1_CR2.OI1S: Output Idle state1 (OC1 output)  
 277:STM32_Init.c  **** //           <i> Default: OC1=0
 278:STM32_Init.c  **** //                     <0=> OC1=0 when MOE=0
 279:STM32_Init.c  **** //                     <1=> OC1=1 when MOE=0
 280:STM32_Init.c  **** //         <o9.7> TIM1_CR2.TI1S: TI1 Selection  
 281:STM32_Init.c  **** //           <i> Default: TIM1CH1 connected to TI1 input
 282:STM32_Init.c  **** //                     <0=> TIM1CH1 connected to TI1 input
 283:STM32_Init.c  **** //                     <1=> TIM1CH1,CH2,CH3 connected to TI1 input
 284:STM32_Init.c  **** //         <o9.4..6> TIM1_CR2.MMS: Master Mode Selection  
 285:STM32_Init.c  **** //           <i> Default: Reset
 286:STM32_Init.c  **** //           <i> Select information to be sent in master mode to slave timers for synchronisation
 287:STM32_Init.c  **** //                     <0=> Reset
 288:STM32_Init.c  **** //                     <1=> Enable
 289:STM32_Init.c  **** //                     <2=> Update
 290:STM32_Init.c  **** //                     <3=> Compare Pulse
 291:STM32_Init.c  **** //                     <4=> Compare OC1REF iused as TRGO
 292:STM32_Init.c  **** //                     <5=> Compare OC2REF iused as TRGO
 293:STM32_Init.c  **** //                     <6=> Compare OC3REF iused as TRGO
 294:STM32_Init.c  **** //                     <7=> Compare OC4REF iused as TRGO
 295:STM32_Init.c  **** //         <o9.2> TIM1_CR2.CCUS: Capture/Compare Control Update Selection  
 296:STM32_Init.c  **** //           <i> Default: setting COM bit
 297:STM32_Init.c  **** //                     <0=> setting COM bit
 298:STM32_Init.c  **** //                     <1=> setting COM bit or rising edge TRGI
 299:STM32_Init.c  **** //         <o9.0> TIM1_CR2.CCPC: Capture/Compare Preloaded Control   
 300:STM32_Init.c  **** //           <i> Default: CCxE,CCxNE,OCxM not preloaded
 301:STM32_Init.c  **** //                     <0=> CCxE,CCxNE,OCxM not preloaded
 302:STM32_Init.c  **** //                     <1=> CCxE,CCxNE,OCxM preloaded
 303:STM32_Init.c  **** //       </h>
 304:STM32_Init.c  **** //
 305:STM32_Init.c  **** //       <h> Timer 1 Slave mode control register Configuration (TIM1_SMC)
 306:STM32_Init.c  **** //         <o10.15> TIM1_SMCR.ETP: External trigger polarity
 307:STM32_Init.c  **** //           <i> Default: ETR is non-inverted
 308:STM32_Init.c  **** //                     <0=> ETR is non-inverted
 309:STM32_Init.c  **** //                     <1=> ETR is inverted
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 7


 310:STM32_Init.c  **** //         <o10.14> TIM1_SMCR.ECE: External clock mode 2 enabled
 311:STM32_Init.c  **** //         <o10.12..13> TIM1_SMCR.ETPS: External trigger prescaler  
 312:STM32_Init.c  **** //           <i> Default: Prescaler OFF
 313:STM32_Init.c  **** //                     <0=> Prescaler OFF
 314:STM32_Init.c  **** //                     <1=> fETPR/2
 315:STM32_Init.c  **** //                     <2=> fETPR/4
 316:STM32_Init.c  **** //                     <3=> fETPR/8
 317:STM32_Init.c  **** //         <o10.8..11> TIM1_SMCR.ETF: External trigger filter  
 318:STM32_Init.c  **** //           <i> Default: No filter
 319:STM32_Init.c  **** //                     <0=>  No filter
 320:STM32_Init.c  **** //                     <1=>  fSampling=fCK_INT, N=2
 321:STM32_Init.c  **** //                     <2=>  fSampling=fCK_INT, N=4
 322:STM32_Init.c  **** //                     <3=>  fSampling=fCK_INT, N=8
 323:STM32_Init.c  **** //                     <4=>  fSampling=fDTS/2, N=6
 324:STM32_Init.c  **** //                     <5=>  fSampling=fDTS/2, N=8
 325:STM32_Init.c  **** //                     <6=>  fSampling=fDTS/4, N=6
 326:STM32_Init.c  **** //                     <7=>  fSampling=fDTS/4, N=8
 327:STM32_Init.c  **** //                     <8=>  fSampling=fDTS/8, N=6
 328:STM32_Init.c  **** //                     <9=>  fSampling=fDTS/8, N=8
 329:STM32_Init.c  **** //                     <10=> fSampling=fDTS/16, N=5
 330:STM32_Init.c  **** //                     <11=> fSampling=fDTS/16, N=6
 331:STM32_Init.c  **** //                     <12=> fSampling=fDTS/16, N=8
 332:STM32_Init.c  **** //                     <13=> fSampling=fDTS/32, N=5
 333:STM32_Init.c  **** //                     <14=> fSampling=fDTS/32, N=6
 334:STM32_Init.c  **** //                     <15=> fSampling=fDTS/32, N=8
 335:STM32_Init.c  **** //         <o10.7> TIM1_SMCR.MSM: Delay trigger input  
 336:STM32_Init.c  **** //         <o10.4..6> TIM1_SMCR.TS: Trigger Selection  
 337:STM32_Init.c  **** //           <i> Default: Reserved
 338:STM32_Init.c  **** //                     <0=> Reserved
 339:STM32_Init.c  **** //                     <1=> TIM2 (ITR1)
 340:STM32_Init.c  **** //                     <2=> TIM3 (ITR2)
 341:STM32_Init.c  **** //                     <3=> TIM4 (ITR3)
 342:STM32_Init.c  **** //                     <4=> TI1 Edge Detector (TI1F_ED)
 343:STM32_Init.c  **** //                     <5=> Filtered Timer Input 1 (TI1FP1)
 344:STM32_Init.c  **** //                     <6=> Filtered Timer Input 2 (TI1FP2)
 345:STM32_Init.c  **** //                     <7=> External Trigger Input (ETRF)
 346:STM32_Init.c  **** //         <o10.0..2> TIM1_SMCR.SMS: Slave mode selection   
 347:STM32_Init.c  **** //           <i> Default: Slave mode disabled
 348:STM32_Init.c  **** //                     <0=> Slave mode disabled
 349:STM32_Init.c  **** //                     <1=> Encoder mode 1
 350:STM32_Init.c  **** //                     <2=> Encoder mode 2
 351:STM32_Init.c  **** //                     <3=> Encoder mode 3
 352:STM32_Init.c  **** //                     <4=> Reset mode
 353:STM32_Init.c  **** //                     <5=> Gated mode
 354:STM32_Init.c  **** //                     <6=> Trigger mode
 355:STM32_Init.c  **** //                     <7=> External clock mode 1
 356:STM32_Init.c  **** //       </h>
 357:STM32_Init.c  **** //
 358:STM32_Init.c  **** //--------------------------------------------------------------------------- Timer 1 channel 1
 359:STM32_Init.c  **** //       <h> Channel 1 Configuration
 360:STM32_Init.c  **** //         <h> Cannel configured as output
 361:STM32_Init.c  **** //           <o11.7> TIM1_CCMR1.OC1CE: Output Compare 1 Clear enabled  
 362:STM32_Init.c  **** //           <o11.4..6> TIM1_CCMR1.OC1M: Output Compare 1 Mode  
 363:STM32_Init.c  **** //             <i> Default: Frozen
 364:STM32_Init.c  **** //                       <0=>  Frozen
 365:STM32_Init.c  **** //                       <1=>  Set channel 1 to active level on match
 366:STM32_Init.c  **** //                       <2=>  Set channel 1 to inactive level on match
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 8


 367:STM32_Init.c  **** //                       <3=>  Toggle 
 368:STM32_Init.c  **** //                       <4=>  Force inactive level
 369:STM32_Init.c  **** //                       <5=>  Force active level
 370:STM32_Init.c  **** //                       <6=>  PWM mode 1
 371:STM32_Init.c  **** //                       <7=>  PWM mode 2
 372:STM32_Init.c  **** //           <o11.3> TIM1_CCMR1.OC1PE: Output Compare 1 Preload enabled  
 373:STM32_Init.c  **** //           <o11.2> TIM1_CCMR1.OC1FE: Output Compare 1 Fast enabled  
 374:STM32_Init.c  **** //           <o11.0..1> TIM1_CCMR1.CC1S: Capture/compare 1 selection   
 375:STM32_Init.c  **** //             <i> Default: CC1 configured as output
 376:STM32_Init.c  **** //                       <0=> CC1 configured as output
 377:STM32_Init.c  **** //           <o13.3> TIM1_CCER.CC1NP: Capture/compare 1 Complementary output Polarity set  
 378:STM32_Init.c  **** //             <i> Default: OC1N active high
 379:STM32_Init.c  **** //                       <0=> OC1N active high
 380:STM32_Init.c  **** //                       <1=> OC1N active low
 381:STM32_Init.c  **** //           <o13.2> TIM1_CCER.CC1NE: Capture/compare 1 Complementary output enabled
 382:STM32_Init.c  **** //             <i> Default: OC1N not active
 383:STM32_Init.c  **** //                       <0=> OC1N not active
 384:STM32_Init.c  **** //                       <1=> OC1N is output on corresponding pin
 385:STM32_Init.c  **** //           <o13.1> TIM1_CCER.CC1P: Capture/compare 1 output Polarity set  
 386:STM32_Init.c  **** //             <i> Default: OC1 active high
 387:STM32_Init.c  **** //                       <0=> OC1 active high
 388:STM32_Init.c  **** //                       <1=> OC1 active low
 389:STM32_Init.c  **** //           <o13.0>  TIM1_CCER.CC1E: Capture/compare 1 output enabled   
 390:STM32_Init.c  **** //             <i> Default: OC1 not active
 391:STM32_Init.c  **** //                       <0=> OC1 not active
 392:STM32_Init.c  **** //                       <1=> OC1 is output on corresponding pin
 393:STM32_Init.c  **** //         </h>
 394:STM32_Init.c  **** //         <h> Channel configured as input
 395:STM32_Init.c  **** //           <o11.4..7> TIM1_CCMR1.IC1F: Input Capture 1 Filter  
 396:STM32_Init.c  **** //             <i> Default: No filter
 397:STM32_Init.c  **** //                       <0=>  No filter
 398:STM32_Init.c  **** //                       <1=>  fSampling=fCK_INT, N=2
 399:STM32_Init.c  **** //                       <2=>  fSampling=fCK_INT, N=4
 400:STM32_Init.c  **** //                       <3=>  fSampling=fCK_INT, N=8
 401:STM32_Init.c  **** //                       <4=>  fSampling=fDTS/2, N=6
 402:STM32_Init.c  **** //                       <5=>  fSampling=fDTS/2, N=8
 403:STM32_Init.c  **** //                       <6=>  fSampling=fDTS/4, N=6
 404:STM32_Init.c  **** //                       <7=>  fSampling=fDTS/4, N=8
 405:STM32_Init.c  **** //                       <8=>  fSampling=fDTS/8, N=6
 406:STM32_Init.c  **** //                       <9=>  fSampling=fDTS/8, N=8
 407:STM32_Init.c  **** //                       <10=> fSampling=fDTS/16, N=5
 408:STM32_Init.c  **** //                       <11=> fSampling=fDTS/16, N=6
 409:STM32_Init.c  **** //                       <12=> fSampling=fDTS/16, N=8
 410:STM32_Init.c  **** //                       <13=> fSampling=fDTS/32, N=5
 411:STM32_Init.c  **** //                       <14=> fSampling=fDTS/32, N=6
 412:STM32_Init.c  **** //                       <15=> fSampling=fDTS/32, N=8
 413:STM32_Init.c  **** //           <o11.2..3> TIM1_CCMR1.IC1PSC: Input Capture 1 Prescaler  
 414:STM32_Init.c  **** //             <i> Default: No prescaler
 415:STM32_Init.c  **** //                       <0=>  No prescaler
 416:STM32_Init.c  **** //                       <1=>  capture every 2 events
 417:STM32_Init.c  **** //                       <2=>  capture every 4 events
 418:STM32_Init.c  **** //                       <3=>  capture every 8 events 
 419:STM32_Init.c  **** //           <o11.0..1> TIM1_CCMR1.CC1S: Capture/compare 1 selection   
 420:STM32_Init.c  **** //             <i> Default: CC1 configured as output
 421:STM32_Init.c  **** //                       <0=> CC1 configured as output
 422:STM32_Init.c  **** //                       <1=> CC1 configured as input, IC1 mapped on TI1
 423:STM32_Init.c  **** //                       <2=> CC1 configured as input, IC1 mapped on TI2
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 9


 424:STM32_Init.c  **** //                       <3=> CC1 configured as input, IC1 mapped on TRGI
 425:STM32_Init.c  **** //           <o13.1>  TIM1_CCER.CC1P: Capture/compare 1 output Polarity set  
 426:STM32_Init.c  **** //             <i> Default: non-inverted
 427:STM32_Init.c  **** //                       <0=> non-inverted
 428:STM32_Init.c  **** //                       <1=> inverted
 429:STM32_Init.c  **** //           <o13.0>  TIM1_CCER.CC1E: Capture/compare 1 output enabled   
 430:STM32_Init.c  **** //             <i> Default: Capture disabled
 431:STM32_Init.c  **** //                       <0=> Capture disabled
 432:STM32_Init.c  **** //                       <1=> Capture enabled
 433:STM32_Init.c  **** //         </h>
 434:STM32_Init.c  **** //       <o14> TIM1_CCR1: Capture/compare register 1 <0-65535>
 435:STM32_Init.c  **** //         <i> Set the Compare register value for compare register 1.
 436:STM32_Init.c  **** //         <i> Default: 0
 437:STM32_Init.c  **** //     </h>
 438:STM32_Init.c  **** //
 439:STM32_Init.c  **** //--------------------------------------------------------------------------- Timer 1 channel 2
 440:STM32_Init.c  **** //       <h> Channel 2 Configuration
 441:STM32_Init.c  **** //         <h> Cannel configured as output
 442:STM32_Init.c  **** //           <o11.15> TIM1_CCMR1.OC2CE: Output Compare 2 Clear enabled  
 443:STM32_Init.c  **** //           <o11.12..14> TIM1_CCMR1.OC2M: Output Compare 2 Mode  
 444:STM32_Init.c  **** //             <i> Default: Frozen
 445:STM32_Init.c  **** //                       <0=>  Frozen
 446:STM32_Init.c  **** //                       <1=>  Set channel 2 to active level on match
 447:STM32_Init.c  **** //                       <2=>  Set channel 2 to inactive level on match
 448:STM32_Init.c  **** //                       <3=>  Toggle 
 449:STM32_Init.c  **** //                       <4=>  Force inactive level
 450:STM32_Init.c  **** //                       <5=>  Force active level
 451:STM32_Init.c  **** //                       <6=>  PWM mode 1
 452:STM32_Init.c  **** //                       <7=>  PWM mode 2
 453:STM32_Init.c  **** //           <o11.11> TIM1_CCMR1.OC2PE: Output Compare 2 Preload enabled  
 454:STM32_Init.c  **** //           <o11.10> TIM1_CCMR1.OC2FE: Output Compare 2 Fast enabled  
 455:STM32_Init.c  **** //           <o11.8..9> TIM1_CCMR1.CC2S: Capture/compare 2 selection   
 456:STM32_Init.c  **** //             <i> Default: CC2 configured as output
 457:STM32_Init.c  **** //                       <0=> CC2 configured as output
 458:STM32_Init.c  **** //           <o13.7> TIM1_CCER.CC2NP: Capture/compare 2 Complementary output Polarity set  
 459:STM32_Init.c  **** //             <i> Default: OC2N active high
 460:STM32_Init.c  **** //                       <0=> OC2N active high
 461:STM32_Init.c  **** //                       <1=> OC2N active low
 462:STM32_Init.c  **** //           <o13.6> TIM1_CCER.CC2NE: Capture/compare 2 Complementary output enabled
 463:STM32_Init.c  **** //             <i> Default: OC2N not active
 464:STM32_Init.c  **** //                       <0=> OC2N not active
 465:STM32_Init.c  **** //                       <1=> OC2N is output on corresponding pin
 466:STM32_Init.c  **** //           <o13.5>  TIM1_CCER.CC2P: Capture/compare 2 output Polarity set  
 467:STM32_Init.c  **** //             <i> Default: OC2 active high
 468:STM32_Init.c  **** //                       <0=> OC2 active high
 469:STM32_Init.c  **** //                       <1=> OC2 active low
 470:STM32_Init.c  **** //           <o13.4>  TIM1_CCER.CC2E: Capture/compare 2 output enabled   
 471:STM32_Init.c  **** //             <i> Default: OC2 not active
 472:STM32_Init.c  **** //                       <0=> OC2 not active
 473:STM32_Init.c  **** //                       <1=> OC2 is output on corresponding pin
 474:STM32_Init.c  **** //         </h>
 475:STM32_Init.c  **** //         <h> Channel configured as input
 476:STM32_Init.c  **** //           <o11.12..15> TIM1_CCMR1.IC2F: Input Capture 2 Filter  
 477:STM32_Init.c  **** //             <i> Default: No filter
 478:STM32_Init.c  **** //                       <0=>  No filter
 479:STM32_Init.c  **** //                       <1=>  fSampling=fCK_INT, N=2
 480:STM32_Init.c  **** //                       <2=>  fSampling=fCK_INT, N=4
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 10


 481:STM32_Init.c  **** //                       <3=>  fSampling=fCK_INT, N=8
 482:STM32_Init.c  **** //                       <4=>  fSampling=fDTS/2, N=6
 483:STM32_Init.c  **** //                       <5=>  fSampling=fDTS/2, N=8
 484:STM32_Init.c  **** //                       <6=>  fSampling=fDTS/4, N=6
 485:STM32_Init.c  **** //                       <7=>  fSampling=fDTS/4, N=8
 486:STM32_Init.c  **** //                       <8=>  fSampling=fDTS/8, N=6
 487:STM32_Init.c  **** //                       <9=>  fSampling=fDTS/8, N=8
 488:STM32_Init.c  **** //                       <10=> fSampling=fDTS/16, N=5
 489:STM32_Init.c  **** //                       <11=> fSampling=fDTS/16, N=6
 490:STM32_Init.c  **** //                       <12=> fSampling=fDTS/16, N=8
 491:STM32_Init.c  **** //                       <13=> fSampling=fDTS/32, N=5
 492:STM32_Init.c  **** //                       <14=> fSampling=fDTS/32, N=6
 493:STM32_Init.c  **** //                       <15=> fSampling=fDTS/32, N=8
 494:STM32_Init.c  **** //           <o11.10..11> TIM1_CCMR1.IC2PSC: Input Capture 2 Prescaler  
 495:STM32_Init.c  **** //             <i> Default: No prescaler
 496:STM32_Init.c  **** //                       <0=>  No prescaler
 497:STM32_Init.c  **** //                       <1=>  capture every 2 events
 498:STM32_Init.c  **** //                       <2=>  capture every 4 events
 499:STM32_Init.c  **** //                       <3=>  capture every 8 events 
 500:STM32_Init.c  **** //           <o11.8..9> TIM1_CCMR1.CC2S: Capture/compare 2 selection   
 501:STM32_Init.c  **** //             <i> Default: CC2 configured as output
 502:STM32_Init.c  **** //                       <0=> CC2 configured as output
 503:STM32_Init.c  **** //                       <1=> CC2 configured as input, IC2 mapped on TI2
 504:STM32_Init.c  **** //                       <2=> CC2 configured as input, IC2 mapped on TI1
 505:STM32_Init.c  **** //                       <3=> CC2 configured as input, IC2 mapped on TRGI
 506:STM32_Init.c  **** //           <o13.5>  TIM1_CCER.CC2P: Capture/compare 2 output Polarity set  
 507:STM32_Init.c  **** //             <i> Default: non-inverted
 508:STM32_Init.c  **** //                       <0=> non-inverted
 509:STM32_Init.c  **** //                       <1=> inverted
 510:STM32_Init.c  **** //           <o13.4>  TIM1_CCER.CC2E: Capture/compare 2 output enabled   
 511:STM32_Init.c  **** //             <i> Default: Capture disabled
 512:STM32_Init.c  **** //                       <0=> Capture disabled
 513:STM32_Init.c  **** //                       <1=> Capture enabled
 514:STM32_Init.c  **** //         </h>
 515:STM32_Init.c  **** //       <o15> TIM1_CCR2: Capture/compare register 2 <0-65535>
 516:STM32_Init.c  **** //         <i> Set the Compare register value for compare register 2.
 517:STM32_Init.c  **** //         <i> Default: 0
 518:STM32_Init.c  **** //     </h>
 519:STM32_Init.c  **** //
 520:STM32_Init.c  **** //--------------------------------------------------------------------------- Timer 1 channel 3
 521:STM32_Init.c  **** //       <h> Channel 3 Configuration
 522:STM32_Init.c  **** //         <h> Cannel configured as output
 523:STM32_Init.c  **** //           <o12.7> TIM1_CCMR2.OC3CE: Output Compare 3 Clear enabled  
 524:STM32_Init.c  **** //           <o12.4..6> TIM1_CCMR2.OC3M: Output Compare 3 Mode  
 525:STM32_Init.c  **** //             <i> Default: Frozen
 526:STM32_Init.c  **** //                       <0=>  Frozen
 527:STM32_Init.c  **** //                       <1=>  Set channel 3 to active level on match
 528:STM32_Init.c  **** //                       <2=>  Set channel 3 to inactive level on match
 529:STM32_Init.c  **** //                       <3=>  Toggle 
 530:STM32_Init.c  **** //                       <4=>  Force inactive level
 531:STM32_Init.c  **** //                       <5=>  Force active level
 532:STM32_Init.c  **** //                       <6=>  PWM mode 1
 533:STM32_Init.c  **** //                       <7=>  PWM mode 2
 534:STM32_Init.c  **** //           <o12.3> TIM1_CCMR2.OC3PE: Output Compare 3 Preload enabled  
 535:STM32_Init.c  **** //           <o12.2> TIM1_CCMR2.OC3FE: Output Compare 3 Fast enabled  
 536:STM32_Init.c  **** //           <o12.0..1> TIM1_CCMR2.CC3S: Capture/compare 3 selection   
 537:STM32_Init.c  **** //             <i> Default: CC3 configured as output
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 11


 538:STM32_Init.c  **** //                       <0=> CC3 configured as output
 539:STM32_Init.c  **** //           <o13.11> TIM1_CCER.CC3NP: Capture/compare 3 Complementary output Polarity set  
 540:STM32_Init.c  **** //             <i> Default: OC3N active high
 541:STM32_Init.c  **** //                       <0=> OC3N active high
 542:STM32_Init.c  **** //                       <1=> OC3N active low
 543:STM32_Init.c  **** //           <o13.10> TIM1_CCER.CC3NE: Capture/compare 3 Complementary output enabled
 544:STM32_Init.c  **** //             <i> Default: OC3N not active
 545:STM32_Init.c  **** //                       <0=> OC3N not active
 546:STM32_Init.c  **** //                       <1=> OC3N is output on corresponding pin
 547:STM32_Init.c  **** //           <o13.9>  TIM1_CCER.CC3P: Capture/compare 3 output Polarity set  
 548:STM32_Init.c  **** //             <i> Default: OC3 active high
 549:STM32_Init.c  **** //                       <0=> OC3 active high
 550:STM32_Init.c  **** //                       <1=> OC3 active low
 551:STM32_Init.c  **** //           <o13.8>  TIM1_CCER.CC3E: Capture/compare 3 output enabled   
 552:STM32_Init.c  **** //             <i> Default: OC3 not active
 553:STM32_Init.c  **** //                       <0=> OC3 not active
 554:STM32_Init.c  **** //                       <1=> OC3 is output on corresponding pin
 555:STM32_Init.c  **** //         </h>
 556:STM32_Init.c  **** //         <h> Channel configured as input
 557:STM32_Init.c  **** //           <o12.4..7> TIM1_CCMR2.IC3F: Input Capture 3 Filter  
 558:STM32_Init.c  **** //             <i> Default: No filter
 559:STM32_Init.c  **** //                       <0=>  No filter
 560:STM32_Init.c  **** //                       <1=>  fSampling=fCK_INT, N=2
 561:STM32_Init.c  **** //                       <2=>  fSampling=fCK_INT, N=4
 562:STM32_Init.c  **** //                       <3=>  fSampling=fCK_INT, N=8
 563:STM32_Init.c  **** //                       <4=>  fSampling=fDTS/2, N=6
 564:STM32_Init.c  **** //                       <5=>  fSampling=fDTS/2, N=8
 565:STM32_Init.c  **** //                       <6=>  fSampling=fDTS/4, N=6
 566:STM32_Init.c  **** //                       <7=>  fSampling=fDTS/4, N=8
 567:STM32_Init.c  **** //                       <8=>  fSampling=fDTS/8, N=6
 568:STM32_Init.c  **** //                       <9=>  fSampling=fDTS/8, N=8
 569:STM32_Init.c  **** //                       <10=> fSampling=fDTS/16, N=5
 570:STM32_Init.c  **** //                       <11=> fSampling=fDTS/16, N=6
 571:STM32_Init.c  **** //                       <12=> fSampling=fDTS/16, N=8
 572:STM32_Init.c  **** //                       <13=> fSampling=fDTS/32, N=5
 573:STM32_Init.c  **** //                       <14=> fSampling=fDTS/32, N=6
 574:STM32_Init.c  **** //                       <15=> fSampling=fDTS/32, N=8
 575:STM32_Init.c  **** //           <o12.2..3> TIM1_CCMR2.IC3PSC: Input Capture 3 Prescaler  
 576:STM32_Init.c  **** //             <i> Default: No prescaler
 577:STM32_Init.c  **** //                       <0=>  No prescaler
 578:STM32_Init.c  **** //                       <1=>  capture every 2 events
 579:STM32_Init.c  **** //                       <2=>  capture every 4 events
 580:STM32_Init.c  **** //                       <3=>  capture every 8 events 
 581:STM32_Init.c  **** //           <o12.0..1> TIM1_CCMR2.CC3S: Capture/compare 3 selection   
 582:STM32_Init.c  **** //             <i> Default: CC3 configured as output
 583:STM32_Init.c  **** //                       <0=> CC3 configured as output
 584:STM32_Init.c  **** //                       <1=> CC3 configured as input, IC3 mapped on TI3
 585:STM32_Init.c  **** //                       <2=> CC3 configured as input, IC3 mapped on TI4
 586:STM32_Init.c  **** //                       <3=> CC3 configured as input, IC3 mapped on TRGI
 587:STM32_Init.c  **** //           <o13.9>  TIM1_CCER.CC3P: Capture/compare 3 output Polarity set  
 588:STM32_Init.c  **** //             <i> Default: non-inverted
 589:STM32_Init.c  **** //                       <0=> non-inverted
 590:STM32_Init.c  **** //                       <1=> inverted
 591:STM32_Init.c  **** //           <o13.8>  TIM1_CCER.CC3E: Capture/compare 3 output enabled   
 592:STM32_Init.c  **** //             <i> Default: Capture disabled
 593:STM32_Init.c  **** //                       <0=> Capture disabled
 594:STM32_Init.c  **** //                       <1=> Capture enabled
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 12


 595:STM32_Init.c  **** //         </h>
 596:STM32_Init.c  **** //       <o16> TIM1_CCR3: Capture/compare register 3 <0-65535>
 597:STM32_Init.c  **** //         <i> Set the Compare register value for compare register 3.
 598:STM32_Init.c  **** //         <i> Default: 0
 599:STM32_Init.c  **** //     </h>
 600:STM32_Init.c  **** //
 601:STM32_Init.c  **** //--------------------------------------------------------------------------- Timer 1 channel 4
 602:STM32_Init.c  **** //       <h> Channel 4 Configuration
 603:STM32_Init.c  **** //         <h> Cannel configured as output
 604:STM32_Init.c  **** //           <o12.15> TIM1_CCMR2.OC4CE: Output Compare 4 Clear enabled  
 605:STM32_Init.c  **** //           <o12.12..14> TIM1_CCMR2.OC4M: Output Compare 4 Mode  
 606:STM32_Init.c  **** //             <i> Default: Frozen
 607:STM32_Init.c  **** //                       <0=>  Frozen
 608:STM32_Init.c  **** //                       <1=>  Set channel 4 to active level on match
 609:STM32_Init.c  **** //                       <2=>  Set channel 4 to inactive level on match
 610:STM32_Init.c  **** //                       <3=>  Toggle 
 611:STM32_Init.c  **** //                       <4=>  Force inactive level
 612:STM32_Init.c  **** //                       <5=>  Force active level
 613:STM32_Init.c  **** //                       <6=>  PWM mode 1
 614:STM32_Init.c  **** //                       <7=>  PWM mode 2
 615:STM32_Init.c  **** //           <o12.11> TIM1_CCMR2.OC4PE: Output Compare 4 Preload enabled  
 616:STM32_Init.c  **** //           <o12.10> TIM1_CCMR2.OC4FE: Output Compare 4 Fast enabled  
 617:STM32_Init.c  **** //           <o12.8..9> TIM1_CCMR2.CC4S: Capture/compare 4 selection   
 618:STM32_Init.c  **** //             <i> Default: CC4 configured as output
 619:STM32_Init.c  **** //                       <0=> CC4 configured as output
 620:STM32_Init.c  **** //           <o13.13>  TIM1_CCER.CC4P: Capture/compare 4 output Polarity set  
 621:STM32_Init.c  **** //             <i> Default: OC4 active high
 622:STM32_Init.c  **** //                       <0=> OC4 active high
 623:STM32_Init.c  **** //                       <1=> OC4 active low
 624:STM32_Init.c  **** //           <o13.12>  TIM1_CCER.CC4E: Capture/compare 4 output enabled   
 625:STM32_Init.c  **** //             <i> Default: OC4 not active
 626:STM32_Init.c  **** //                       <0=> OC4 not active
 627:STM32_Init.c  **** //                       <1=> OC4 is output on corresponding pin
 628:STM32_Init.c  **** //         </h>
 629:STM32_Init.c  **** //         <h> Channel configured as input
 630:STM32_Init.c  **** //           <o12.12..15> TIM1_CCMR2.IC4F: Input Capture 4 Filter  
 631:STM32_Init.c  **** //             <i> Default: No filter
 632:STM32_Init.c  **** //                       <0=>  No filter
 633:STM32_Init.c  **** //                       <1=>  fSampling=fCK_INT, N=2
 634:STM32_Init.c  **** //                       <2=>  fSampling=fCK_INT, N=4
 635:STM32_Init.c  **** //                       <3=>  fSampling=fCK_INT, N=8
 636:STM32_Init.c  **** //                       <4=>  fSampling=fDTS/2, N=6
 637:STM32_Init.c  **** //                       <5=>  fSampling=fDTS/2, N=8
 638:STM32_Init.c  **** //                       <6=>  fSampling=fDTS/4, N=6
 639:STM32_Init.c  **** //                       <7=>  fSampling=fDTS/4, N=8
 640:STM32_Init.c  **** //                       <8=>  fSampling=fDTS/8, N=6
 641:STM32_Init.c  **** //                       <9=>  fSampling=fDTS/8, N=8
 642:STM32_Init.c  **** //                       <10=> fSampling=fDTS/16, N=5
 643:STM32_Init.c  **** //                       <11=> fSampling=fDTS/16, N=6
 644:STM32_Init.c  **** //                       <12=> fSampling=fDTS/16, N=8
 645:STM32_Init.c  **** //                       <13=> fSampling=fDTS/32, N=5
 646:STM32_Init.c  **** //                       <14=> fSampling=fDTS/32, N=6
 647:STM32_Init.c  **** //                       <15=> fSampling=fDTS/32, N=8
 648:STM32_Init.c  **** //           <o12.10..11> TIM1_CCMR2.IC4PSC: Input Capture 4 Prescaler  
 649:STM32_Init.c  **** //             <i> Default: No prescaler
 650:STM32_Init.c  **** //                       <0=>  No prescaler
 651:STM32_Init.c  **** //                       <1=>  capture every 2 events
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 13


 652:STM32_Init.c  **** //                       <2=>  capture every 4 events
 653:STM32_Init.c  **** //                       <3=>  capture every 8 events 
 654:STM32_Init.c  **** //           <o12.8..9> TIM1_CCMR2.CC4S: Capture/compare 4 selection   
 655:STM32_Init.c  **** //             <i> Default: CC4 configured as output
 656:STM32_Init.c  **** //                       <0=> CC4 configured as output
 657:STM32_Init.c  **** //                       <1=> CC4 configured as input, IC4 mapped on TI4
 658:STM32_Init.c  **** //                       <2=> CC4 configured as input, IC4 mapped on TI3
 659:STM32_Init.c  **** //                       <3=> CC4 configured as input, IC4 mapped on TRGI
 660:STM32_Init.c  **** //           <o13.13>  TIM1_CCER.CC4P: Capture/compare 4 output Polarity set  
 661:STM32_Init.c  **** //             <i> Default: non-inverted
 662:STM32_Init.c  **** //                       <0=> non-inverted
 663:STM32_Init.c  **** //                       <1=> inverted
 664:STM32_Init.c  **** //           <o13.12>  TIM1_CCER.CC4E: Capture/compare 4 output enabled   
 665:STM32_Init.c  **** //             <i> Default: Capture disabled
 666:STM32_Init.c  **** //                       <0=> Capture disabled
 667:STM32_Init.c  **** //                       <1=> Capture enabled
 668:STM32_Init.c  **** //         </h>
 669:STM32_Init.c  **** //       <o17> TIM1_CCR4: Capture/compare register 4 <0-65535>
 670:STM32_Init.c  **** //         <i> Set the Compare register value for compare register 4.
 671:STM32_Init.c  **** //         <i> Default: 0
 672:STM32_Init.c  **** //     </h>
 673:STM32_Init.c  **** //
 674:STM32_Init.c  **** //       <h> Timer1 Break and dead-time register Configuration (TIM1_BDTR)
 675:STM32_Init.c  **** //         <o18.15> TIM1_BDTR.MOE: Main Output enabled
 676:STM32_Init.c  **** //         <o18.14> TIM1_BDTR.AOE: Automatic Output enabled
 677:STM32_Init.c  **** //         <o18.13> TIM1_BDTR.BKP: Break Polarity active high
 678:STM32_Init.c  **** //         <o18.12> TIM1_BDTR.BKE: Break Inputs enabled
 679:STM32_Init.c  **** //         <o18.11> TIM1_BDTR.OSSR: Off-State Selection for Run mode
 680:STM32_Init.c  **** //           <i> Default: OC/OCN output signal=0
 681:STM32_Init.c  **** //                     <0=> OC/OCN output signal=0
 682:STM32_Init.c  **** //                     <1=> OC/OCN output signal=1
 683:STM32_Init.c  **** //         <o18.10> TIM1_BDTR.OSSI: Off-State Selection for Idle mode
 684:STM32_Init.c  **** //           <i> Default: OC/OCN output signal=0
 685:STM32_Init.c  **** //                     <0=> OC/OCN output signal=0
 686:STM32_Init.c  **** //                     <1=> OC/OCN output signal=1
 687:STM32_Init.c  **** //         <o18.8..9> TIM1_BDTR.LOCK: Lock Level <0-3>
 688:STM32_Init.c  **** //           <i> Default: 0 (LOCK OFF)
 689:STM32_Init.c  **** //         <o18.0..7> TIM1_BDTR.DTG: Dead-Time Generator set-up <0x00-0xFF>   
 690:STM32_Init.c  **** //       </h>
 691:STM32_Init.c  **** //
 692:STM32_Init.c  **** //     </e>
 693:STM32_Init.c  **** //     <e3.0> TIM1 interrupts
 694:STM32_Init.c  **** //       <o19.14> TIM1_DIER.TDE: Trigger DMA request enabled
 695:STM32_Init.c  **** //       <o19.12> TIM1_DIER.CC4DE: Capture/Compare 4 DMA request enabled
 696:STM32_Init.c  **** //       <o19.11> TIM1_DIER.CC3DE: Capture/Compare 3 DMA request enabled
 697:STM32_Init.c  **** //       <o19.10> TIM1_DIER.CC2DE: Capture/Compare 2 DMA request enabled
 698:STM32_Init.c  **** //       <o19.9>  TIM1_DIER.CC1DE: Capture/Compare 1 DMA request enabled
 699:STM32_Init.c  **** //       <o19.8>  TIM1_DIER.UDE: Update DMA request enabled
 700:STM32_Init.c  **** //       <o19.7>  TIM1_DIER.BIE: Break interrupt enabled
 701:STM32_Init.c  **** //       <o19.6>  TIM1_DIER.TIE: Trigger interrupt enabled
 702:STM32_Init.c  **** //       <o19.5>  TIM1_DIER.COMIE: COM interrupt enabled
 703:STM32_Init.c  **** //       <o19.4>  TIM1_DIER.CC4IE: Capture/Compare 4 interrupt enabled
 704:STM32_Init.c  **** //       <o19.3>  TIM1_DIER.CC3IE: Capture/Compare 3 interrupt enabled
 705:STM32_Init.c  **** //       <o19.2>  TIM1_DIER.CC2IE: Capture/Compare 2 interrupt enabled
 706:STM32_Init.c  **** //       <o19.1>  TIM1_DIER.CC1IE: Capture/Compare 1 interrupt enabled
 707:STM32_Init.c  **** //       <o19.0>  TIM1_DIER.UIE: Update interrupt enabled
 708:STM32_Init.c  **** //     </e>
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 14


 709:STM32_Init.c  **** //   </e>
 710:STM32_Init.c  **** //--------------------------------------------------------------------------- Timer 2 enabled
 711:STM32_Init.c  **** //   <e1.1> TIM2 : Timer 2 enabled
 712:STM32_Init.c  **** //     <o20> TIM2 period [us] <1-72000000:10>
 713:STM32_Init.c  **** //       <i> Set the timer period for Timer 2.
 714:STM32_Init.c  **** //       <i> Default: 1000  (1ms)
 715:STM32_Init.c  **** //       <i> Ignored if Detailed settings is selected
 716:STM32_Init.c  **** //     <e2.1> TIM2 detailed settings
 717:STM32_Init.c  **** //--------------------------------------------------------------------------- Timer 2 detailed sett
 718:STM32_Init.c  **** //       <o21> TIM2.PSC: Timer 2 Prescaler <0-65535>
 719:STM32_Init.c  **** //         <i> Set the prescaler for Timer 2.
 720:STM32_Init.c  **** //       <o22> TIM2.ARR: Timer 2 Auto-reload <0-65535>
 721:STM32_Init.c  **** //         <i> Set the Auto-reload for Timer 2.
 722:STM32_Init.c  **** //       <h> Timer 2 Control Register 1 Configuration (TIM2_CR1)
 723:STM32_Init.c  **** //         <o23.8..9> TIM2_CR1.CKD: Clock division   
 724:STM32_Init.c  **** //           <i> Default: tDTS = tCK_INT
 725:STM32_Init.c  **** //           <i> devision ratio between timer clock and dead time
 726:STM32_Init.c  **** //                     <0=> tDTS = tCK_INT
 727:STM32_Init.c  **** //                     <1=> tDTS = 2*tCK_INT
 728:STM32_Init.c  **** //                     <2=> tDTS = 4*tCK_INT
 729:STM32_Init.c  **** //         <o23.7> TIM2_CR1.ARPE: Auto-reload preload enable
 730:STM32_Init.c  **** //           <i> Default: Auto-reload preload disenabled
 731:STM32_Init.c  **** //         <o23.5..6> TIM2_CR1.CMS: Center aligned mode selection   
 732:STM32_Init.c  **** //           <i> Default: Edge-aligned
 733:STM32_Init.c  **** //                     <0=> Edge-aligned
 734:STM32_Init.c  **** //                     <1=> Center-aligned mode1
 735:STM32_Init.c  **** //                     <2=> Center-aligned mode2
 736:STM32_Init.c  **** //                     <3=> Center-aligned mode3
 737:STM32_Init.c  **** //         <o23.4> TIM2_CR1.DIR: Direction
 738:STM32_Init.c  **** //           <i> Default: DIR = Counter used as up-counter
 739:STM32_Init.c  **** //           <i> read only if timer is configured as Center-aligned or Encoder mode   
 740:STM32_Init.c  **** //                     <0=> Counter used as up-counter
 741:STM32_Init.c  **** //                     <1=> Counter used as down-counter
 742:STM32_Init.c  **** //         <o23.3> TIM2_CR1.OPM: One pulse mode enable
 743:STM32_Init.c  **** //           <i> Default: One pulse mode disabled
 744:STM32_Init.c  **** //         <o23.2> TIM2_CR1.URS: Update request source   
 745:STM32_Init.c  **** //           <i> Default: URS = Counter over-/underflow, UG bit, Slave mode controller
 746:STM32_Init.c  **** //                     <0=> Counter over-/underflow, UG bit, Slave mode controller
 747:STM32_Init.c  **** //                     <1=> Counter over-/underflow
 748:STM32_Init.c  **** //         <o23.1> TIM2_CR1.UDIS: Update disable
 749:STM32_Init.c  **** //           <i> Default: Update enabled
 750:STM32_Init.c  **** //       </h>
 751:STM32_Init.c  **** //
 752:STM32_Init.c  **** //       <h> Timer 2 Control Register 2 Configuration (TIM2_CR2)
 753:STM32_Init.c  **** //         <o24.7> TIM2_CR2.TI1S: TI1 Selection  
 754:STM32_Init.c  **** //           <i> Default: TIM2CH1 connected to TI1 input
 755:STM32_Init.c  **** //                     <0=> TIM2CH1 connected to TI1 input
 756:STM32_Init.c  **** //                     <1=> TIM2CH1,CH2,CH3 connected to TI1 input
 757:STM32_Init.c  **** //         <o24.4..6> TIM2_CR2.MMS: Master Mode Selection  
 758:STM32_Init.c  **** //           <i> Default: Reset
 759:STM32_Init.c  **** //           <i> Select information to be sent in master mode to slave timers for synchronisation
 760:STM32_Init.c  **** //                     <0=> Reset
 761:STM32_Init.c  **** //                     <1=> Enable
 762:STM32_Init.c  **** //                     <2=> Update
 763:STM32_Init.c  **** //                     <3=> Compare Pulse
 764:STM32_Init.c  **** //                     <4=> Compare OC1REF iused as TRGO
 765:STM32_Init.c  **** //                     <5=> Compare OC2REF iused as TRGO
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 15


 766:STM32_Init.c  **** //                     <6=> Compare OC3REF iused as TRGO
 767:STM32_Init.c  **** //                     <7=> Compare OC4REF iused as TRGO
 768:STM32_Init.c  **** //         <o24.3> TIM2_CR2.CCDS: Capture/Compare DMA Selection  
 769:STM32_Init.c  **** //           <i> Default: CC4 DMA request on CC4 event
 770:STM32_Init.c  **** //                     <0=> CC4 DMA request on CC4 event
 771:STM32_Init.c  **** //                     <1=> CC4 DMA request on update event
 772:STM32_Init.c  **** //       </h>
 773:STM32_Init.c  **** //
 774:STM32_Init.c  **** //       <h> Timer 2 Slave mode control register Configuration (TIM2_SMC)
 775:STM32_Init.c  **** //         <o25.15> TIM2_SMCR.ETP: External trigger polarity
 776:STM32_Init.c  **** //           <i> Default: ETR is non-inverted
 777:STM32_Init.c  **** //                     <0=> ETR is non-inverted
 778:STM32_Init.c  **** //                     <1=> ETR is inverted
 779:STM32_Init.c  **** //         <o25.14> TIM2_SMCR.ECE: External clock mode 2 enabled
 780:STM32_Init.c  **** //         <o25.12..13> TIM2_SMCR.ETPS: External trigger prescaler  
 781:STM32_Init.c  **** //           <i> Default: Prescaler OFF
 782:STM32_Init.c  **** //                     <0=> Prescaler OFF
 783:STM32_Init.c  **** //                     <1=> fETPR/2
 784:STM32_Init.c  **** //                     <2=> fETPR/4
 785:STM32_Init.c  **** //                     <3=> fETPR/8
 786:STM32_Init.c  **** //         <o25.8..11> TIM2_SMCR.ETF: External trigger filter  
 787:STM32_Init.c  **** //           <i> Default: No filter
 788:STM32_Init.c  **** //                     <0=>  No filter
 789:STM32_Init.c  **** //                     <1=>  fSampling=fCK_INT, N=2
 790:STM32_Init.c  **** //                     <2=>  fSampling=fCK_INT, N=4
 791:STM32_Init.c  **** //                     <3=>  fSampling=fCK_INT, N=8
 792:STM32_Init.c  **** //                     <4=>  fSampling=fDTS/2, N=6
 793:STM32_Init.c  **** //                     <5=>  fSampling=fDTS/2, N=8
 794:STM32_Init.c  **** //                     <6=>  fSampling=fDTS/4, N=6
 795:STM32_Init.c  **** //                     <7=>  fSampling=fDTS/4, N=8
 796:STM32_Init.c  **** //                     <8=>  fSampling=fDTS/8, N=6
 797:STM32_Init.c  **** //                     <9=>  fSampling=fDTS/8, N=8
 798:STM32_Init.c  **** //                     <10=> fSampling=fDTS/16, N=5
 799:STM32_Init.c  **** //                     <11=> fSampling=fDTS/16, N=6
 800:STM32_Init.c  **** //                     <12=> fSampling=fDTS/16, N=8
 801:STM32_Init.c  **** //                     <13=> fSampling=fDTS/32, N=5
 802:STM32_Init.c  **** //                     <14=> fSampling=fDTS/32, N=6
 803:STM32_Init.c  **** //                     <15=> fSampling=fDTS/32, N=8
 804:STM32_Init.c  **** //         <o25.7> TIM2_SMCR.MSM: Delay trigger input  
 805:STM32_Init.c  **** //         <o25.4..6> TIM2_SMCR.TS: Trigger Selection  
 806:STM32_Init.c  **** //           <i> Default: TIM1 (ITR0)
 807:STM32_Init.c  **** //                     <0=> TIM1 (ITR0)
 808:STM32_Init.c  **** //                     <1=> TIM2 (ITR1)
 809:STM32_Init.c  **** //                     <2=> TIM3 (ITR2)
 810:STM32_Init.c  **** //                     <3=> TIM4 (ITR3)
 811:STM32_Init.c  **** //                     <4=> TI1 Edge Detector (TI1F_ED)
 812:STM32_Init.c  **** //                     <5=> Filtered Timer Input 1 (TI1FP1)
 813:STM32_Init.c  **** //                     <6=> Filtered Timer Input 2 (TI1FP2)
 814:STM32_Init.c  **** //                     <7=> External Trigger Input (ETRF)
 815:STM32_Init.c  **** //         <o25.0..2> TIM2_SMCR.SMS: Slave mode selection   
 816:STM32_Init.c  **** //           <i> Default: Slave mode disabled
 817:STM32_Init.c  **** //                     <0=> Slave mode disabled
 818:STM32_Init.c  **** //                     <1=> Encoder mode 1
 819:STM32_Init.c  **** //                     <2=> Encoder mode 2
 820:STM32_Init.c  **** //                     <3=> Encoder mode 3
 821:STM32_Init.c  **** //                     <4=> Reset mode
 822:STM32_Init.c  **** //                     <5=> Gated mode
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 16


 823:STM32_Init.c  **** //                     <6=> Trigger mode
 824:STM32_Init.c  **** //                     <7=> External clock mode 1
 825:STM32_Init.c  **** //       </h>
 826:STM32_Init.c  **** //
 827:STM32_Init.c  **** //
 828:STM32_Init.c  **** //--------------------------------------------------------------------------- Timer 2 channel 1
 829:STM32_Init.c  **** //       <h> Channel 1 Configuration
 830:STM32_Init.c  **** //         <h> Cannel configured as output
 831:STM32_Init.c  **** //           <o26.7> TIM2_CCMR1.OC1CE: Output Compare 1 Clear enabled  
 832:STM32_Init.c  **** //           <o26.4..6> TIM2_CCMR1.OC1M: Output Compare 1 Mode  
 833:STM32_Init.c  **** //             <i> Default: Frozen
 834:STM32_Init.c  **** //                       <0=>  Frozen
 835:STM32_Init.c  **** //                       <1=>  Set channel 1 to active level on match
 836:STM32_Init.c  **** //                       <2=>  Set channel 1 to inactive level on match
 837:STM32_Init.c  **** //                       <3=>  Toggle 
 838:STM32_Init.c  **** //                       <4=>  Force inactive level
 839:STM32_Init.c  **** //                       <5=>  Force active level
 840:STM32_Init.c  **** //                       <6=>  PWM mode 1
 841:STM32_Init.c  **** //                       <7=>  PWM mode 2
 842:STM32_Init.c  **** //           <o26.3> TIM2_CCMR1.OC1PE: Output Compare 1 Preload enabled  
 843:STM32_Init.c  **** //           <o26.2> TIM2_CCMR1.OC1FE: Output Compare 1 Fast enabled  
 844:STM32_Init.c  **** //           <o26.0..1> TIM2_CCMR1.CC1S: Capture/compare 1 selection   
 845:STM32_Init.c  **** //             <i> Default: CC1 configured as output
 846:STM32_Init.c  **** //                       <0=> CC1 configured as output
 847:STM32_Init.c  **** //           <o28.1>  TIM2_CCER.CC1P: Capture/compare 1 output Polarity set  
 848:STM32_Init.c  **** //             <i> Default: OC1 active high
 849:STM32_Init.c  **** //                       <0=> OC1 active high
 850:STM32_Init.c  **** //                       <1=> OC1 active low
 851:STM32_Init.c  **** //           <o28.0>  TIM1_CCER.CC1E: Capture/compare 1 output enabled   
 852:STM32_Init.c  **** //             <i> Default: OC1 not active
 853:STM32_Init.c  **** //                       <0=> OC1 not active
 854:STM32_Init.c  **** //                       <1=> OC1 is output on corresponding pin
 855:STM32_Init.c  **** //         </h>
 856:STM32_Init.c  **** //         <h> Channel configured as input
 857:STM32_Init.c  **** //           <o26.4..7> TIM2_CCMR1.IC1F: Input Capture 1 Filter  
 858:STM32_Init.c  **** //             <i> Default: No filter
 859:STM32_Init.c  **** //                       <0=>  No filter
 860:STM32_Init.c  **** //                       <1=>  fSampling=fCK_INT, N=2
 861:STM32_Init.c  **** //                       <2=>  fSampling=fCK_INT, N=4
 862:STM32_Init.c  **** //                       <3=>  fSampling=fCK_INT, N=8
 863:STM32_Init.c  **** //                       <4=>  fSampling=fDTS/2, N=6
 864:STM32_Init.c  **** //                       <5=>  fSampling=fDTS/2, N=8
 865:STM32_Init.c  **** //                       <6=>  fSampling=fDTS/4, N=6
 866:STM32_Init.c  **** //                       <7=>  fSampling=fDTS/4, N=8
 867:STM32_Init.c  **** //                       <8=>  fSampling=fDTS/8, N=6
 868:STM32_Init.c  **** //                       <9=>  fSampling=fDTS/8, N=8
 869:STM32_Init.c  **** //                       <10=> fSampling=fDTS/16, N=5
 870:STM32_Init.c  **** //                       <11=> fSampling=fDTS/16, N=6
 871:STM32_Init.c  **** //                       <12=> fSampling=fDTS/16, N=8
 872:STM32_Init.c  **** //                       <13=> fSampling=fDTS/32, N=5
 873:STM32_Init.c  **** //                       <14=> fSampling=fDTS/32, N=6
 874:STM32_Init.c  **** //                       <15=> fSampling=fDTS/32, N=8
 875:STM32_Init.c  **** //           <o26.2..3> TIM2_CCMR1.IC1PSC: Input Capture 1 Prescaler  
 876:STM32_Init.c  **** //             <i> Default: No prescaler
 877:STM32_Init.c  **** //                       <0=>  No prescaler
 878:STM32_Init.c  **** //                       <1=>  capture every 2 events
 879:STM32_Init.c  **** //                       <2=>  capture every 4 events
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 17


 880:STM32_Init.c  **** //                       <3=>  capture every 8 events 
 881:STM32_Init.c  **** //           <o26.0..1> TIM2_CCMR1.CC1S: Capture/compare 1 selection   
 882:STM32_Init.c  **** //             <i> Default: CC1 configured as output
 883:STM32_Init.c  **** //                       <0=> CC1 configured as output
 884:STM32_Init.c  **** //                       <1=> CC1 configured as input, IC1 mapped on TI1
 885:STM32_Init.c  **** //                       <2=> CC1 configured as input, IC1 mapped on TI2
 886:STM32_Init.c  **** //                       <3=> CC1 configured as input, IC1 mapped on TRGI
 887:STM32_Init.c  **** //           <o28.1>  TIM2_CCER.CC1P: Capture/compare 1 output Polarity set  
 888:STM32_Init.c  **** //             <i> Default: non-inverted
 889:STM32_Init.c  **** //                       <0=> non-inverted
 890:STM32_Init.c  **** //                       <1=> inverted
 891:STM32_Init.c  **** //           <o28.0>  TIM2_CCER.CC1E: Capture/compare 1 output enabled   
 892:STM32_Init.c  **** //             <i> Default: Capture disabled
 893:STM32_Init.c  **** //                       <0=> Capture disabled
 894:STM32_Init.c  **** //                       <1=> Capture enabled
 895:STM32_Init.c  **** //         </h>
 896:STM32_Init.c  **** //       <o29> TIM2_CCR1: Capture/compare register 1 <0-65535>
 897:STM32_Init.c  **** //         <i> Set the Compare register value for compare register 1.
 898:STM32_Init.c  **** //         <i> Default: 0
 899:STM32_Init.c  **** //     </h>
 900:STM32_Init.c  **** //
 901:STM32_Init.c  **** //--------------------------------------------------------------------------- Timer 2 channel 2
 902:STM32_Init.c  **** //       <h> Channel 2 Configuration
 903:STM32_Init.c  **** //         <h> Cannel configured as output
 904:STM32_Init.c  **** //           <o26.15> TIM2_CCMR1.OC2CE: Output Compare 2 Clear enabled  
 905:STM32_Init.c  **** //           <o26.12..14> TIM2_CCMR1.OC2M: Output Compare 2 Mode  
 906:STM32_Init.c  **** //             <i> Default: Frozen
 907:STM32_Init.c  **** //                       <0=>  Frozen
 908:STM32_Init.c  **** //                       <1=>  Set channel 2 to active level on match
 909:STM32_Init.c  **** //                       <2=>  Set channel 2 to inactive level on match
 910:STM32_Init.c  **** //                       <3=>  Toggle 
 911:STM32_Init.c  **** //                       <4=>  Force inactive level
 912:STM32_Init.c  **** //                       <5=>  Force active level
 913:STM32_Init.c  **** //                       <6=>  PWM mode 1
 914:STM32_Init.c  **** //                       <7=>  PWM mode 2
 915:STM32_Init.c  **** //           <o26.11> TIM2_CCMR1.OC2PE: Output Compare 2 Preload enabled  
 916:STM32_Init.c  **** //           <o26.10> TIM2_CCMR1.OC2FE: Output Compare 2 Fast enabled  
 917:STM32_Init.c  **** //           <o26.8..9> TIM2_CCMR1.CC2S: Capture/compare 2 selection   
 918:STM32_Init.c  **** //             <i> Default: CC2 configured as output
 919:STM32_Init.c  **** //                       <0=> CC2 configured as output
 920:STM32_Init.c  **** //           <o28.5>  TIM2_CCER.CC2P: Capture/compare 2 output Polarity set  
 921:STM32_Init.c  **** //             <i> Default: OC2 active high
 922:STM32_Init.c  **** //                       <0=> OC2 active high
 923:STM32_Init.c  **** //                       <1=> OC2 active low
 924:STM32_Init.c  **** //           <o28.4>  TIM2_CCER.CC2E: Capture/compare 2 output enabled   
 925:STM32_Init.c  **** //             <i> Default: OC2 not active
 926:STM32_Init.c  **** //                       <0=> OC2 not active
 927:STM32_Init.c  **** //                       <1=> OC2 is output on corresponding pin
 928:STM32_Init.c  **** //         </h>
 929:STM32_Init.c  **** //         <h> Channel configured as input
 930:STM32_Init.c  **** //           <o26.12..15> TIM2_CCMR1.IC2F: Input Capture 2 Filter  
 931:STM32_Init.c  **** //             <i> Default: No filter
 932:STM32_Init.c  **** //                       <0=>  No filter
 933:STM32_Init.c  **** //                       <1=>  fSampling=fCK_INT, N=2
 934:STM32_Init.c  **** //                       <2=>  fSampling=fCK_INT, N=4
 935:STM32_Init.c  **** //                       <3=>  fSampling=fCK_INT, N=8
 936:STM32_Init.c  **** //                       <4=>  fSampling=fDTS/2, N=6
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 18


 937:STM32_Init.c  **** //                       <5=>  fSampling=fDTS/2, N=8
 938:STM32_Init.c  **** //                       <6=>  fSampling=fDTS/4, N=6
 939:STM32_Init.c  **** //                       <7=>  fSampling=fDTS/4, N=8
 940:STM32_Init.c  **** //                       <8=>  fSampling=fDTS/8, N=6
 941:STM32_Init.c  **** //                       <9=>  fSampling=fDTS/8, N=8
 942:STM32_Init.c  **** //                       <10=> fSampling=fDTS/16, N=5
 943:STM32_Init.c  **** //                       <11=> fSampling=fDTS/16, N=6
 944:STM32_Init.c  **** //                       <12=> fSampling=fDTS/16, N=8
 945:STM32_Init.c  **** //                       <13=> fSampling=fDTS/32, N=5
 946:STM32_Init.c  **** //                       <14=> fSampling=fDTS/32, N=6
 947:STM32_Init.c  **** //                       <15=> fSampling=fDTS/32, N=8
 948:STM32_Init.c  **** //           <o26.10..11> TIM2_CCMR1.IC2PSC: Input Capture 2 Prescaler  
 949:STM32_Init.c  **** //             <i> Default: No prescaler
 950:STM32_Init.c  **** //                       <0=>  No prescaler
 951:STM32_Init.c  **** //                       <1=>  capture every 2 events
 952:STM32_Init.c  **** //                       <2=>  capture every 4 events
 953:STM32_Init.c  **** //                       <3=>  capture every 8 events 
 954:STM32_Init.c  **** //           <o26.8..9> TIM2_CCMR1.CC2S: Capture/compare 2 selection   
 955:STM32_Init.c  **** //             <i> Default: CC2 configured as output
 956:STM32_Init.c  **** //                       <0=> CC2 configured as output
 957:STM32_Init.c  **** //                       <1=> CC2 configured as input, IC2 mapped on TI2
 958:STM32_Init.c  **** //                       <2=> CC2 configured as input, IC2 mapped on TI1
 959:STM32_Init.c  **** //                       <3=> CC2 configured as input, IC2 mapped on TRGI
 960:STM32_Init.c  **** //           <o28.5>  TIM2_CCER.CC2P: Capture/compare 2 output Polarity set  
 961:STM32_Init.c  **** //             <i> Default: non-inverted
 962:STM32_Init.c  **** //                       <0=> non-inverted
 963:STM32_Init.c  **** //                       <1=> inverted
 964:STM32_Init.c  **** //           <o28.4>  TIM2_CCER.CC2E: Capture/compare 2 output enabled   
 965:STM32_Init.c  **** //             <i> Default: Capture disabled
 966:STM32_Init.c  **** //                       <0=> Capture disabled
 967:STM32_Init.c  **** //                       <1=> Capture enabled
 968:STM32_Init.c  **** //         </h>
 969:STM32_Init.c  **** //       <o30> TIM2_CCR2: Capture/compare register 2 <0-65535>
 970:STM32_Init.c  **** //         <i> Set the Compare register value for compare register 2.
 971:STM32_Init.c  **** //         <i> Default: 0
 972:STM32_Init.c  **** //     </h>
 973:STM32_Init.c  **** //
 974:STM32_Init.c  **** //--------------------------------------------------------------------------- Timer 2 channel 3
 975:STM32_Init.c  **** //       <h> Channel 3 Configuration
 976:STM32_Init.c  **** //         <h> Cannel configured as output
 977:STM32_Init.c  **** //           <o27.7> TIM2_CCMR2.OC3CE: Output Compare 3 Clear enabled  
 978:STM32_Init.c  **** //           <o27.4..6> TIM2_CCMR2.OC3M: Output Compare 3 Mode  
 979:STM32_Init.c  **** //             <i> Default: Frozen
 980:STM32_Init.c  **** //                       <0=>  Frozen
 981:STM32_Init.c  **** //                       <1=>  Set channel 3 to active level on match
 982:STM32_Init.c  **** //                       <2=>  Set channel 3 to inactive level on match
 983:STM32_Init.c  **** //                       <3=>  Toggle 
 984:STM32_Init.c  **** //                       <4=>  Force inactive level
 985:STM32_Init.c  **** //                       <5=>  Force active level
 986:STM32_Init.c  **** //                       <6=>  PWM mode 1
 987:STM32_Init.c  **** //                       <7=>  PWM mode 2
 988:STM32_Init.c  **** //           <o27.3> TIM2_CCMR2.OC3PE: Output Compare 3 Preload enabled  
 989:STM32_Init.c  **** //           <o27.2> TIM2_CCMR2.OC3FE: Output Compare 3 Fast enabled  
 990:STM32_Init.c  **** //           <o27.0..1> TIM2_CCMR2.CC3S: Capture/compare 3 selection   
 991:STM32_Init.c  **** //             <i> Default: CC3 configured as output
 992:STM32_Init.c  **** //                       <0=> CC3 configured as output
 993:STM32_Init.c  **** //           <o28.9>  TIM2_CCER.CC3P: Capture/compare 3 output Polarity set  
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 19


 994:STM32_Init.c  **** //             <i> Default: OC3 active high
 995:STM32_Init.c  **** //                       <0=> OC3 active high
 996:STM32_Init.c  **** //                       <1=> OC3 active low
 997:STM32_Init.c  **** //           <o28.8>  TIM2_CCER.CC3E: Capture/compare 3 output enabled   
 998:STM32_Init.c  **** //             <i> Default: OC3 not active
 999:STM32_Init.c  **** //                       <0=> OC3 not active
1000:STM32_Init.c  **** //                       <1=> OC3 is output on corresponding pin
1001:STM32_Init.c  **** //         </h>
1002:STM32_Init.c  **** //         <h> Channel configured as input
1003:STM32_Init.c  **** //           <o27.4..7> TIM2_CCMR2.IC3F: Input Capture 3 Filter  
1004:STM32_Init.c  **** //             <i> Default: No filter
1005:STM32_Init.c  **** //                       <0=>  No filter
1006:STM32_Init.c  **** //                       <1=>  fSampling=fCK_INT, N=2
1007:STM32_Init.c  **** //                       <2=>  fSampling=fCK_INT, N=4
1008:STM32_Init.c  **** //                       <3=>  fSampling=fCK_INT, N=8
1009:STM32_Init.c  **** //                       <4=>  fSampling=fDTS/2, N=6
1010:STM32_Init.c  **** //                       <5=>  fSampling=fDTS/2, N=8
1011:STM32_Init.c  **** //                       <6=>  fSampling=fDTS/4, N=6
1012:STM32_Init.c  **** //                       <7=>  fSampling=fDTS/4, N=8
1013:STM32_Init.c  **** //                       <8=>  fSampling=fDTS/8, N=6
1014:STM32_Init.c  **** //                       <9=>  fSampling=fDTS/8, N=8
1015:STM32_Init.c  **** //                       <10=> fSampling=fDTS/16, N=5
1016:STM32_Init.c  **** //                       <11=> fSampling=fDTS/16, N=6
1017:STM32_Init.c  **** //                       <12=> fSampling=fDTS/16, N=8
1018:STM32_Init.c  **** //                       <13=> fSampling=fDTS/32, N=5
1019:STM32_Init.c  **** //                       <14=> fSampling=fDTS/32, N=6
1020:STM32_Init.c  **** //                       <15=> fSampling=fDTS/32, N=8
1021:STM32_Init.c  **** //           <o27.2..3> TIM2_CCMR2.IC3PSC: Input Capture 3 Prescaler  
1022:STM32_Init.c  **** //             <i> Default: No prescaler
1023:STM32_Init.c  **** //                       <0=>  No prescaler
1024:STM32_Init.c  **** //                       <1=>  capture every 2 events
1025:STM32_Init.c  **** //                       <2=>  capture every 4 events
1026:STM32_Init.c  **** //                       <3=>  capture every 8 events 
1027:STM32_Init.c  **** //           <o27.0..1> TIM2_CCMR2.CC3S: Capture/compare 3 selection   
1028:STM32_Init.c  **** //             <i> Default: CC3 configured as output
1029:STM32_Init.c  **** //                       <0=> CC3 configured as output
1030:STM32_Init.c  **** //                       <1=> CC3 configured as input, IC3 mapped on TI3
1031:STM32_Init.c  **** //                       <2=> CC3 configured as input, IC3 mapped on TI4
1032:STM32_Init.c  **** //                       <3=> CC3 configured as input, IC3 mapped on TRGI
1033:STM32_Init.c  **** //           <o28.9>  TIM2_CCER.CC3P: Capture/compare 3 output Polarity set  
1034:STM32_Init.c  **** //             <i> Default: non-inverted
1035:STM32_Init.c  **** //                       <0=> non-inverted
1036:STM32_Init.c  **** //                       <1=> inverted
1037:STM32_Init.c  **** //           <o28.8>  TIM2_CCER.CC3E: Capture/compare 3 output enabled   
1038:STM32_Init.c  **** //             <i> Default: Capture disabled
1039:STM32_Init.c  **** //                       <0=> Capture disabled
1040:STM32_Init.c  **** //                       <1=> Capture enabled
1041:STM32_Init.c  **** //         </h>
1042:STM32_Init.c  **** //       <o31> TIM2_CCR3: Capture/compare register 3 <0-65535>
1043:STM32_Init.c  **** //         <i> Set the Compare register value for compare register 3.
1044:STM32_Init.c  **** //         <i> Default: 0
1045:STM32_Init.c  **** //     </h>
1046:STM32_Init.c  **** //
1047:STM32_Init.c  **** //--------------------------------------------------------------------------- Timer 2 channel 4
1048:STM32_Init.c  **** //       <h> Channel 4 Configuration
1049:STM32_Init.c  **** //         <h> Cannel configured as output
1050:STM32_Init.c  **** //           <o27.15> TIM2_CCMR2.OC4CE: Output Compare 4 Clear enabled  
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 20


1051:STM32_Init.c  **** //           <o27.12..14> TIM2_CCMR2.OC4M: Output Compare 4 Mode  
1052:STM32_Init.c  **** //             <i> Default: Frozen
1053:STM32_Init.c  **** //                       <0=>  Frozen
1054:STM32_Init.c  **** //                       <1=>  Set channel 4 to active level on match
1055:STM32_Init.c  **** //                       <2=>  Set channel 4 to inactive level on match
1056:STM32_Init.c  **** //                       <3=>  Toggle 
1057:STM32_Init.c  **** //                       <4=>  Force inactive level
1058:STM32_Init.c  **** //                       <5=>  Force active level
1059:STM32_Init.c  **** //                       <6=>  PWM mode 1
1060:STM32_Init.c  **** //                       <7=>  PWM mode 2
1061:STM32_Init.c  **** //           <o27.11> TIM2_CCMR2.OC4PE: Output Compare 4 Preload enabled  
1062:STM32_Init.c  **** //           <o27.10> TIM2_CCMR2.OC4FE: Output Compare 4 Fast enabled  
1063:STM32_Init.c  **** //           <o27.8..9> TIM2_CCMR2.CC4S: Capture/compare 4 selection   
1064:STM32_Init.c  **** //             <i> Default: CC4 configured as output
1065:STM32_Init.c  **** //                       <0=> CC4 configured as output
1066:STM32_Init.c  **** //           <o28.13>  TIM2_CCER.CC4P: Capture/compare 4 output Polarity set  
1067:STM32_Init.c  **** //             <i> Default: OC4 active high
1068:STM32_Init.c  **** //                       <0=> OC4 active high
1069:STM32_Init.c  **** //                       <1=> OC4 active low
1070:STM32_Init.c  **** //           <o28.12>  TIM2_CCER.CC4E: Capture/compare 4 output enabled   
1071:STM32_Init.c  **** //             <i> Default: OC4 not active
1072:STM32_Init.c  **** //                       <0=> OC4 not active
1073:STM32_Init.c  **** //                       <1=> OC4 is output on corresponding pin
1074:STM32_Init.c  **** //         </h>
1075:STM32_Init.c  **** //         <h> Channel configured as input
1076:STM32_Init.c  **** //           <o27.12..15> TIM2_CCMR2.IC4F: Input Capture 4 Filter  
1077:STM32_Init.c  **** //             <i> Default: No filter
1078:STM32_Init.c  **** //                       <0=>  No filter
1079:STM32_Init.c  **** //                       <1=>  fSampling=fCK_INT, N=2
1080:STM32_Init.c  **** //                       <2=>  fSampling=fCK_INT, N=4
1081:STM32_Init.c  **** //                       <3=>  fSampling=fCK_INT, N=8
1082:STM32_Init.c  **** //                       <4=>  fSampling=fDTS/2, N=6
1083:STM32_Init.c  **** //                       <5=>  fSampling=fDTS/2, N=8
1084:STM32_Init.c  **** //                       <6=>  fSampling=fDTS/4, N=6
1085:STM32_Init.c  **** //                       <7=>  fSampling=fDTS/4, N=8
1086:STM32_Init.c  **** //                       <8=>  fSampling=fDTS/8, N=6
1087:STM32_Init.c  **** //                       <9=>  fSampling=fDTS/8, N=8
1088:STM32_Init.c  **** //                       <10=> fSampling=fDTS/16, N=5
1089:STM32_Init.c  **** //                       <11=> fSampling=fDTS/16, N=6
1090:STM32_Init.c  **** //                       <12=> fSampling=fDTS/16, N=8
1091:STM32_Init.c  **** //                       <13=> fSampling=fDTS/32, N=5
1092:STM32_Init.c  **** //                       <14=> fSampling=fDTS/32, N=6
1093:STM32_Init.c  **** //                       <15=> fSampling=fDTS/32, N=8
1094:STM32_Init.c  **** //           <o27.10..11> TIM2_CCMR2.IC4PSC: Input Capture 4 Prescaler  
1095:STM32_Init.c  **** //             <i> Default: No prescaler
1096:STM32_Init.c  **** //                       <0=>  No prescaler
1097:STM32_Init.c  **** //                       <1=>  capture every 2 events
1098:STM32_Init.c  **** //                       <2=>  capture every 4 events
1099:STM32_Init.c  **** //                       <3=>  capture every 8 events 
1100:STM32_Init.c  **** //           <o27.8..9> TIM2_CCMR2.CC4S: Capture/compare 4 selection   
1101:STM32_Init.c  **** //             <i> Default: CC4 configured as output
1102:STM32_Init.c  **** //                       <0=> CC4 configured as output
1103:STM32_Init.c  **** //                       <1=> CC4 configured as input, IC4 mapped on TI4
1104:STM32_Init.c  **** //                       <2=> CC4 configured as input, IC4 mapped on TI3
1105:STM32_Init.c  **** //                       <3=> CC4 configured as input, IC4 mapped on TRGI
1106:STM32_Init.c  **** //           <o28.13>  TIM2_CCER.CC4P: Capture/compare 4 output Polarity set  
1107:STM32_Init.c  **** //             <i> Default: non-inverted
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 21


1108:STM32_Init.c  **** //                       <0=> non-inverted
1109:STM32_Init.c  **** //                       <1=> inverted
1110:STM32_Init.c  **** //           <o28.12>  TIM2_CCER.CC4E: Capture/compare 4 output enabled   
1111:STM32_Init.c  **** //             <i> Default: Capture disabled
1112:STM32_Init.c  **** //                       <0=> Capture disabled
1113:STM32_Init.c  **** //                       <1=> Capture enabled
1114:STM32_Init.c  **** //         </h>
1115:STM32_Init.c  **** //       <o32> TIM2_CCR4: Capture/compare register 4 <0-65535>
1116:STM32_Init.c  **** //         <i> Set the Compare register value for compare register 4.
1117:STM32_Init.c  **** //         <i> Default: 0
1118:STM32_Init.c  **** //     </h>
1119:STM32_Init.c  **** //
1120:STM32_Init.c  **** //     </e>
1121:STM32_Init.c  **** //     <e3.1> TIM2 interrupts
1122:STM32_Init.c  **** //       <o33.14> TIM2_DIER.TDE: Trigger DMA request enabled
1123:STM32_Init.c  **** //       <o33.12> TIM2_DIER.CC4DE: Capture/Compare 4 DMA request enabled
1124:STM32_Init.c  **** //       <o33.11> TIM2_DIER.CC3DE: Capture/Compare 3 DMA request enabled
1125:STM32_Init.c  **** //       <o33.10> TIM2_DIER.CC2DE: Capture/Compare 2 DMA request enabled
1126:STM32_Init.c  **** //       <o33.9>  TIM2_DIER.CC1DE: Capture/Compare 1 DMA request enabled
1127:STM32_Init.c  **** //       <o33.8>  TIM2_DIER.UDE: Update DMA request enabled
1128:STM32_Init.c  **** //       <o33.6>  TIM2_DIER.TIE: Trigger interrupt enabled
1129:STM32_Init.c  **** //       <o33.4>  TIM2_DIER.CC4IE: Capture/Compare 4 interrupt enabled
1130:STM32_Init.c  **** //       <o33.3>  TIM2_DIER.CC3IE: Capture/Compare 3 interrupt enabled
1131:STM32_Init.c  **** //       <o33.2>  TIM2_DIER.CC2IE: Capture/Compare 2 interrupt enabled
1132:STM32_Init.c  **** //       <o33.1>  TIM2_DIER.CC1IE: Capture/Compare 1 interrupt enabled
1133:STM32_Init.c  **** //       <o33.0>  TIM2_DIER.UIE: Update interrupt enabled
1134:STM32_Init.c  **** //     </e>
1135:STM32_Init.c  **** //   </e>
1136:STM32_Init.c  **** //--------------------------------------------------------------------------- Timer 3 enabled
1137:STM32_Init.c  **** //   <e1.2> TIM3 : Timer 3 enabled
1138:STM32_Init.c  **** //     <o34> TIM3 period [us] <1-72000000:10>
1139:STM32_Init.c  **** //       <i> Set the timer period for Timer 3.
1140:STM32_Init.c  **** //       <i> Default: 1000  (1ms)
1141:STM32_Init.c  **** //       <i> Ignored if Detailed settings is selected
1142:STM32_Init.c  **** //--------------------------------------------------------------------------- Timer 3 detailed sett
1143:STM32_Init.c  **** //     <e2.2> TIM3 detailed settings
1144:STM32_Init.c  **** //       <o35> TIM3.PSC: Timer 3 Prescaler <0-65535>
1145:STM32_Init.c  **** //         <i> Set the prescaler for Timer 3.
1146:STM32_Init.c  **** //       <o36> TIM3.ARR: Timer 3 Auto-reload <0-65535>
1147:STM32_Init.c  **** //         <i> Set the Auto-reload for Timer 3.
1148:STM32_Init.c  **** //       <h> Timer 3 Control Register 1 Configuration (TIM3_CR1)
1149:STM32_Init.c  **** //         <o37.8..9> TIM3_CR1.CKD: Clock division   
1150:STM32_Init.c  **** //           <i> Default: tDTS = tCK_INT
1151:STM32_Init.c  **** //           <i> devision ratio between timer clock and dead time
1152:STM32_Init.c  **** //                     <0=> tDTS = tCK_INT
1153:STM32_Init.c  **** //                     <1=> tDTS = 2*tCK_INT
1154:STM32_Init.c  **** //                     <2=> tDTS = 4*tCK_INT
1155:STM32_Init.c  **** //         <o37.7> TIM3_CR1.ARPE: Auto-reload preload enable
1156:STM32_Init.c  **** //           <i> Default: Auto-reload preload disenabled
1157:STM32_Init.c  **** //         <o37.5..6> TIM3_CR1.CMS: Center aligned mode selection   
1158:STM32_Init.c  **** //           <i> Default: Edge-aligned
1159:STM32_Init.c  **** //                     <0=> Edge-aligned
1160:STM32_Init.c  **** //                     <1=> Center-aligned mode1
1161:STM32_Init.c  **** //                     <2=> Center-aligned mode2
1162:STM32_Init.c  **** //                     <3=> Center-aligned mode3
1163:STM32_Init.c  **** //         <o37.4> TIM3_CR1.DIR: Direction
1164:STM32_Init.c  **** //           <i> Default: DIR = Counter used as up-counter
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 22


1165:STM32_Init.c  **** //           <i> read only if timer is configured as Center-aligned or Encoder mode   
1166:STM32_Init.c  **** //                     <0=> Counter used as up-counter
1167:STM32_Init.c  **** //                     <1=> Counter used as down-counter
1168:STM32_Init.c  **** //         <o37.3> TIM3_CR1.OPM: One pulse mode enable
1169:STM32_Init.c  **** //           <i> Default: One pulse mode disabled
1170:STM32_Init.c  **** //         <o37.2> TIM3_CR1.URS: Update request source   
1171:STM32_Init.c  **** //           <i> Default: URS = Counter over-/underflow, UG bit, Slave mode controller
1172:STM32_Init.c  **** //                     <0=> Counter over-/underflow, UG bit, Slave mode controller
1173:STM32_Init.c  **** //                     <1=> Counter over-/underflow
1174:STM32_Init.c  **** //         <o37.1> TIM3_CR1.UDIS: Update disable
1175:STM32_Init.c  **** //           <i> Default: Update enabled
1176:STM32_Init.c  **** //       </h>
1177:STM32_Init.c  **** //
1178:STM32_Init.c  **** //       <h> Timer 3 Control Register 2 Configuration (TIM3_CR2)
1179:STM32_Init.c  **** //         <o38.7> TIM3_CR2.TI1S: TI1 Selection  
1180:STM32_Init.c  **** //           <i> Default: TIM3CH1 connected to TI1 input
1181:STM32_Init.c  **** //                     <0=> TIM3CH1 connected to TI1 input
1182:STM32_Init.c  **** //                     <1=> TIM3CH1,CH2,CH3 connected to TI1 input
1183:STM32_Init.c  **** //         <o38.4..6> TIM3_CR2.MMS: Master Mode Selection  
1184:STM32_Init.c  **** //           <i> Default: Reset
1185:STM32_Init.c  **** //           <i> Select information to be sent in master mode to slave timers for synchronisation
1186:STM32_Init.c  **** //                     <0=> Reset
1187:STM32_Init.c  **** //                     <1=> Enable
1188:STM32_Init.c  **** //                     <2=> Update
1189:STM32_Init.c  **** //                     <3=> Compare Pulse
1190:STM32_Init.c  **** //                     <4=> Compare OC1REF iused as TRGO
1191:STM32_Init.c  **** //                     <5=> Compare OC2REF iused as TRGO
1192:STM32_Init.c  **** //                     <6=> Compare OC3REF iused as TRGO
1193:STM32_Init.c  **** //                     <7=> Compare OC4REF iused as TRGO
1194:STM32_Init.c  **** //         <o38.3> TIM3_CR2.CCDS: Capture/Compare DMA Selection  
1195:STM32_Init.c  **** //           <i> Default: CC4 DMA request on CC4 event
1196:STM32_Init.c  **** //                     <0=> CC4 DMA request on CC4 event
1197:STM32_Init.c  **** //                     <1=> CC4 DMA request on update event
1198:STM32_Init.c  **** //       </h>
1199:STM32_Init.c  **** //
1200:STM32_Init.c  **** //       <h> Timer 3 Slave mode control register Configuration (TIM3_SMC)
1201:STM32_Init.c  **** //         <o39.15> TIM3_SMCR.ETP: External trigger polarity
1202:STM32_Init.c  **** //           <i> Default: ETR is non-inverted
1203:STM32_Init.c  **** //                     <0=> ETR is non-inverted
1204:STM32_Init.c  **** //                     <1=> ETR is inverted
1205:STM32_Init.c  **** //         <o39.14> TIM3_SMCR.ECE: External clock mode 2 enabled
1206:STM32_Init.c  **** //         <o39.12..13> TIM3_SMCR.ETPS: External trigger prescaler  
1207:STM32_Init.c  **** //           <i> Default: Prescaler OFF
1208:STM32_Init.c  **** //                     <0=> Prescaler OFF
1209:STM32_Init.c  **** //                     <1=> fETPR/2
1210:STM32_Init.c  **** //                     <2=> fETPR/4
1211:STM32_Init.c  **** //                     <3=> fETPR/8
1212:STM32_Init.c  **** //         <o39.8..11> TIM3_SMCR.ETF: External trigger filter  
1213:STM32_Init.c  **** //           <i> Default: No filter
1214:STM32_Init.c  **** //                     <0=>  No filter
1215:STM32_Init.c  **** //                     <1=>  fSampling=fCK_INT, N=2
1216:STM32_Init.c  **** //                     <2=>  fSampling=fCK_INT, N=4
1217:STM32_Init.c  **** //                     <3=>  fSampling=fCK_INT, N=8
1218:STM32_Init.c  **** //                     <4=>  fSampling=fDTS/2, N=6
1219:STM32_Init.c  **** //                     <5=>  fSampling=fDTS/2, N=8
1220:STM32_Init.c  **** //                     <6=>  fSampling=fDTS/4, N=6
1221:STM32_Init.c  **** //                     <7=>  fSampling=fDTS/4, N=8
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 23


1222:STM32_Init.c  **** //                     <8=>  fSampling=fDTS/8, N=6
1223:STM32_Init.c  **** //                     <9=>  fSampling=fDTS/8, N=8
1224:STM32_Init.c  **** //                     <10=> fSampling=fDTS/16, N=5
1225:STM32_Init.c  **** //                     <11=> fSampling=fDTS/16, N=6
1226:STM32_Init.c  **** //                     <12=> fSampling=fDTS/16, N=8
1227:STM32_Init.c  **** //                     <13=> fSampling=fDTS/32, N=5
1228:STM32_Init.c  **** //                     <14=> fSampling=fDTS/32, N=6
1229:STM32_Init.c  **** //                     <15=> fSampling=fDTS/32, N=8
1230:STM32_Init.c  **** //         <o39.7> TIM3_SMCR.MSM: Delay trigger input  
1231:STM32_Init.c  **** //         <o39.4..6> TIM3_SMCR.TS: Trigger Selection  
1232:STM32_Init.c  **** //           <i> Default: TIM1 (ITR0)
1233:STM32_Init.c  **** //                     <0=> TIM1 (ITR0)
1234:STM32_Init.c  **** //                     <1=> TIM2 (ITR1)
1235:STM32_Init.c  **** //                     <2=> TIM3 (ITR2)
1236:STM32_Init.c  **** //                     <3=> TIM4 (ITR3)
1237:STM32_Init.c  **** //                     <4=> TI1 Edge Detector (TI1F_ED)
1238:STM32_Init.c  **** //                     <5=> Filtered Timer Input 1 (TI1FP1)
1239:STM32_Init.c  **** //                     <6=> Filtered Timer Input 2 (TI1FP2)
1240:STM32_Init.c  **** //                     <7=> External Trigger Input (ETRF)
1241:STM32_Init.c  **** //         <o39.0..2> TIM3_SMCR.SMS: Slave mode selection   
1242:STM32_Init.c  **** //           <i> Default: Slave mode disabled
1243:STM32_Init.c  **** //                     <0=> Slave mode disabled
1244:STM32_Init.c  **** //                     <1=> Encoder mode 1
1245:STM32_Init.c  **** //                     <2=> Encoder mode 2
1246:STM32_Init.c  **** //                     <3=> Encoder mode 3
1247:STM32_Init.c  **** //                     <4=> Reset mode
1248:STM32_Init.c  **** //                     <5=> Gated mode
1249:STM32_Init.c  **** //                     <6=> Trigger mode
1250:STM32_Init.c  **** //                     <7=> External clock mode 1
1251:STM32_Init.c  **** //       </h>
1252:STM32_Init.c  **** //
1253:STM32_Init.c  **** //--------------------------------------------------------------------------- Timer 3 channel 1
1254:STM32_Init.c  **** //       <h> Channel 1 Configuration
1255:STM32_Init.c  **** //         <h> Cannel configured as output
1256:STM32_Init.c  **** //           <o40.7> TIM3_CCMR1.OC1CE: Output Compare 1 Clear enabled  
1257:STM32_Init.c  **** //           <o40.4..6> TIM3_CCMR1.OC1M: Output Compare 1 Mode  
1258:STM32_Init.c  **** //             <i> Default: Frozen
1259:STM32_Init.c  **** //                       <0=>  Frozen
1260:STM32_Init.c  **** //                       <1=>  Set channel 1 to active level on match
1261:STM32_Init.c  **** //                       <2=>  Set channel 1 to inactive level on match
1262:STM32_Init.c  **** //                       <3=>  Toggle 
1263:STM32_Init.c  **** //                       <4=>  Force inactive level
1264:STM32_Init.c  **** //                       <5=>  Force active level
1265:STM32_Init.c  **** //                       <6=>  PWM mode 1
1266:STM32_Init.c  **** //                       <7=>  PWM mode 2
1267:STM32_Init.c  **** //           <o40.3> TIM3_CCMR1.OC1PE: Output Compare 1 Preload enabled  
1268:STM32_Init.c  **** //           <o40.2> TIM3_CCMR1.OC1FE: Output Compare 1 Fast enabled  
1269:STM32_Init.c  **** //           <o40.0..1> TIM3_CCMR1.CC1S: Capture/compare 1 selection   
1270:STM32_Init.c  **** //             <i> Default: CC1 configured as output
1271:STM32_Init.c  **** //                       <0=> CC1 configured as output
1272:STM32_Init.c  **** //           <o42.1>  TIM3_CCER.CC1P: Capture/compare 1 output Polarity set  
1273:STM32_Init.c  **** //             <i> Default: OC1 active high
1274:STM32_Init.c  **** //                       <0=> OC1 active high
1275:STM32_Init.c  **** //                       <1=> OC1 active low
1276:STM32_Init.c  **** //           <o42.0>  TIM1_CCER.CC1E: Capture/compare 1 output enabled   
1277:STM32_Init.c  **** //             <i> Default: OC1 not active
1278:STM32_Init.c  **** //                       <0=> OC1 not active
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 24


1279:STM32_Init.c  **** //                       <1=> OC1 is output on corresponding pin
1280:STM32_Init.c  **** //         </h>
1281:STM32_Init.c  **** //         <h> Channel configured as input
1282:STM32_Init.c  **** //           <o40.4..7> TIM3_CCMR1.IC1F: Input Capture 1 Filter  
1283:STM32_Init.c  **** //             <i> Default: No filter
1284:STM32_Init.c  **** //                       <0=>  No filter
1285:STM32_Init.c  **** //                       <1=>  fSampling=fCK_INT, N=2
1286:STM32_Init.c  **** //                       <2=>  fSampling=fCK_INT, N=4
1287:STM32_Init.c  **** //                       <3=>  fSampling=fCK_INT, N=8
1288:STM32_Init.c  **** //                       <4=>  fSampling=fDTS/2, N=6
1289:STM32_Init.c  **** //                       <5=>  fSampling=fDTS/2, N=8
1290:STM32_Init.c  **** //                       <6=>  fSampling=fDTS/4, N=6
1291:STM32_Init.c  **** //                       <7=>  fSampling=fDTS/4, N=8
1292:STM32_Init.c  **** //                       <8=>  fSampling=fDTS/8, N=6
1293:STM32_Init.c  **** //                       <9=>  fSampling=fDTS/8, N=8
1294:STM32_Init.c  **** //                       <10=> fSampling=fDTS/16, N=5
1295:STM32_Init.c  **** //                       <11=> fSampling=fDTS/16, N=6
1296:STM32_Init.c  **** //                       <12=> fSampling=fDTS/16, N=8
1297:STM32_Init.c  **** //                       <13=> fSampling=fDTS/32, N=5
1298:STM32_Init.c  **** //                       <14=> fSampling=fDTS/32, N=6
1299:STM32_Init.c  **** //                       <15=> fSampling=fDTS/32, N=8
1300:STM32_Init.c  **** //           <o40.2..3> TIM3_CCMR1.IC1PSC: Input Capture 1 Prescaler  
1301:STM32_Init.c  **** //             <i> Default: No prescaler
1302:STM32_Init.c  **** //                       <0=>  No prescaler
1303:STM32_Init.c  **** //                       <1=>  capture every 2 events
1304:STM32_Init.c  **** //                       <2=>  capture every 4 events
1305:STM32_Init.c  **** //                       <3=>  capture every 8 events 
1306:STM32_Init.c  **** //           <o40.0..1> TIM3_CCMR1.CC1S: Capture/compare 1 selection   
1307:STM32_Init.c  **** //             <i> Default: CC1 configured as output
1308:STM32_Init.c  **** //                       <0=> CC1 configured as output
1309:STM32_Init.c  **** //                       <1=> CC1 configured as input, IC1 mapped on TI1
1310:STM32_Init.c  **** //                       <2=> CC1 configured as input, IC1 mapped on TI2
1311:STM32_Init.c  **** //                       <3=> CC1 configured as input, IC1 mapped on TRGI
1312:STM32_Init.c  **** //           <o42.1>  TIM3_CCER.CC1P: Capture/compare 1 output Polarity set  
1313:STM32_Init.c  **** //             <i> Default: non-inverted
1314:STM32_Init.c  **** //                       <0=> non-inverted
1315:STM32_Init.c  **** //                       <1=> inverted
1316:STM32_Init.c  **** //           <o42.0>  TIM3_CCER.CC1E: Capture/compare 1 output enabled   
1317:STM32_Init.c  **** //             <i> Default: Capture disabled
1318:STM32_Init.c  **** //                       <0=> Capture disabled
1319:STM32_Init.c  **** //                       <1=> Capture enabled
1320:STM32_Init.c  **** //         </h>
1321:STM32_Init.c  **** //       <o43> TIM3_CCR1: Capture/compare register 1 <0-65535>
1322:STM32_Init.c  **** //         <i> Set the Compare register value for compare register 1.
1323:STM32_Init.c  **** //         <i> Default: 0
1324:STM32_Init.c  **** //     </h>
1325:STM32_Init.c  **** //
1326:STM32_Init.c  **** //--------------------------------------------------------------------------- Timer 3 channel 2
1327:STM32_Init.c  **** //       <h> Channel 2 Configuration
1328:STM32_Init.c  **** //         <h> Cannel configured as output
1329:STM32_Init.c  **** //           <o40.15> TIM3_CCMR1.OC2CE: Output Compare 2 Clear enabled  
1330:STM32_Init.c  **** //           <o40.12..14> TIM3_CCMR1.OC2M: Output Compare 2 Mode  
1331:STM32_Init.c  **** //             <i> Default: Frozen
1332:STM32_Init.c  **** //                       <0=>  Frozen
1333:STM32_Init.c  **** //                       <1=>  Set channel 2 to active level on match
1334:STM32_Init.c  **** //                       <2=>  Set channel 2 to inactive level on match
1335:STM32_Init.c  **** //                       <3=>  Toggle 
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 25


1336:STM32_Init.c  **** //                       <4=>  Force inactive level
1337:STM32_Init.c  **** //                       <5=>  Force active level
1338:STM32_Init.c  **** //                       <6=>  PWM mode 1
1339:STM32_Init.c  **** //                       <7=>  PWM mode 2
1340:STM32_Init.c  **** //           <o40.11> TIM3_CCMR1.OC2PE: Output Compare 2 Preload enabled  
1341:STM32_Init.c  **** //           <o40.10> TIM3_CCMR1.OC2FE: Output Compare 2 Fast enabled  
1342:STM32_Init.c  **** //           <o40.8..9> TIM3_CCMR1.CC2S: Capture/compare 2 selection   
1343:STM32_Init.c  **** //             <i> Default: CC2 configured as output
1344:STM32_Init.c  **** //                       <0=> CC2 configured as output
1345:STM32_Init.c  **** //           <o42.5>  TIM3_CCER.CC2P: Capture/compare 2 output Polarity set  
1346:STM32_Init.c  **** //             <i> Default: OC2 active high
1347:STM32_Init.c  **** //                       <0=> OC2 active high
1348:STM32_Init.c  **** //                       <1=> OC2 active low
1349:STM32_Init.c  **** //           <o42.4>  TIM3_CCER.CC2E: Capture/compare 2 output enabled   
1350:STM32_Init.c  **** //             <i> Default: OC2 not active
1351:STM32_Init.c  **** //                       <0=> OC2 not active
1352:STM32_Init.c  **** //                       <1=> OC2 is output on corresponding pin
1353:STM32_Init.c  **** //         </h>
1354:STM32_Init.c  **** //         <h> Channel configured as input
1355:STM32_Init.c  **** //           <o40.12..15> TIM3_CCMR1.IC2F: Input Capture 2 Filter  
1356:STM32_Init.c  **** //             <i> Default: No filter
1357:STM32_Init.c  **** //                       <0=>  No filter
1358:STM32_Init.c  **** //                       <1=>  fSampling=fCK_INT, N=2
1359:STM32_Init.c  **** //                       <2=>  fSampling=fCK_INT, N=4
1360:STM32_Init.c  **** //                       <3=>  fSampling=fCK_INT, N=8
1361:STM32_Init.c  **** //                       <4=>  fSampling=fDTS/2, N=6
1362:STM32_Init.c  **** //                       <5=>  fSampling=fDTS/2, N=8
1363:STM32_Init.c  **** //                       <6=>  fSampling=fDTS/4, N=6
1364:STM32_Init.c  **** //                       <7=>  fSampling=fDTS/4, N=8
1365:STM32_Init.c  **** //                       <8=>  fSampling=fDTS/8, N=6
1366:STM32_Init.c  **** //                       <9=>  fSampling=fDTS/8, N=8
1367:STM32_Init.c  **** //                       <10=> fSampling=fDTS/16, N=5
1368:STM32_Init.c  **** //                       <11=> fSampling=fDTS/16, N=6
1369:STM32_Init.c  **** //                       <12=> fSampling=fDTS/16, N=8
1370:STM32_Init.c  **** //                       <13=> fSampling=fDTS/32, N=5
1371:STM32_Init.c  **** //                       <14=> fSampling=fDTS/32, N=6
1372:STM32_Init.c  **** //                       <15=> fSampling=fDTS/32, N=8
1373:STM32_Init.c  **** //           <o40.10..11> TIM3_CCMR1.IC2PSC: Input Capture 2 Prescaler  
1374:STM32_Init.c  **** //             <i> Default: No prescaler
1375:STM32_Init.c  **** //                       <0=>  No prescaler
1376:STM32_Init.c  **** //                       <1=>  capture every 2 events
1377:STM32_Init.c  **** //                       <2=>  capture every 4 events
1378:STM32_Init.c  **** //                       <3=>  capture every 8 events 
1379:STM32_Init.c  **** //           <o40.8..9> TIM3_CCMR1.CC2S: Capture/compare 2 selection   
1380:STM32_Init.c  **** //             <i> Default: CC2 configured as output
1381:STM32_Init.c  **** //                       <0=> CC2 configured as output
1382:STM32_Init.c  **** //                       <1=> CC2 configured as input, IC2 mapped on TI2
1383:STM32_Init.c  **** //                       <2=> CC2 configured as input, IC2 mapped on TI1
1384:STM32_Init.c  **** //                       <3=> CC2 configured as input, IC2 mapped on TRGI
1385:STM32_Init.c  **** //           <o42.5>  TIM3_CCER.CC2P: Capture/compare 2 output Polarity set  
1386:STM32_Init.c  **** //             <i> Default: non-inverted
1387:STM32_Init.c  **** //                       <0=> non-inverted
1388:STM32_Init.c  **** //                       <1=> inverted
1389:STM32_Init.c  **** //           <o42.4>  TIM3_CCER.CC2E: Capture/compare 2 output enabled   
1390:STM32_Init.c  **** //             <i> Default: Capture disabled
1391:STM32_Init.c  **** //                       <0=> Capture disabled
1392:STM32_Init.c  **** //                       <1=> Capture enabled
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 26


1393:STM32_Init.c  **** //         </h>
1394:STM32_Init.c  **** //       <o44> TIM3_CCR2: Capture/compare register 2 <0-65535>
1395:STM32_Init.c  **** //         <i> Set the Compare register value for compare register 2.
1396:STM32_Init.c  **** //         <i> Default: 0
1397:STM32_Init.c  **** //     </h>
1398:STM32_Init.c  **** //
1399:STM32_Init.c  **** //--------------------------------------------------------------------------- Timer 3 channel 3
1400:STM32_Init.c  **** //       <h> Channel 3 Configuration
1401:STM32_Init.c  **** //         <h> Cannel configured as output
1402:STM32_Init.c  **** //           <o41.7> TIM3_CCMR2.OC3CE: Output Compare 3 Clear enabled  
1403:STM32_Init.c  **** //           <o41.4..6> TIM3_CCMR2.OC3M: Output Compare 3 Mode  
1404:STM32_Init.c  **** //             <i> Default: Frozen
1405:STM32_Init.c  **** //                       <0=>  Frozen
1406:STM32_Init.c  **** //                       <1=>  Set channel 3 to active level on match
1407:STM32_Init.c  **** //                       <2=>  Set channel 3 to inactive level on match
1408:STM32_Init.c  **** //                       <3=>  Toggle 
1409:STM32_Init.c  **** //                       <4=>  Force inactive level
1410:STM32_Init.c  **** //                       <5=>  Force active level
1411:STM32_Init.c  **** //                       <6=>  PWM mode 1
1412:STM32_Init.c  **** //                       <7=>  PWM mode 2
1413:STM32_Init.c  **** //           <o41.3> TIM3_CCMR2.OC3PE: Output Compare 3 Preload enabled  
1414:STM32_Init.c  **** //           <o41.2> TIM3_CCMR2.OC3FE: Output Compare 3 Fast enabled  
1415:STM32_Init.c  **** //           <o41.0..1> TIM3_CCMR2.CC3S: Capture/compare 3 selection   
1416:STM32_Init.c  **** //             <i> Default: CC3 configured as output
1417:STM32_Init.c  **** //                       <0=> CC3 configured as output
1418:STM32_Init.c  **** //           <o42.9>  TIM3_CCER.CC3P: Capture/compare 3 output Polarity set  
1419:STM32_Init.c  **** //             <i> Default: OC3 active high
1420:STM32_Init.c  **** //                       <0=> OC3 active high
1421:STM32_Init.c  **** //                       <1=> OC3 active low
1422:STM32_Init.c  **** //           <o42.8>  TIM3_CCER.CC3E: Capture/compare 3 output enabled   
1423:STM32_Init.c  **** //             <i> Default: OC3 not active
1424:STM32_Init.c  **** //                       <0=> OC3 not active
1425:STM32_Init.c  **** //                       <1=> OC3 is output on corresponding pin
1426:STM32_Init.c  **** //         </h>
1427:STM32_Init.c  **** //         <h> Channel configured as input
1428:STM32_Init.c  **** //           <o41.4..7> TIM3_CCMR2.IC3F: Input Capture 3 Filter  
1429:STM32_Init.c  **** //             <i> Default: No filter
1430:STM32_Init.c  **** //                       <0=>  No filter
1431:STM32_Init.c  **** //                       <1=>  fSampling=fCK_INT, N=2
1432:STM32_Init.c  **** //                       <2=>  fSampling=fCK_INT, N=4
1433:STM32_Init.c  **** //                       <3=>  fSampling=fCK_INT, N=8
1434:STM32_Init.c  **** //                       <4=>  fSampling=fDTS/2, N=6
1435:STM32_Init.c  **** //                       <5=>  fSampling=fDTS/2, N=8
1436:STM32_Init.c  **** //                       <6=>  fSampling=fDTS/4, N=6
1437:STM32_Init.c  **** //                       <7=>  fSampling=fDTS/4, N=8
1438:STM32_Init.c  **** //                       <8=>  fSampling=fDTS/8, N=6
1439:STM32_Init.c  **** //                       <9=>  fSampling=fDTS/8, N=8
1440:STM32_Init.c  **** //                       <10=> fSampling=fDTS/16, N=5
1441:STM32_Init.c  **** //                       <11=> fSampling=fDTS/16, N=6
1442:STM32_Init.c  **** //                       <12=> fSampling=fDTS/16, N=8
1443:STM32_Init.c  **** //                       <13=> fSampling=fDTS/32, N=5
1444:STM32_Init.c  **** //                       <14=> fSampling=fDTS/32, N=6
1445:STM32_Init.c  **** //                       <15=> fSampling=fDTS/32, N=8
1446:STM32_Init.c  **** //           <o41.2..3> TIM3_CCMR2.IC3PSC: Input Capture 3 Prescaler  
1447:STM32_Init.c  **** //             <i> Default: No prescaler
1448:STM32_Init.c  **** //                       <0=>  No prescaler
1449:STM32_Init.c  **** //                       <1=>  capture every 2 events
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 27


1450:STM32_Init.c  **** //                       <2=>  capture every 4 events
1451:STM32_Init.c  **** //                       <3=>  capture every 8 events 
1452:STM32_Init.c  **** //           <o41.0..1> TIM3_CCMR2.CC3S: Capture/compare 3 selection   
1453:STM32_Init.c  **** //             <i> Default: CC3 configured as output
1454:STM32_Init.c  **** //                       <0=> CC3 configured as output
1455:STM32_Init.c  **** //                       <1=> CC3 configured as input, IC3 mapped on TI3
1456:STM32_Init.c  **** //                       <2=> CC3 configured as input, IC3 mapped on TI4
1457:STM32_Init.c  **** //                       <3=> CC3 configured as input, IC3 mapped on TRGI
1458:STM32_Init.c  **** //           <o42.9>  TIM3_CCER.CC3P: Capture/compare 3 output Polarity set  
1459:STM32_Init.c  **** //             <i> Default: non-inverted
1460:STM32_Init.c  **** //                       <0=> non-inverted
1461:STM32_Init.c  **** //                       <1=> inverted
1462:STM32_Init.c  **** //           <o42.8>  TIM3_CCER.CC3E: Capture/compare 3 output enabled   
1463:STM32_Init.c  **** //             <i> Default: Capture disabled
1464:STM32_Init.c  **** //                       <0=> Capture disabled
1465:STM32_Init.c  **** //                       <1=> Capture enabled
1466:STM32_Init.c  **** //         </h>
1467:STM32_Init.c  **** //       <o45> TIM3_CCR3: Capture/compare register 3 <0-65535>
1468:STM32_Init.c  **** //         <i> Set the Compare register value for compare register 3.
1469:STM32_Init.c  **** //         <i> Default: 0
1470:STM32_Init.c  **** //     </h>
1471:STM32_Init.c  **** //
1472:STM32_Init.c  **** //--------------------------------------------------------------------------- Timer 3 channel 4
1473:STM32_Init.c  **** //       <h> Channel 4 Configuration
1474:STM32_Init.c  **** //         <h> Cannel configured as output
1475:STM32_Init.c  **** //           <o41.15> TIM3_CCMR2.OC4CE: Output Compare 4 Clear enabled  
1476:STM32_Init.c  **** //           <o41.12..14> TIM3_CCMR2.OC4M: Output Compare 4 Mode  
1477:STM32_Init.c  **** //             <i> Default: Frozen
1478:STM32_Init.c  **** //                       <0=>  Frozen
1479:STM32_Init.c  **** //                       <1=>  Set channel 4 to active level on match
1480:STM32_Init.c  **** //                       <2=>  Set channel 4 to inactive level on match
1481:STM32_Init.c  **** //                       <3=>  Toggle 
1482:STM32_Init.c  **** //                       <4=>  Force inactive level
1483:STM32_Init.c  **** //                       <5=>  Force active level
1484:STM32_Init.c  **** //                       <6=>  PWM mode 1
1485:STM32_Init.c  **** //                       <7=>  PWM mode 2
1486:STM32_Init.c  **** //           <o41.11> TIM3_CCMR2.OC4PE: Output Compare 4 Preload enabled  
1487:STM32_Init.c  **** //           <o41.10> TIM3_CCMR2.OC4FE: Output Compare 4 Fast enabled  
1488:STM32_Init.c  **** //           <o41.8..9> TIM3_CCMR2.CC4S: Capture/compare 4 selection   
1489:STM32_Init.c  **** //             <i> Default: CC4 configured as output
1490:STM32_Init.c  **** //                       <0=> CC4 configured as output
1491:STM32_Init.c  **** //           <o42.13>  TIM3_CCER.CC4P: Capture/compare 4 output Polarity set  
1492:STM32_Init.c  **** //             <i> Default: OC4 active high
1493:STM32_Init.c  **** //                       <0=> OC4 active high
1494:STM32_Init.c  **** //                       <1=> OC4 active low
1495:STM32_Init.c  **** //           <o42.12>  TIM3_CCER.CC4E: Capture/compare 4 output enabled   
1496:STM32_Init.c  **** //             <i> Default: OC4 not active
1497:STM32_Init.c  **** //                       <0=> OC4 not active
1498:STM32_Init.c  **** //                       <1=> OC4 is output on corresponding pin
1499:STM32_Init.c  **** //         </h>
1500:STM32_Init.c  **** //         <h> Channel configured as input
1501:STM32_Init.c  **** //           <o41.12..15> TIM3_CCMR2.IC4F: Input Capture 4 Filter  
1502:STM32_Init.c  **** //             <i> Default: No filter
1503:STM32_Init.c  **** //                       <0=>  No filter
1504:STM32_Init.c  **** //                       <1=>  fSampling=fCK_INT, N=2
1505:STM32_Init.c  **** //                       <2=>  fSampling=fCK_INT, N=4
1506:STM32_Init.c  **** //                       <3=>  fSampling=fCK_INT, N=8
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 28


1507:STM32_Init.c  **** //                       <4=>  fSampling=fDTS/2, N=6
1508:STM32_Init.c  **** //                       <5=>  fSampling=fDTS/2, N=8
1509:STM32_Init.c  **** //                       <6=>  fSampling=fDTS/4, N=6
1510:STM32_Init.c  **** //                       <7=>  fSampling=fDTS/4, N=8
1511:STM32_Init.c  **** //                       <8=>  fSampling=fDTS/8, N=6
1512:STM32_Init.c  **** //                       <9=>  fSampling=fDTS/8, N=8
1513:STM32_Init.c  **** //                       <10=> fSampling=fDTS/16, N=5
1514:STM32_Init.c  **** //                       <11=> fSampling=fDTS/16, N=6
1515:STM32_Init.c  **** //                       <12=> fSampling=fDTS/16, N=8
1516:STM32_Init.c  **** //                       <13=> fSampling=fDTS/32, N=5
1517:STM32_Init.c  **** //                       <14=> fSampling=fDTS/32, N=6
1518:STM32_Init.c  **** //                       <15=> fSampling=fDTS/32, N=8
1519:STM32_Init.c  **** //           <o41.10..11> TIM3_CCMR2.IC4PSC: Input Capture 4 Prescaler  
1520:STM32_Init.c  **** //             <i> Default: No prescaler
1521:STM32_Init.c  **** //                       <0=>  No prescaler
1522:STM32_Init.c  **** //                       <1=>  capture every 2 events
1523:STM32_Init.c  **** //                       <2=>  capture every 4 events
1524:STM32_Init.c  **** //                       <3=>  capture every 8 events 
1525:STM32_Init.c  **** //           <o41.8..9> TIM3_CCMR2.CC4S: Capture/compare 4 selection   
1526:STM32_Init.c  **** //             <i> Default: CC4 configured as output
1527:STM32_Init.c  **** //                       <0=> CC4 configured as output
1528:STM32_Init.c  **** //                       <1=> CC4 configured as input, IC4 mapped on TI4
1529:STM32_Init.c  **** //                       <2=> CC4 configured as input, IC4 mapped on TI3
1530:STM32_Init.c  **** //                       <3=> CC4 configured as input, IC4 mapped on TRGI
1531:STM32_Init.c  **** //           <o42.13>  TIM3_CCER.CC4P: Capture/compare 4 output Polarity set  
1532:STM32_Init.c  **** //             <i> Default: non-inverted
1533:STM32_Init.c  **** //                       <0=> non-inverted
1534:STM32_Init.c  **** //                       <1=> inverted
1535:STM32_Init.c  **** //           <o42.12>  TIM3_CCER.CC4E: Capture/compare 4 output enabled   
1536:STM32_Init.c  **** //             <i> Default: Capture disabled
1537:STM32_Init.c  **** //                       <0=> Capture disabled
1538:STM32_Init.c  **** //                       <1=> Capture enabled
1539:STM32_Init.c  **** //         </h>
1540:STM32_Init.c  **** //       <o46> TIM3_CCR4: Capture/compare register 4 <0-65535>
1541:STM32_Init.c  **** //         <i> Set the Compare register value for compare register 4.
1542:STM32_Init.c  **** //         <i> Default: 0
1543:STM32_Init.c  **** //     </h>
1544:STM32_Init.c  **** //
1545:STM32_Init.c  **** //     </e>
1546:STM32_Init.c  **** //     <e3.2> TIM3 interrupts
1547:STM32_Init.c  **** //       <o47.14> TIM3_DIER.TDE: Trigger DMA request enabled
1548:STM32_Init.c  **** //       <o47.12> TIM3_DIER.CC4DE: Capture/Compare 4 DMA request enabled
1549:STM32_Init.c  **** //       <o47.11> TIM3_DIER.CC3DE: Capture/Compare 3 DMA request enabled
1550:STM32_Init.c  **** //       <o47.10> TIM3_DIER.CC2DE: Capture/Compare 2 DMA request enabled
1551:STM32_Init.c  **** //       <o47.9>  TIM3_DIER.CC1DE: Capture/Compare 1 DMA request enabled
1552:STM32_Init.c  **** //       <o47.8>  TIM3_DIER.UDE: Update DMA request enabled
1553:STM32_Init.c  **** //       <o47.6>  TIM3_DIER.TIE: Trigger interrupt enabled
1554:STM32_Init.c  **** //       <o47.4>  TIM3_DIER.CC4IE: Capture/Compare 4 interrupt enabled
1555:STM32_Init.c  **** //       <o47.3>  TIM3_DIER.CC3IE: Capture/Compare 3 interrupt enabled
1556:STM32_Init.c  **** //       <o47.2>  TIM3_DIER.CC2IE: Capture/Compare 2 interrupt enabled
1557:STM32_Init.c  **** //       <o47.1>  TIM3_DIER.CC1IE: Capture/Compare 1 interrupt enabled
1558:STM32_Init.c  **** //       <o47.0>  TIM3_DIER.UIE: Update interrupt enabled
1559:STM32_Init.c  **** //     </e>
1560:STM32_Init.c  **** //   </e>
1561:STM32_Init.c  **** //
1562:STM32_Init.c  **** //--------------------------------------------------------------------------- Timer 4 enabled
1563:STM32_Init.c  **** //   <e1.3> TIM4 : Timer 4 enabled
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 29


1564:STM32_Init.c  **** //     <o48> TIM4 period [us] <1-72000000:10>
1565:STM32_Init.c  **** //       <i> Set the timer period for Timer 4.
1566:STM32_Init.c  **** //       <i> Default: 1000  (1ms)
1567:STM32_Init.c  **** //       <i> Ignored if detailed settings is selected
1568:STM32_Init.c  **** //--------------------------------------------------------------------------- Timer 4 detailed sett
1569:STM32_Init.c  **** //     <e2.3> TIM4 detailed settings
1570:STM32_Init.c  **** //       <o49> TIM4.PSC: Timer 4 Prescaler <0-65535>
1571:STM32_Init.c  **** //         <i> Set the prescaler for Timer 4.
1572:STM32_Init.c  **** //       <o50> TIM4.ARR: Timer 4 Auto-reload <0-65535>
1573:STM32_Init.c  **** //         <i> Set the Auto-reload for Timer 4.
1574:STM32_Init.c  **** //       <h> Timer 4 Control Register 1 Configuration (TIM4_CR1)
1575:STM32_Init.c  **** //         <o51.8..9> TIM4_CR1.CKD: Clock division   
1576:STM32_Init.c  **** //           <i> Default: tDTS = tCK_INT
1577:STM32_Init.c  **** //           <i> devision ratio between timer clock and dead time
1578:STM32_Init.c  **** //                     <0=> tDTS = tCK_INT
1579:STM32_Init.c  **** //                     <1=> tDTS = 2*tCK_INT
1580:STM32_Init.c  **** //                     <2=> tDTS = 4*tCK_INT
1581:STM32_Init.c  **** //         <o51.7> TIM4_CR1.ARPE: Auto-reload preload enable
1582:STM32_Init.c  **** //           <i> Default: Auto-reload preload disenabled
1583:STM32_Init.c  **** //         <o51.5..6> TIM4_CR1.CMS: Center aligned mode selection   
1584:STM32_Init.c  **** //           <i> Default: Edge-aligned
1585:STM32_Init.c  **** //                     <0=> Edge-aligned
1586:STM32_Init.c  **** //                     <1=> Center-aligned mode1
1587:STM32_Init.c  **** //                     <2=> Center-aligned mode2
1588:STM32_Init.c  **** //                     <3=> Center-aligned mode3
1589:STM32_Init.c  **** //         <o51.4> TIM4_CR1.DIR: Direction
1590:STM32_Init.c  **** //           <i> Default: DIR = Counter used as up-counter
1591:STM32_Init.c  **** //           <i> read only if timer is configured as Center-aligned or Encoder mode   
1592:STM32_Init.c  **** //                     <0=> Counter used as up-counter
1593:STM32_Init.c  **** //                     <1=> Counter used as down-counter
1594:STM32_Init.c  **** //         <o51.3> TIM4_CR1.OPM: One pulse mode enable
1595:STM32_Init.c  **** //           <i> Default: One pulse mode disabled
1596:STM32_Init.c  **** //         <o51.2> TIM4_CR1.URS: Update request source   
1597:STM32_Init.c  **** //           <i> Default: URS = Counter over-/underflow, UG bit, Slave mode controller
1598:STM32_Init.c  **** //                     <0=> Counter over-/underflow, UG bit, Slave mode controller
1599:STM32_Init.c  **** //                     <1=> Counter over-/underflow
1600:STM32_Init.c  **** //         <o51.1> TIM4_CR1.UDIS: Update disable
1601:STM32_Init.c  **** //           <i> Default: Update enabled
1602:STM32_Init.c  **** //       </h>
1603:STM32_Init.c  **** //
1604:STM32_Init.c  **** //       <h> Timer 4 Control Register 2 Configuration (TIM4_CR2)
1605:STM32_Init.c  **** //         <o52.7> TIM4_CR2.TI1S: TI1 Selection  
1606:STM32_Init.c  **** //           <i> Default: TIM4CH1 connected to TI1 input
1607:STM32_Init.c  **** //                     <0=> TIM4CH1 connected to TI1 input
1608:STM32_Init.c  **** //                     <1=> TIM4CH1,CH2,CH3 connected to TI1 input
1609:STM32_Init.c  **** //         <o52.4..6> TIM4_CR2.MMS: Master Mode Selection  
1610:STM32_Init.c  **** //           <i> Default: Reset
1611:STM32_Init.c  **** //           <i> Select information to be sent in master mode to slave timers for synchronisation
1612:STM32_Init.c  **** //                     <0=> Reset
1613:STM32_Init.c  **** //                     <1=> Enable
1614:STM32_Init.c  **** //                     <2=> Update
1615:STM32_Init.c  **** //                     <3=> Compare Pulse
1616:STM32_Init.c  **** //                     <4=> Compare OC1REF iused as TRGO
1617:STM32_Init.c  **** //                     <5=> Compare OC2REF iused as TRGO
1618:STM32_Init.c  **** //                     <6=> Compare OC3REF iused as TRGO
1619:STM32_Init.c  **** //                     <7=> Compare OC4REF iused as TRGO
1620:STM32_Init.c  **** //         <o52.3> TIM4_CR2.CCDS: Capture/Compare DMA Selection  
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 30


1621:STM32_Init.c  **** //           <i> Default: CC4 DMA request on CC4 event
1622:STM32_Init.c  **** //                     <0=> CC4 DMA request on CC4 event
1623:STM32_Init.c  **** //                     <1=> CC4 DMA request on update event
1624:STM32_Init.c  **** //       </h>
1625:STM32_Init.c  **** //
1626:STM32_Init.c  **** //       <h> Timer 4 Slave mode control register Configuration (TIM4_SMC)
1627:STM32_Init.c  **** //         <o53.15> TIM4_SMCR.ETP: External trigger polarity
1628:STM32_Init.c  **** //           <i> Default: ETR is non-inverted
1629:STM32_Init.c  **** //                     <0=> ETR is non-inverted
1630:STM32_Init.c  **** //                     <1=> ETR is inverted
1631:STM32_Init.c  **** //         <o53.14> TIM4_SMCR.ECE: External clock mode 2 enabled
1632:STM32_Init.c  **** //         <o53.12..13> TIM4_SMCR.ETPS: External trigger prescaler  
1633:STM32_Init.c  **** //           <i> Default: Prescaler OFF
1634:STM32_Init.c  **** //                     <0=> Prescaler OFF
1635:STM32_Init.c  **** //                     <1=> fETPR/2
1636:STM32_Init.c  **** //                     <2=> fETPR/4
1637:STM32_Init.c  **** //                     <3=> fETPR/8
1638:STM32_Init.c  **** //         <o53.8..11> TIM4_SMCR.ETF: External trigger filter  
1639:STM32_Init.c  **** //           <i> Default: No filter
1640:STM32_Init.c  **** //                     <0=>  No filter
1641:STM32_Init.c  **** //                     <1=>  fSampling=fCK_INT, N=2
1642:STM32_Init.c  **** //                     <2=>  fSampling=fCK_INT, N=4
1643:STM32_Init.c  **** //                     <3=>  fSampling=fCK_INT, N=8
1644:STM32_Init.c  **** //                     <4=>  fSampling=fDTS/2, N=6
1645:STM32_Init.c  **** //                     <5=>  fSampling=fDTS/2, N=8
1646:STM32_Init.c  **** //                     <6=>  fSampling=fDTS/4, N=6
1647:STM32_Init.c  **** //                     <7=>  fSampling=fDTS/4, N=8
1648:STM32_Init.c  **** //                     <8=>  fSampling=fDTS/8, N=6
1649:STM32_Init.c  **** //                     <9=>  fSampling=fDTS/8, N=8
1650:STM32_Init.c  **** //                     <10=> fSampling=fDTS/16, N=5
1651:STM32_Init.c  **** //                     <11=> fSampling=fDTS/16, N=6
1652:STM32_Init.c  **** //                     <12=> fSampling=fDTS/16, N=8
1653:STM32_Init.c  **** //                     <13=> fSampling=fDTS/32, N=5
1654:STM32_Init.c  **** //                     <14=> fSampling=fDTS/32, N=6
1655:STM32_Init.c  **** //                     <15=> fSampling=fDTS/32, N=8
1656:STM32_Init.c  **** //         <o53.7> TIM4_SMCR.MSM: Delay trigger input  
1657:STM32_Init.c  **** //         <o53.4..6> TIM4_SMCR.TS: Trigger Selection  
1658:STM32_Init.c  **** //           <i> Default: TIM1 (ITR0)
1659:STM32_Init.c  **** //                     <0=> TIM1 (ITR0)
1660:STM32_Init.c  **** //                     <1=> TIM2 (ITR1)
1661:STM32_Init.c  **** //                     <2=> TIM3 (ITR2)
1662:STM32_Init.c  **** //                     <3=> TIM4 (ITR3)
1663:STM32_Init.c  **** //                     <4=> TI1 Edge Detector (TI1F_ED)
1664:STM32_Init.c  **** //                     <5=> Filtered Timer Input 1 (TI1FP1)
1665:STM32_Init.c  **** //                     <6=> Filtered Timer Input 2 (TI1FP2)
1666:STM32_Init.c  **** //                     <7=> External Trigger Input (ETRF)
1667:STM32_Init.c  **** //         <o53.0..2> TIM4_SMCR.SMS: Slave mode selection   
1668:STM32_Init.c  **** //           <i> Default: Slave mode disabled
1669:STM32_Init.c  **** //                     <0=> Slave mode disabled
1670:STM32_Init.c  **** //                     <1=> Encoder mode 1
1671:STM32_Init.c  **** //                     <2=> Encoder mode 2
1672:STM32_Init.c  **** //                     <3=> Encoder mode 3
1673:STM32_Init.c  **** //                     <4=> Reset mode
1674:STM32_Init.c  **** //                     <5=> Gated mode
1675:STM32_Init.c  **** //                     <6=> Trigger mode
1676:STM32_Init.c  **** //                     <7=> External clock mode 1
1677:STM32_Init.c  **** //       </h>
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 31


1678:STM32_Init.c  **** //
1679:STM32_Init.c  **** //
1680:STM32_Init.c  **** //--------------------------------------------------------------------------- Timer 4 channel 1
1681:STM32_Init.c  **** //       <h> Channel 1 Configuration
1682:STM32_Init.c  **** //         <h> Cannel configured as output
1683:STM32_Init.c  **** //           <o54.7> TIM4_CCMR1.OC1CE: Output Compare 1 Clear enabled  
1684:STM32_Init.c  **** //           <o54.4..6> TIM4_CCMR1.OC1M: Output Compare 1 Mode  
1685:STM32_Init.c  **** //             <i> Default: Frozen
1686:STM32_Init.c  **** //                       <0=>  Frozen
1687:STM32_Init.c  **** //                       <1=>  Set channel 1 to active level on match
1688:STM32_Init.c  **** //                       <2=>  Set channel 1 to inactive level on match
1689:STM32_Init.c  **** //                       <3=>  Toggle 
1690:STM32_Init.c  **** //                       <4=>  Force inactive level
1691:STM32_Init.c  **** //                       <5=>  Force active level
1692:STM32_Init.c  **** //                       <6=>  PWM mode 1
1693:STM32_Init.c  **** //                       <7=>  PWM mode 2
1694:STM32_Init.c  **** //           <o54.3> TIM4_CCMR1.OC1PE: Output Compare 1 Preload enabled  
1695:STM32_Init.c  **** //           <o54.2> TIM4_CCMR1.OC1FE: Output Compare 1 Fast enabled  
1696:STM32_Init.c  **** //           <o54.0..1> TIM4_CCMR1.CC1S: Capture/compare 1 selection   
1697:STM32_Init.c  **** //             <i> Default: CC1 configured as output
1698:STM32_Init.c  **** //                       <0=> CC1 configured as output
1699:STM32_Init.c  **** //           <o56.1>  TIM4_CCER.CC1P: Capture/compare 1 output Polarity set  
1700:STM32_Init.c  **** //             <i> Default: OC1 active high
1701:STM32_Init.c  **** //                       <0=> OC1 active high
1702:STM32_Init.c  **** //                       <1=> OC1 active low
1703:STM32_Init.c  **** //           <o56.0>  TIM1_CCER.CC1E: Capture/compare 1 output enabled   
1704:STM32_Init.c  **** //             <i> Default: OC1 not active
1705:STM32_Init.c  **** //                       <0=> OC1 not active
1706:STM32_Init.c  **** //                       <1=> OC1 is output on corresponding pin
1707:STM32_Init.c  **** //         </h>
1708:STM32_Init.c  **** //         <h> Channel configured as input
1709:STM32_Init.c  **** //           <o54.4..7> TIM4_CCMR1.IC1F: Input Capture 1 Filter  
1710:STM32_Init.c  **** //             <i> Default: No filter
1711:STM32_Init.c  **** //                       <0=>  No filter
1712:STM32_Init.c  **** //                       <1=>  fSampling=fCK_INT, N=2
1713:STM32_Init.c  **** //                       <2=>  fSampling=fCK_INT, N=4
1714:STM32_Init.c  **** //                       <3=>  fSampling=fCK_INT, N=8
1715:STM32_Init.c  **** //                       <4=>  fSampling=fDTS/2, N=6
1716:STM32_Init.c  **** //                       <5=>  fSampling=fDTS/2, N=8
1717:STM32_Init.c  **** //                       <6=>  fSampling=fDTS/4, N=6
1718:STM32_Init.c  **** //                       <7=>  fSampling=fDTS/4, N=8
1719:STM32_Init.c  **** //                       <8=>  fSampling=fDTS/8, N=6
1720:STM32_Init.c  **** //                       <9=>  fSampling=fDTS/8, N=8
1721:STM32_Init.c  **** //                       <10=> fSampling=fDTS/16, N=5
1722:STM32_Init.c  **** //                       <11=> fSampling=fDTS/16, N=6
1723:STM32_Init.c  **** //                       <12=> fSampling=fDTS/16, N=8
1724:STM32_Init.c  **** //                       <13=> fSampling=fDTS/32, N=5
1725:STM32_Init.c  **** //                       <14=> fSampling=fDTS/32, N=6
1726:STM32_Init.c  **** //                       <15=> fSampling=fDTS/32, N=8
1727:STM32_Init.c  **** //           <o54.2..3> TIM4_CCMR1.IC1PSC: Input Capture 1 Prescaler  
1728:STM32_Init.c  **** //             <i> Default: No prescaler
1729:STM32_Init.c  **** //                       <0=>  No prescaler
1730:STM32_Init.c  **** //                       <1=>  capture every 2 events
1731:STM32_Init.c  **** //                       <2=>  capture every 4 events
1732:STM32_Init.c  **** //                       <3=>  capture every 8 events 
1733:STM32_Init.c  **** //           <o54.0..1> TIM4_CCMR1.CC1S: Capture/compare 1 selection   
1734:STM32_Init.c  **** //             <i> Default: CC1 configured as output
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 32


1735:STM32_Init.c  **** //                       <0=> CC1 configured as output
1736:STM32_Init.c  **** //                       <1=> CC1 configured as input, IC1 mapped on TI1
1737:STM32_Init.c  **** //                       <2=> CC1 configured as input, IC1 mapped on TI2
1738:STM32_Init.c  **** //                       <3=> CC1 configured as input, IC1 mapped on TRGI
1739:STM32_Init.c  **** //           <o56.1>  TIM4_CCER.CC1P: Capture/compare 1 output Polarity set  
1740:STM32_Init.c  **** //             <i> Default: non-inverted
1741:STM32_Init.c  **** //                       <0=> non-inverted
1742:STM32_Init.c  **** //                       <1=> inverted
1743:STM32_Init.c  **** //           <o56.0>  TIM4_CCER.CC1E: Capture/compare 1 output enabled   
1744:STM32_Init.c  **** //             <i> Default: Capture disabled
1745:STM32_Init.c  **** //                       <0=> Capture disabled
1746:STM32_Init.c  **** //                       <1=> Capture enabled
1747:STM32_Init.c  **** //         </h>
1748:STM32_Init.c  **** //       <o57> TIM4_CCR1: Capture/compare register 1 <0-65535>
1749:STM32_Init.c  **** //         <i> Set the Compare register value for compare register 1.
1750:STM32_Init.c  **** //         <i> Default: 0
1751:STM32_Init.c  **** //     </h>
1752:STM32_Init.c  **** //
1753:STM32_Init.c  **** //--------------------------------------------------------------------------- Timer 4 channel 2
1754:STM32_Init.c  **** //       <h> Channel 2 Configuration
1755:STM32_Init.c  **** //         <h> Cannel configured as output
1756:STM32_Init.c  **** //           <o54.15> TIM4_CCMR1.OC2CE: Output Compare 2 Clear enabled  
1757:STM32_Init.c  **** //           <o54.12..14> TIM4_CCMR1.OC2M: Output Compare 2 Mode  
1758:STM32_Init.c  **** //             <i> Default: Frozen
1759:STM32_Init.c  **** //                       <0=>  Frozen
1760:STM32_Init.c  **** //                       <1=>  Set channel 2 to active level on match
1761:STM32_Init.c  **** //                       <2=>  Set channel 2 to inactive level on match
1762:STM32_Init.c  **** //                       <3=>  Toggle 
1763:STM32_Init.c  **** //                       <4=>  Force inactive level
1764:STM32_Init.c  **** //                       <5=>  Force active level
1765:STM32_Init.c  **** //                       <6=>  PWM mode 1
1766:STM32_Init.c  **** //                       <7=>  PWM mode 2
1767:STM32_Init.c  **** //           <o54.11> TIM4_CCMR1.OC2PE: Output Compare 2 Preload enabled  
1768:STM32_Init.c  **** //           <o54.10> TIM4_CCMR1.OC2FE: Output Compare 2 Fast enabled  
1769:STM32_Init.c  **** //           <o54.8..9> TIM4_CCMR1.CC2S: Capture/compare 2 selection   
1770:STM32_Init.c  **** //             <i> Default: CC2 configured as output
1771:STM32_Init.c  **** //                       <0=> CC2 configured as output
1772:STM32_Init.c  **** //           <o56.5>  TIM4_CCER.CC2P: Capture/compare 2 output Polarity set  
1773:STM32_Init.c  **** //             <i> Default: OC2 active high
1774:STM32_Init.c  **** //                       <0=> OC2 active high
1775:STM32_Init.c  **** //                       <1=> OC2 active low
1776:STM32_Init.c  **** //           <o56.4>  TIM4_CCER.CC2E: Capture/compare 2 output enabled   
1777:STM32_Init.c  **** //             <i> Default: OC2 not active
1778:STM32_Init.c  **** //                       <0=> OC2 not active
1779:STM32_Init.c  **** //                       <1=> OC2 is output on corresponding pin
1780:STM32_Init.c  **** //         </h>
1781:STM32_Init.c  **** //         <h> Channel configured as input
1782:STM32_Init.c  **** //           <o54.12..15> TIM4_CCMR1.IC2F: Input Capture 2 Filter  
1783:STM32_Init.c  **** //             <i> Default: No filter
1784:STM32_Init.c  **** //                       <0=>  No filter
1785:STM32_Init.c  **** //                       <1=>  fSampling=fCK_INT, N=2
1786:STM32_Init.c  **** //                       <2=>  fSampling=fCK_INT, N=4
1787:STM32_Init.c  **** //                       <3=>  fSampling=fCK_INT, N=8
1788:STM32_Init.c  **** //                       <4=>  fSampling=fDTS/2, N=6
1789:STM32_Init.c  **** //                       <5=>  fSampling=fDTS/2, N=8
1790:STM32_Init.c  **** //                       <6=>  fSampling=fDTS/4, N=6
1791:STM32_Init.c  **** //                       <7=>  fSampling=fDTS/4, N=8
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 33


1792:STM32_Init.c  **** //                       <8=>  fSampling=fDTS/8, N=6
1793:STM32_Init.c  **** //                       <9=>  fSampling=fDTS/8, N=8
1794:STM32_Init.c  **** //                       <10=> fSampling=fDTS/16, N=5
1795:STM32_Init.c  **** //                       <11=> fSampling=fDTS/16, N=6
1796:STM32_Init.c  **** //                       <12=> fSampling=fDTS/16, N=8
1797:STM32_Init.c  **** //                       <13=> fSampling=fDTS/32, N=5
1798:STM32_Init.c  **** //                       <14=> fSampling=fDTS/32, N=6
1799:STM32_Init.c  **** //                       <15=> fSampling=fDTS/32, N=8
1800:STM32_Init.c  **** //           <o54.10..11> TIM4_CCMR1.IC2PSC: Input Capture 2 Prescaler  
1801:STM32_Init.c  **** //             <i> Default: No prescaler
1802:STM32_Init.c  **** //                       <0=>  No prescaler
1803:STM32_Init.c  **** //                       <1=>  capture every 2 events
1804:STM32_Init.c  **** //                       <2=>  capture every 4 events
1805:STM32_Init.c  **** //                       <3=>  capture every 8 events 
1806:STM32_Init.c  **** //           <o54.8..9> TIM4_CCMR1.CC2S: Capture/compare 2 selection   
1807:STM32_Init.c  **** //             <i> Default: CC2 configured as output
1808:STM32_Init.c  **** //                       <0=> CC2 configured as output
1809:STM32_Init.c  **** //                       <1=> CC2 configured as input, IC2 mapped on TI2
1810:STM32_Init.c  **** //                       <2=> CC2 configured as input, IC2 mapped on TI1
1811:STM32_Init.c  **** //                       <3=> CC2 configured as input, IC2 mapped on TRGI
1812:STM32_Init.c  **** //           <o56.5>  TIM4_CCER.CC2P: Capture/compare 2 output Polarity set  
1813:STM32_Init.c  **** //             <i> Default: non-inverted
1814:STM32_Init.c  **** //                       <0=> non-inverted
1815:STM32_Init.c  **** //                       <1=> inverted
1816:STM32_Init.c  **** //           <o56.4>  TIM4_CCER.CC2E: Capture/compare 2 output enabled   
1817:STM32_Init.c  **** //             <i> Default: Capture disabled
1818:STM32_Init.c  **** //                       <0=> Capture disabled
1819:STM32_Init.c  **** //                       <1=> Capture enabled
1820:STM32_Init.c  **** //         </h>
1821:STM32_Init.c  **** //       <o58> TIM4_CCR2: Capture/compare register 2 <0-65535>
1822:STM32_Init.c  **** //         <i> Set the Compare register value for compare register 2.
1823:STM32_Init.c  **** //         <i> Default: 0
1824:STM32_Init.c  **** //     </h>
1825:STM32_Init.c  **** //
1826:STM32_Init.c  **** //--------------------------------------------------------------------------- Timer 4 channel 3
1827:STM32_Init.c  **** //       <h> Channel 3 Configuration
1828:STM32_Init.c  **** //         <h> Cannel configured as output
1829:STM32_Init.c  **** //           <o55.7> TIM4_CCMR2.OC3CE: Output Compare 3 Clear enabled  
1830:STM32_Init.c  **** //           <o55.4..6> TIM4_CCMR2.OC3M: Output Compare 3 Mode  
1831:STM32_Init.c  **** //             <i> Default: Frozen
1832:STM32_Init.c  **** //                       <0=>  Frozen
1833:STM32_Init.c  **** //                       <1=>  Set channel 3 to active level on match
1834:STM32_Init.c  **** //                       <2=>  Set channel 3 to inactive level on match
1835:STM32_Init.c  **** //                       <3=>  Toggle 
1836:STM32_Init.c  **** //                       <4=>  Force inactive level
1837:STM32_Init.c  **** //                       <5=>  Force active level
1838:STM32_Init.c  **** //                       <6=>  PWM mode 1
1839:STM32_Init.c  **** //                       <7=>  PWM mode 2
1840:STM32_Init.c  **** //           <o55.3> TIM4_CCMR2.OC3PE: Output Compare 3 Preload enabled  
1841:STM32_Init.c  **** //           <o55.2> TIM4_CCMR2.OC3FE: Output Compare 3 Fast enabled  
1842:STM32_Init.c  **** //           <o55.0..1> TIM4_CCMR2.CC3S: Capture/compare 3 selection   
1843:STM32_Init.c  **** //             <i> Default: CC3 configured as output
1844:STM32_Init.c  **** //                       <0=> CC3 configured as output
1845:STM32_Init.c  **** //           <o56.9>  TIM4_CCER.CC3P: Capture/compare 3 output Polarity set  
1846:STM32_Init.c  **** //             <i> Default: OC3 active high
1847:STM32_Init.c  **** //                       <0=> OC3 active high
1848:STM32_Init.c  **** //                       <1=> OC3 active low
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 34


1849:STM32_Init.c  **** //           <o56.8>  TIM4_CCER.CC3E: Capture/compare 3 output enabled   
1850:STM32_Init.c  **** //             <i> Default: OC3 not active
1851:STM32_Init.c  **** //                       <0=> OC3 not active
1852:STM32_Init.c  **** //                       <1=> OC3 is output on corresponding pin
1853:STM32_Init.c  **** //         </h>
1854:STM32_Init.c  **** //         <h> Channel configured as input
1855:STM32_Init.c  **** //           <o55.4..7> TIM4_CCMR2.IC3F: Input Capture 3 Filter  
1856:STM32_Init.c  **** //             <i> Default: No filter
1857:STM32_Init.c  **** //                       <0=>  No filter
1858:STM32_Init.c  **** //                       <1=>  fSampling=fCK_INT, N=2
1859:STM32_Init.c  **** //                       <2=>  fSampling=fCK_INT, N=4
1860:STM32_Init.c  **** //                       <3=>  fSampling=fCK_INT, N=8
1861:STM32_Init.c  **** //                       <4=>  fSampling=fDTS/2, N=6
1862:STM32_Init.c  **** //                       <5=>  fSampling=fDTS/2, N=8
1863:STM32_Init.c  **** //                       <6=>  fSampling=fDTS/4, N=6
1864:STM32_Init.c  **** //                       <7=>  fSampling=fDTS/4, N=8
1865:STM32_Init.c  **** //                       <8=>  fSampling=fDTS/8, N=6
1866:STM32_Init.c  **** //                       <9=>  fSampling=fDTS/8, N=8
1867:STM32_Init.c  **** //                       <10=> fSampling=fDTS/16, N=5
1868:STM32_Init.c  **** //                       <11=> fSampling=fDTS/16, N=6
1869:STM32_Init.c  **** //                       <12=> fSampling=fDTS/16, N=8
1870:STM32_Init.c  **** //                       <13=> fSampling=fDTS/32, N=5
1871:STM32_Init.c  **** //                       <14=> fSampling=fDTS/32, N=6
1872:STM32_Init.c  **** //                       <15=> fSampling=fDTS/32, N=8
1873:STM32_Init.c  **** //           <o55.2..3> TIM4_CCMR2.IC3PSC: Input Capture 3 Prescaler  
1874:STM32_Init.c  **** //             <i> Default: No prescaler
1875:STM32_Init.c  **** //                       <0=>  No prescaler
1876:STM32_Init.c  **** //                       <1=>  capture every 2 events
1877:STM32_Init.c  **** //                       <2=>  capture every 4 events
1878:STM32_Init.c  **** //                       <3=>  capture every 8 events 
1879:STM32_Init.c  **** //           <o55.0..1> TIM4_CCMR2.CC3S: Capture/compare 3 selection   
1880:STM32_Init.c  **** //             <i> Default: CC3 configured as output
1881:STM32_Init.c  **** //                       <0=> CC3 configured as output
1882:STM32_Init.c  **** //                       <1=> CC3 configured as input, IC3 mapped on TI3
1883:STM32_Init.c  **** //                       <2=> CC3 configured as input, IC3 mapped on TI4
1884:STM32_Init.c  **** //                       <3=> CC3 configured as input, IC3 mapped on TRGI
1885:STM32_Init.c  **** //           <o56.9>  TIM4_CCER.CC3P: Capture/compare 3 output Polarity set  
1886:STM32_Init.c  **** //             <i> Default: non-inverted
1887:STM32_Init.c  **** //                       <0=> non-inverted
1888:STM32_Init.c  **** //                       <1=> inverted
1889:STM32_Init.c  **** //           <o56.8>  TIM4_CCER.CC3E: Capture/compare 3 output enabled   
1890:STM32_Init.c  **** //             <i> Default: Capture disabled
1891:STM32_Init.c  **** //                       <0=> Capture disabled
1892:STM32_Init.c  **** //                       <1=> Capture enabled
1893:STM32_Init.c  **** //         </h>
1894:STM32_Init.c  **** //       <o59> TIM4_CCR3: Capture/compare register 3 <0-65535>
1895:STM32_Init.c  **** //         <i> Set the Compare register value for compare register 3.
1896:STM32_Init.c  **** //         <i> Default: 0
1897:STM32_Init.c  **** //     </h>
1898:STM32_Init.c  **** //
1899:STM32_Init.c  **** //--------------------------------------------------------------------------- Timer 4 channel 4
1900:STM32_Init.c  **** //       <h> Channel 4 Configuration
1901:STM32_Init.c  **** //         <h> Cannel configured as output
1902:STM32_Init.c  **** //           <o55.15> TIM4_CCMR2.OC4CE: Output Compare 4 Clear enabled  
1903:STM32_Init.c  **** //           <o55.12..14> TIM4_CCMR2.OC4M: Output Compare 4 Mode  
1904:STM32_Init.c  **** //             <i> Default: Frozen
1905:STM32_Init.c  **** //                       <0=>  Frozen
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 35


1906:STM32_Init.c  **** //                       <1=>  Set channel 4 to active level on match
1907:STM32_Init.c  **** //                       <2=>  Set channel 4 to inactive level on match
1908:STM32_Init.c  **** //                       <3=>  Toggle 
1909:STM32_Init.c  **** //                       <4=>  Force inactive level
1910:STM32_Init.c  **** //                       <5=>  Force active level
1911:STM32_Init.c  **** //                       <6=>  PWM mode 1
1912:STM32_Init.c  **** //                       <7=>  PWM mode 2
1913:STM32_Init.c  **** //           <o55.11> TIM4_CCMR2.OC4PE: Output Compare 4 Preload enabled  
1914:STM32_Init.c  **** //           <o55.10> TIM4_CCMR2.OC4FE: Output Compare 4 Fast enabled  
1915:STM32_Init.c  **** //           <o55.8..9> TIM4_CCMR2.CC4S: Capture/compare 4 selection   
1916:STM32_Init.c  **** //             <i> Default: CC4 configured as output
1917:STM32_Init.c  **** //                       <0=> CC4 configured as output
1918:STM32_Init.c  **** //           <o56.13>  TIM4_CCER.CC4P: Capture/compare 4 output Polarity set  
1919:STM32_Init.c  **** //             <i> Default: OC4 active high
1920:STM32_Init.c  **** //                       <0=> OC4 active high
1921:STM32_Init.c  **** //                       <1=> OC4 active low
1922:STM32_Init.c  **** //           <o56.12>  TIM4_CCER.CC4E: Capture/compare 4 output enabled   
1923:STM32_Init.c  **** //             <i> Default: OC4 not active
1924:STM32_Init.c  **** //                       <0=> OC4 not active
1925:STM32_Init.c  **** //                       <1=> OC4 is output on corresponding pin
1926:STM32_Init.c  **** //         </h>
1927:STM32_Init.c  **** //         <h> Channel configured as input
1928:STM32_Init.c  **** //           <o54.12..15> TIM4_CCMR2.IC4F: Input Capture 4 Filter  
1929:STM32_Init.c  **** //             <i> Default: No filter
1930:STM32_Init.c  **** //                       <0=>  No filter
1931:STM32_Init.c  **** //                       <1=>  fSampling=fCK_INT, N=2
1932:STM32_Init.c  **** //                       <2=>  fSampling=fCK_INT, N=4
1933:STM32_Init.c  **** //                       <3=>  fSampling=fCK_INT, N=8
1934:STM32_Init.c  **** //                       <4=>  fSampling=fDTS/2, N=6
1935:STM32_Init.c  **** //                       <5=>  fSampling=fDTS/2, N=8
1936:STM32_Init.c  **** //                       <6=>  fSampling=fDTS/4, N=6
1937:STM32_Init.c  **** //                       <7=>  fSampling=fDTS/4, N=8
1938:STM32_Init.c  **** //                       <8=>  fSampling=fDTS/8, N=6
1939:STM32_Init.c  **** //                       <9=>  fSampling=fDTS/8, N=8
1940:STM32_Init.c  **** //                       <10=> fSampling=fDTS/16, N=5
1941:STM32_Init.c  **** //                       <11=> fSampling=fDTS/16, N=6
1942:STM32_Init.c  **** //                       <12=> fSampling=fDTS/16, N=8
1943:STM32_Init.c  **** //                       <13=> fSampling=fDTS/32, N=5
1944:STM32_Init.c  **** //                       <14=> fSampling=fDTS/32, N=6
1945:STM32_Init.c  **** //                       <15=> fSampling=fDTS/32, N=8
1946:STM32_Init.c  **** //           <o54.10..11> TIM4_CCMR2.IC4PSC: Input Capture 4 Prescaler  
1947:STM32_Init.c  **** //             <i> Default: No prescaler
1948:STM32_Init.c  **** //                       <0=>  No prescaler
1949:STM32_Init.c  **** //                       <1=>  capture every 2 events
1950:STM32_Init.c  **** //                       <2=>  capture every 4 events
1951:STM32_Init.c  **** //                       <3=>  capture every 8 events 
1952:STM32_Init.c  **** //           <o54.8..9> TIM4_CCMR2.CC4S: Capture/compare 4 selection   
1953:STM32_Init.c  **** //             <i> Default: CC4 configured as output
1954:STM32_Init.c  **** //                       <0=> CC4 configured as output
1955:STM32_Init.c  **** //                       <1=> CC4 configured as input, IC4 mapped on TI4
1956:STM32_Init.c  **** //                       <2=> CC4 configured as input, IC4 mapped on TI3
1957:STM32_Init.c  **** //                       <3=> CC4 configured as input, IC4 mapped on TRGI
1958:STM32_Init.c  **** //           <o56.13>  TIM4_CCER.CC4P: Capture/compare 4 output Polarity set  
1959:STM32_Init.c  **** //             <i> Default: non-inverted
1960:STM32_Init.c  **** //                       <0=> non-inverted
1961:STM32_Init.c  **** //                       <1=> inverted
1962:STM32_Init.c  **** //           <o56.12>  TIM4_CCER.CC4E: Capture/compare 4 output enabled   
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 36


1963:STM32_Init.c  **** //             <i> Default: Capture disabled
1964:STM32_Init.c  **** //                       <0=> Capture disabled
1965:STM32_Init.c  **** //                       <1=> Capture enabled
1966:STM32_Init.c  **** //         </h>
1967:STM32_Init.c  **** //       <o60> TIM4_CCR4: Capture/compare register 4 <0-65535>
1968:STM32_Init.c  **** //         <i> Set the Compare register value for compare register 4.
1969:STM32_Init.c  **** //         <i> Default: 0
1970:STM32_Init.c  **** //     </h>
1971:STM32_Init.c  **** //
1972:STM32_Init.c  **** //     </e>
1973:STM32_Init.c  **** //     <e3.3> TIM4 interrupts
1974:STM32_Init.c  **** //       <o61.14> TIM4_DIER.TDE: Trigger DMA request enabled
1975:STM32_Init.c  **** //       <o61.12> TIM4_DIER.CC4DE: Capture/Compare 4 DMA request enabled
1976:STM32_Init.c  **** //       <o61.11> TIM4_DIER.CC3DE: Capture/Compare 3 DMA request enabled
1977:STM32_Init.c  **** //       <o61.10> TIM4_DIER.CC2DE: Capture/Compare 2 DMA request enabled
1978:STM32_Init.c  **** //       <o61.9>  TIM4_DIER.CC1DE: Capture/Compare 1 DMA request enabled
1979:STM32_Init.c  **** //       <o61.8>  TIM4_DIER.UDE: Update DMA request enabled
1980:STM32_Init.c  **** //       <o61.6>  TIM4_DIER.TIE: Trigger interrupt enabled
1981:STM32_Init.c  **** //       <o61.4>  TIM4_DIER.CC4IE: Capture/Compare 4 interrupt enabled
1982:STM32_Init.c  **** //       <o61.3>  TIM4_DIER.CC3IE: Capture/Compare 3 interrupt enabled
1983:STM32_Init.c  **** //       <o61.2>  TIM4_DIER.CC2IE: Capture/Compare 2 interrupt enabled
1984:STM32_Init.c  **** //       <o61.1>  TIM4_DIER.CC1IE: Capture/Compare 1 interrupt enabled
1985:STM32_Init.c  **** //       <o61.0>  TIM4_DIER.UIE: Update interrupt enabled
1986:STM32_Init.c  **** //     </e>
1987:STM32_Init.c  **** // 
1988:STM32_Init.c  **** //
1989:STM32_Init.c  **** //   </e>
1990:STM32_Init.c  **** // </e> End of Timer Configuration
1991:STM32_Init.c  **** #define __TIMER_SETUP             0                       //  0
1992:STM32_Init.c  **** #define __TIMER_USED              0x0000                  //  1
1993:STM32_Init.c  **** #define __TIMER_DETAILS           0x0000                  //  2
1994:STM32_Init.c  **** #define __TIMER_INTERRUPTS        0x0000                  //  3
1995:STM32_Init.c  **** #define __TIM1_PERIOD             0x02710                 //  4
1996:STM32_Init.c  **** #define __TIM1_PSC                0x0000                  //  5
1997:STM32_Init.c  **** #define __TIM1_ARR                0x0004                  //  6
1998:STM32_Init.c  **** #define __TIM1_RCR                0x0000                  //  7
1999:STM32_Init.c  **** #define __TIM1_CR1                0x0004                  //  8
2000:STM32_Init.c  **** #define __TIM1_CR2                0x0000                  //  9
2001:STM32_Init.c  **** #define __TIM1_SMCR               0x0000                  // 10
2002:STM32_Init.c  **** #define __TIM1_CCMR1              0x0061                  // 11
2003:STM32_Init.c  **** #define __TIM1_CCMR2              0x0068                  // 12
2004:STM32_Init.c  **** #define __TIM1_CCER               0x0000                  // 13
2005:STM32_Init.c  **** #define __TIM1_CCR1               0x0000                  // 14
2006:STM32_Init.c  **** #define __TIM1_CCR2               0x0000                  // 15
2007:STM32_Init.c  **** #define __TIM1_CCR3               0x0000                  // 16
2008:STM32_Init.c  **** #define __TIM1_CCR4               0x0000                  // 17
2009:STM32_Init.c  **** #define __TIM1_BDTR               0x0000                  // 18
2010:STM32_Init.c  **** #define __TIM1_DIER               0x0001                  // 19
2011:STM32_Init.c  **** #define __TIM2_PERIOD             0xB71B0                 // 20
2012:STM32_Init.c  **** #define __TIM2_PSC                0x0000                  // 21
2013:STM32_Init.c  **** #define __TIM2_ARR                0x0004                  // 22
2014:STM32_Init.c  **** #define __TIM2_CR1                0x0004                  // 23
2015:STM32_Init.c  **** #define __TIM2_CR2                0x0000                  // 24
2016:STM32_Init.c  **** #define __TIM2_SMCR               0x0000                  // 25
2017:STM32_Init.c  **** #define __TIM2_CCMR1              0x0000                  // 26
2018:STM32_Init.c  **** #define __TIM2_CCMR2              0x0000                  // 27
2019:STM32_Init.c  **** #define __TIM2_CCER               0x0000                  // 28
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 37


2020:STM32_Init.c  **** #define __TIM2_CCR1               0x0000                  // 29
2021:STM32_Init.c  **** #define __TIM2_CCR2               0x0000                  // 30
2022:STM32_Init.c  **** #define __TIM2_CCR3               0x0000                  // 31
2023:STM32_Init.c  **** #define __TIM2_CCR4               0x0000                  // 32
2024:STM32_Init.c  **** #define __TIM2_DIER               0x0000                  // 33
2025:STM32_Init.c  **** #define __TIM3_PERIOD             0x7A120                 // 34
2026:STM32_Init.c  **** #define __TIM3_PSC                0x0000                  // 35
2027:STM32_Init.c  **** #define __TIM3_ARR                0x0004                  // 36
2028:STM32_Init.c  **** #define __TIM3_CR1                0x0000                  // 37
2029:STM32_Init.c  **** #define __TIM3_CR2                0x0000                  // 38
2030:STM32_Init.c  **** #define __TIM3_SMCR               0x0000                  // 39
2031:STM32_Init.c  **** #define __TIM3_CCMR1              0x0000                  // 40
2032:STM32_Init.c  **** #define __TIM3_CCMR2              0x0000                  // 41
2033:STM32_Init.c  **** #define __TIM3_CCER               0x0000                  // 42
2034:STM32_Init.c  **** #define __TIM3_CCR1               0x0000                  // 43
2035:STM32_Init.c  **** #define __TIM3_CCR2               0x0000                  // 44
2036:STM32_Init.c  **** #define __TIM3_CCR3               0x0000                  // 45
2037:STM32_Init.c  **** #define __TIM3_CCR4               0x0000                  // 46
2038:STM32_Init.c  **** #define __TIM3_DIER               0x0000                  // 47
2039:STM32_Init.c  **** #define __TIM4_PERIOD             0x3D090                 // 48
2040:STM32_Init.c  **** #define __TIM4_PSC                0x1C1F                  // 49
2041:STM32_Init.c  **** #define __TIM4_ARR                0x270F                  // 50
2042:STM32_Init.c  **** #define __TIM4_CR1                0x0004                  // 51
2043:STM32_Init.c  **** #define __TIM4_CR2                0x0000                  // 52
2044:STM32_Init.c  **** #define __TIM4_SMCR               0x0000                  // 53
2045:STM32_Init.c  **** #define __TIM4_CCMR1              0x0000                  // 54
2046:STM32_Init.c  **** #define __TIM4_CCMR2              0x6060                  // 55
2047:STM32_Init.c  **** #define __TIM4_CCER               0x1300                  // 56
2048:STM32_Init.c  **** #define __TIM4_CCR1               0x0000                  // 57
2049:STM32_Init.c  **** #define __TIM4_CCR2               0x0000                  // 58
2050:STM32_Init.c  **** #define __TIM4_CCR3               0x1388                  // 59
2051:STM32_Init.c  **** #define __TIM4_CCR4               0x09C4                  // 60
2052:STM32_Init.c  **** #define __TIM4_DIER               0x0018                  // 61
2053:STM32_Init.c  **** 
2054:STM32_Init.c  **** 
2055:STM32_Init.c  **** //=========================================================================== USART Configuration
2056:STM32_Init.c  **** // <e0> USART Configuration
2057:STM32_Init.c  **** //--------------------------------------------------------------------------- USART1
2058:STM32_Init.c  **** //   <e1.0> USART1 : USART #1 enable
2059:STM32_Init.c  **** //     <o4> Baudrate 
2060:STM32_Init.c  **** //          <9600=>    9600 Baud
2061:STM32_Init.c  **** //          <14400=>   14400 Baud
2062:STM32_Init.c  **** //          <19200=>   19200 Baud
2063:STM32_Init.c  **** //          <28800=>   28800 Baud
2064:STM32_Init.c  **** //          <38400=>   38400 Baud
2065:STM32_Init.c  **** //          <56000=>   56000 Baud
2066:STM32_Init.c  **** //          <57600=>   57600 Baud
2067:STM32_Init.c  **** //          <115200=>  115200 Baud
2068:STM32_Init.c  **** //     <o5.12> Data Bits 
2069:STM32_Init.c  **** //          <0=>       8 Data Bits
2070:STM32_Init.c  **** //          <1=>       9 Data Bits
2071:STM32_Init.c  **** //     <o6.12..13> Stop Bits
2072:STM32_Init.c  **** //          <1=>     0.5 Stop Bit
2073:STM32_Init.c  **** //          <0=>       1 Stop Bit
2074:STM32_Init.c  **** //          <3=>     1.5 Stop Bits
2075:STM32_Init.c  **** //          <2=>       2 Stop Bits
2076:STM32_Init.c  **** //     <o7.9..10> Parity 
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 38


2077:STM32_Init.c  **** //          <0=>         No Parity
2078:STM32_Init.c  **** //          <2=>         Even Parity
2079:STM32_Init.c  **** //          <3=>         Odd Parity
2080:STM32_Init.c  **** //     <o8.8..9> Flow Control
2081:STM32_Init.c  **** //          <0=>         None
2082:STM32_Init.c  **** //          <3=>         Hardware
2083:STM32_Init.c  **** //     <o9.2> Pins used
2084:STM32_Init.c  **** //          <0=>         TX = PA9, RX = PA10
2085:STM32_Init.c  **** //          <1=>         TX = PB6, RX = PB7
2086:STM32_Init.c  **** //     <e3.0> USART1 interrupts
2087:STM32_Init.c  **** //       <o10.4> USART1_CR1.IDLEIE: IDLE Interrupt enable
2088:STM32_Init.c  **** //       <o10.5> USART1_CR1.RXNEIE: RXNE Interrupt enable
2089:STM32_Init.c  **** //       <o10.6> USART1_CR1.TCIE: Transmission Complete Interrupt enable
2090:STM32_Init.c  **** //       <o10.7> USART1_CR1.TXEIE: TXE Interrupt enable
2091:STM32_Init.c  **** //       <o10.8> USART1_CR1.PEIE: PE Interrupt enable
2092:STM32_Init.c  **** //       <o11.6> USART1_CR2.LBDIE: LIN Break Detection Interrupt enable
2093:STM32_Init.c  **** //       <o12.0> USART1_CR3.EIE: Error Interrupt enable
2094:STM32_Init.c  **** //       <o12.10> USART1_CR3.CTSIE: CTS Interrupt enable
2095:STM32_Init.c  **** //     </e>
2096:STM32_Init.c  **** //   </e>
2097:STM32_Init.c  **** 
2098:STM32_Init.c  **** //--------------------------------------------------------------------------- USART2
2099:STM32_Init.c  **** //   <e1.1> USART2 : USART #2 enable
2100:STM32_Init.c  **** //     <o13> Baudrate 
2101:STM32_Init.c  **** //          <9600=>    9600 Baud
2102:STM32_Init.c  **** //          <14400=>   14400 Baud
2103:STM32_Init.c  **** //          <19200=>   19200 Baud
2104:STM32_Init.c  **** //          <28800=>   28800 Baud
2105:STM32_Init.c  **** //          <38400=>   38400 Baud
2106:STM32_Init.c  **** //          <56000=>   56000 Baud
2107:STM32_Init.c  **** //          <57600=>   57600 Baud
2108:STM32_Init.c  **** //          <115200=>  115200 Baud
2109:STM32_Init.c  **** //     <o14.12> Data Bits 
2110:STM32_Init.c  **** //          <0=>       8 Data Bits
2111:STM32_Init.c  **** //          <1=>       9 Data Bits
2112:STM32_Init.c  **** //     <o15.12..13> Stop Bits
2113:STM32_Init.c  **** //          <1=>     0.5 Stop Bit
2114:STM32_Init.c  **** //          <0=>       1 Stop Bit
2115:STM32_Init.c  **** //          <3=>     1.5 Stop Bits
2116:STM32_Init.c  **** //          <2=>       2 Stop Bits
2117:STM32_Init.c  **** //     <o16.9..10> Parity 
2118:STM32_Init.c  **** //          <0=>         No Parity
2119:STM32_Init.c  **** //          <2=>         Even Parity
2120:STM32_Init.c  **** //          <3=>         Odd Parity
2121:STM32_Init.c  **** //     <o17.8..9> Flow Control
2122:STM32_Init.c  **** //          <0=>         None
2123:STM32_Init.c  **** //          <3=>         Hardware
2124:STM32_Init.c  **** //     <o18.3> Pins used
2125:STM32_Init.c  **** //          <0=>         CTS = PA0, RTS = PA1, TX = PA2, RX = PA3 
2126:STM32_Init.c  **** //          <1=>         CTS = PD3, RTS = PD4, TX = PD5, RX = PD6 
2127:STM32_Init.c  **** //     <e3.1> USART2 interrupts
2128:STM32_Init.c  **** //       <o19.4> USART1_CR2.IDLEIE: IDLE Interrupt enable
2129:STM32_Init.c  **** //       <o19.5> USART1_CR2.RXNEIE: RXNE Interrupt enable
2130:STM32_Init.c  **** //       <o19.6> USART1_CR2.TCIE: Transmission Complete Interrupt enable
2131:STM32_Init.c  **** //       <o19.7> USART1_CR2.TXEIE: TXE Interrupt enable
2132:STM32_Init.c  **** //       <o19.8> USART1_CR2.PEIE: PE Interrupt enable
2133:STM32_Init.c  **** //       <o20.6> USART1_CR2.LBDIE: LIN Break Detection Interrupt enable
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 39


2134:STM32_Init.c  **** //       <o21.0> USART1_CR2.EIE: Error Interrupt enable
2135:STM32_Init.c  **** //       <o21.10> USART1_CR2.CTSIE: CTS Interrupt enable
2136:STM32_Init.c  **** //     </e>
2137:STM32_Init.c  **** //   </e>
2138:STM32_Init.c  **** 
2139:STM32_Init.c  **** //--------------------------------------------------------------------------- USART3
2140:STM32_Init.c  **** //   <e1.2> USART3 : USART #3 enable
2141:STM32_Init.c  **** //     <o22> Baudrate 
2142:STM32_Init.c  **** //          <9600=>    9600 Baud
2143:STM32_Init.c  **** //          <14400=>   14400 Baud
2144:STM32_Init.c  **** //          <19200=>   19200 Baud
2145:STM32_Init.c  **** //          <28800=>   28800 Baud
2146:STM32_Init.c  **** //          <38400=>   38400 Baud
2147:STM32_Init.c  **** //          <56000=>   56000 Baud
2148:STM32_Init.c  **** //          <57600=>   57600 Baud
2149:STM32_Init.c  **** //          <115200=>  115200 Baud
2150:STM32_Init.c  **** //     <o23.12> Data Bits 
2151:STM32_Init.c  **** //          <0=>       8 Data Bits
2152:STM32_Init.c  **** //          <1=>       9 Data Bits
2153:STM32_Init.c  **** //     <o24.12..13> Stop Bits
2154:STM32_Init.c  **** //          <1=>     0.5 Stop Bit
2155:STM32_Init.c  **** //          <0=>       1 Stop Bit
2156:STM32_Init.c  **** //          <3=>     1.5 Stop Bits
2157:STM32_Init.c  **** //          <2=>       2 Stop Bits
2158:STM32_Init.c  **** //     <o25.9..10> Parity 
2159:STM32_Init.c  **** //          <0=>         No Parity
2160:STM32_Init.c  **** //          <2=>         Even Parity
2161:STM32_Init.c  **** //          <3=>         Odd Parity
2162:STM32_Init.c  **** //     <o26.8..9> Flow Control
2163:STM32_Init.c  **** //          <0=>         None
2164:STM32_Init.c  **** //          <3=>         Hardware
2165:STM32_Init.c  **** //     <o27.4..5> Pins used
2166:STM32_Init.c  **** //          <0=>         TX = PB10, RX = PB11, CTS = PB13, RTS = PB14  
2167:STM32_Init.c  **** //          <1=>         TX = PC10, RX = PC11, CTS = PB13, RTS = PB14  
2168:STM32_Init.c  **** //          <3=>         TX = PD8,  RX = PD9,  CTS = PD11, RTS = PB12  
2169:STM32_Init.c  **** //     <e3.2> USART3 interrupts
2170:STM32_Init.c  **** //       <o28.4> USART3_CR1.IDLEIE: IDLE Interrupt enable
2171:STM32_Init.c  **** //       <o28.5> USART3_CR1.RXNEIE: RXNE Interrupt enable
2172:STM32_Init.c  **** //       <o28.6> USART3_CR1.TCIE: Transmission Complete Interrupt enable
2173:STM32_Init.c  **** //       <o28.7> USART3_CR1.TXEIE: TXE Interrupt enable
2174:STM32_Init.c  **** //       <o28.8> USART3_CR1.PEIE: PE Interrupt enable
2175:STM32_Init.c  **** //       <o29.6> USART3_CR2.LBDIE: LIN Break Detection Interrupt enable
2176:STM32_Init.c  **** //       <o30.0> USART3_CR3.EIE: Error Interrupt enable
2177:STM32_Init.c  **** //       <o30.10> USART3_CR3.CTSIE: CTS Interrupt enable
2178:STM32_Init.c  **** //     </e>
2179:STM32_Init.c  **** //   </e>
2180:STM32_Init.c  **** // </e> End of USART Configuration
2181:STM32_Init.c  **** #define __USART_SETUP             1                       //  0
2182:STM32_Init.c  **** #define __USART_USED              0x01                    //  1
2183:STM32_Init.c  **** #define __USART_DETAILS           0x00					  //  2
2184:STM32_Init.c  **** #define __USART_INTERRUPTS        0x06					  //  3
2185:STM32_Init.c  **** #define __USART1_BAUDRATE         115200				  //  4
2186:STM32_Init.c  **** #define __USART1_DATABITS         0x00000000
2187:STM32_Init.c  **** #define __USART1_STOPBITS         0x00000000
2188:STM32_Init.c  **** #define __USART1_PARITY           0x00000000
2189:STM32_Init.c  **** #define __USART1_FLOWCTRL         0x00000000
2190:STM32_Init.c  **** #define __USART1_REMAP            0x00000000
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 40


2191:STM32_Init.c  **** #define __USART1_CR1              0x00000000
2192:STM32_Init.c  **** #define __USART1_CR2              0x00000000
2193:STM32_Init.c  **** #define __USART1_CR3              0x00000000
2194:STM32_Init.c  **** #define __USART2_BAUDRATE         115200                    // 13
2195:STM32_Init.c  **** #define __USART2_DATABITS         0x00000000
2196:STM32_Init.c  **** #define __USART2_STOPBITS         0x00000000
2197:STM32_Init.c  **** #define __USART2_PARITY           0x00000000
2198:STM32_Init.c  **** #define __USART2_FLOWCTRL         0x00000000
2199:STM32_Init.c  **** #define __USART2_REMAP            0x00000000
2200:STM32_Init.c  **** #define __USART2_CR1              0x00000000
2201:STM32_Init.c  **** #define __USART2_CR2              0x00000000
2202:STM32_Init.c  **** #define __USART2_CR3              0x00000000
2203:STM32_Init.c  **** #define __USART3_BAUDRATE         9600                    // 22
2204:STM32_Init.c  **** #define __USART3_DATABITS         0x00000000
2205:STM32_Init.c  **** #define __USART3_STOPBITS         0x00000000
2206:STM32_Init.c  **** #define __USART3_PARITY           0x00000000
2207:STM32_Init.c  **** #define __USART3_FLOWCTRL         0x00000000
2208:STM32_Init.c  **** #define __USART3_REMAP            0x00000000
2209:STM32_Init.c  **** #define __USART3_CR1              0x00000000
2210:STM32_Init.c  **** #define __USART3_CR2              0x00000000
2211:STM32_Init.c  **** #define __USART3_CR3              0x00000000
2212:STM32_Init.c  **** 
2213:STM32_Init.c  **** 
2214:STM32_Init.c  **** //=========================================================================== Tamper Configuration
2215:STM32_Init.c  **** // <e0> Tamper Configuration
2216:STM32_Init.c  **** //   <o1.0> Tamper Pin enable
2217:STM32_Init.c  **** //   <o1.1> Tamper pin active level
2218:STM32_Init.c  **** //      <i> Default: active level = HIGH
2219:STM32_Init.c  **** //        <0=>       active level = HIGH
2220:STM32_Init.c  **** //        <1=>       active level = LOW
2221:STM32_Init.c  **** //   <o2.2> Tamper interrupt enable
2222:STM32_Init.c  **** // </e> End of Tamper Configuration
2223:STM32_Init.c  **** #define __TAMPER_SETUP            0                       //  0
2224:STM32_Init.c  **** #define __BKP_CR                  0x00000000              //  1
2225:STM32_Init.c  **** #define __BKP_CSR                 0x00000000              //  2
2226:STM32_Init.c  **** 
2227:STM32_Init.c  **** 
2228:STM32_Init.c  **** //=========================================================================== External interrupt/ev
2229:STM32_Init.c  **** // <e0> External interrupt/event Configuration
2230:STM32_Init.c  **** //--------------------------------------------------------------------------- EXTI line 0
2231:STM32_Init.c  **** //   <e1.0> EXTI0: EXTI line 0 enable
2232:STM32_Init.c  **** //     <o2.0> interrupt enable
2233:STM32_Init.c  **** //     <o3.0> generate interrupt
2234:STM32_Init.c  **** //     <o4.0> generate event
2235:STM32_Init.c  **** //     <o5.0> use rising trigger for interrupt/event
2236:STM32_Init.c  **** //     <o6.0> use falling trigger for interrupt/event
2237:STM32_Init.c  **** //     <o7.0..3> use pin for for interrupt/event
2238:STM32_Init.c  **** //        <i> Default: pin = PA0
2239:STM32_Init.c  **** //          <0=>         pin = PA0
2240:STM32_Init.c  **** //          <1=>         pin = PB0
2241:STM32_Init.c  **** //          <2=>         pin = PC0
2242:STM32_Init.c  **** //          <3=>         pin = PD0
2243:STM32_Init.c  **** //          <4=>         pin = PE0
2244:STM32_Init.c  **** //   </e>
2245:STM32_Init.c  **** 
2246:STM32_Init.c  **** //--------------------------------------------------------------------------- EXTI line 1
2247:STM32_Init.c  **** //   <e1.1> EXTI1: EXTI line 1 enable
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 41


2248:STM32_Init.c  **** //     <o2.1> interrupt enable
2249:STM32_Init.c  **** //     <o3.1> generate interrupt
2250:STM32_Init.c  **** //     <o4.1> generate event
2251:STM32_Init.c  **** //     <o5.1> use rising trigger for interrupt/event
2252:STM32_Init.c  **** //     <o6.1> use falling trigger for interrupt/event
2253:STM32_Init.c  **** //     <o7.4..7> use pin for for interrupt/event
2254:STM32_Init.c  **** //        <i> Default: pin = PA1
2255:STM32_Init.c  **** //          <0=>         pin = PA1
2256:STM32_Init.c  **** //          <1=>         pin = PB1
2257:STM32_Init.c  **** //          <2=>         pin = PC1
2258:STM32_Init.c  **** //          <3=>         pin = PD1
2259:STM32_Init.c  **** //          <4=>         pin = PE1
2260:STM32_Init.c  **** //   </e>
2261:STM32_Init.c  **** 
2262:STM32_Init.c  **** //--------------------------------------------------------------------------- EXTI line 2
2263:STM32_Init.c  **** //   <e1.2> EXTI2: EXTI line 2 enable
2264:STM32_Init.c  **** //     <o2.2> interrupt enable
2265:STM32_Init.c  **** //     <o3.2> generate interrupt
2266:STM32_Init.c  **** //     <o4.2> generate event
2267:STM32_Init.c  **** //     <o5.2> use rising trigger for interrupt/event
2268:STM32_Init.c  **** //     <o6.2> use falling trigger for interrupt/event
2269:STM32_Init.c  **** //     <o7.8..11> use pin for for interrupt/event
2270:STM32_Init.c  **** //        <i> Default: pin = PA2
2271:STM32_Init.c  **** //          <0=>         pin = PA2
2272:STM32_Init.c  **** //          <1=>         pin = PB2
2273:STM32_Init.c  **** //          <2=>         pin = PC2
2274:STM32_Init.c  **** //          <3=>         pin = PD2
2275:STM32_Init.c  **** //          <4=>         pin = PE2
2276:STM32_Init.c  **** //   </e>
2277:STM32_Init.c  **** 
2278:STM32_Init.c  **** //--------------------------------------------------------------------------- EXTI line 3
2279:STM32_Init.c  **** //   <e1.3> EXTI3: EXTI line 3 enable
2280:STM32_Init.c  **** //     <o2.3> interrupt enable
2281:STM32_Init.c  **** //     <o3.3> generate interrupt
2282:STM32_Init.c  **** //     <o4.3> generate event
2283:STM32_Init.c  **** //     <o5.3> use rising trigger for interrupt/event
2284:STM32_Init.c  **** //     <o6.3> use falling trigger for interrupt/event
2285:STM32_Init.c  **** //     <o7.12..15> use pin for for interrupt/event
2286:STM32_Init.c  **** //        <i> Default: pin = PA3
2287:STM32_Init.c  **** //          <0=>         pin = PA3
2288:STM32_Init.c  **** //          <1=>         pin = PB3
2289:STM32_Init.c  **** //          <2=>         pin = PC3
2290:STM32_Init.c  **** //          <3=>         pin = PD3
2291:STM32_Init.c  **** //          <4=>         pin = PE3
2292:STM32_Init.c  **** //   </e>
2293:STM32_Init.c  **** 
2294:STM32_Init.c  **** //--------------------------------------------------------------------------- EXTI line 4
2295:STM32_Init.c  **** //   <e1.4> EXTI4: EXTI line 4 enable
2296:STM32_Init.c  **** //     <o2.4> interrupt enable
2297:STM32_Init.c  **** //     <o3.4> generate interrupt
2298:STM32_Init.c  **** //     <o4.4> generate event
2299:STM32_Init.c  **** //     <o5.4> use rising trigger for interrupt/event
2300:STM32_Init.c  **** //     <o6.4> use falling trigger for interrupt/event
2301:STM32_Init.c  **** //     <o8.0..3> use pin for for interrupt/event
2302:STM32_Init.c  **** //        <i> Default: pin = PA4
2303:STM32_Init.c  **** //          <0=>         pin = PA4
2304:STM32_Init.c  **** //          <1=>         pin = PB4
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 42


2305:STM32_Init.c  **** //          <2=>         pin = PC4
2306:STM32_Init.c  **** //          <3=>         pin = PD4
2307:STM32_Init.c  **** //          <4=>         pin = PE4
2308:STM32_Init.c  **** //   </e>
2309:STM32_Init.c  **** 
2310:STM32_Init.c  **** //--------------------------------------------------------------------------- EXTI line 5
2311:STM32_Init.c  **** //   <e1.5> EXTI5: EXTI line 5 enable
2312:STM32_Init.c  **** //     <o2.5> interrupt enable
2313:STM32_Init.c  **** //     <o3.5> generate interrupt
2314:STM32_Init.c  **** //     <o4.5> generate event
2315:STM32_Init.c  **** //     <o5.5> use rising trigger for interrupt/event
2316:STM32_Init.c  **** //     <o6.5> use falling trigger for interrupt/event
2317:STM32_Init.c  **** //     <o8.4..7> use pin for for interrupt/event
2318:STM32_Init.c  **** //        <i> Default: pin = PA5
2319:STM32_Init.c  **** //          <0=>         pin = PA5
2320:STM32_Init.c  **** //          <1=>         pin = PB5
2321:STM32_Init.c  **** //          <2=>         pin = PC5
2322:STM32_Init.c  **** //          <3=>         pin = PD5
2323:STM32_Init.c  **** //          <4=>         pin = PE5
2324:STM32_Init.c  **** //   </e>
2325:STM32_Init.c  **** 
2326:STM32_Init.c  **** //--------------------------------------------------------------------------- EXTI line 6
2327:STM32_Init.c  **** //   <e1.6> EXTI6: EXTI line 6 enable
2328:STM32_Init.c  **** //     <o2.6> interrupt enable
2329:STM32_Init.c  **** //     <o3.6> generate interrupt
2330:STM32_Init.c  **** //     <o4.6> generate event
2331:STM32_Init.c  **** //     <o5.6> use rising trigger for interrupt/event
2332:STM32_Init.c  **** //     <o6.6> use falling trigger for interrupt/event
2333:STM32_Init.c  **** //     <o8.8..11> use pin for for interrupt/event
2334:STM32_Init.c  **** //        <i> Default: pin = PA6
2335:STM32_Init.c  **** //          <0=>         pin = PA6
2336:STM32_Init.c  **** //          <1=>         pin = PB6
2337:STM32_Init.c  **** //          <2=>         pin = PC6
2338:STM32_Init.c  **** //          <3=>         pin = PD6
2339:STM32_Init.c  **** //          <4=>         pin = PE6
2340:STM32_Init.c  **** //   </e>
2341:STM32_Init.c  **** 
2342:STM32_Init.c  **** //--------------------------------------------------------------------------- EXTI line 7
2343:STM32_Init.c  **** //   <e1.7> EXTI7: EXTI line 7 enable
2344:STM32_Init.c  **** //     <o2.7> interrupt enable
2345:STM32_Init.c  **** //     <o3.7> generate interrupt
2346:STM32_Init.c  **** //     <o4.7> generate event
2347:STM32_Init.c  **** //     <o5.7> use rising trigger for interrupt/event
2348:STM32_Init.c  **** //     <o6.7> use falling trigger for interrupt/event
2349:STM32_Init.c  **** //     <o8.12..15> use pin for for interrupt/event
2350:STM32_Init.c  **** //        <i> Default: pin = PA7
2351:STM32_Init.c  **** //          <0=>         pin = PA7
2352:STM32_Init.c  **** //          <1=>         pin = PB7
2353:STM32_Init.c  **** //          <2=>         pin = PC7
2354:STM32_Init.c  **** //          <3=>         pin = PD7
2355:STM32_Init.c  **** //          <4=>         pin = PE7
2356:STM32_Init.c  **** //   </e>
2357:STM32_Init.c  **** 
2358:STM32_Init.c  **** //--------------------------------------------------------------------------- EXTI line 8
2359:STM32_Init.c  **** //   <e1.8> EXTI8: EXTI line 8 enable
2360:STM32_Init.c  **** //     <o2.8> interrupt enable
2361:STM32_Init.c  **** //     <o3.8> generate interrupt
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 43


2362:STM32_Init.c  **** //     <o4.8> generate event
2363:STM32_Init.c  **** //     <o5.8> use rising trigger for interrupt/event
2364:STM32_Init.c  **** //     <o6.8> use falling trigger for interrupt/event
2365:STM32_Init.c  **** //     <o9.0..3> use pin for for interrupt/event
2366:STM32_Init.c  **** //        <i> Default: pin = PA8
2367:STM32_Init.c  **** //          <0=>         pin = PA8
2368:STM32_Init.c  **** //          <1=>         pin = PB8
2369:STM32_Init.c  **** //          <2=>         pin = PC8
2370:STM32_Init.c  **** //          <3=>         pin = PD8
2371:STM32_Init.c  **** //          <4=>         pin = PE8
2372:STM32_Init.c  **** //   </e>
2373:STM32_Init.c  **** 
2374:STM32_Init.c  **** //--------------------------------------------------------------------------- EXTI line 9
2375:STM32_Init.c  **** //   <e1.9> EXTI9: EXTI line 9 enable
2376:STM32_Init.c  **** //     <o2.9> interrupt enable
2377:STM32_Init.c  **** //     <o3.9> generate interrupt
2378:STM32_Init.c  **** //     <o4.9> generate event
2379:STM32_Init.c  **** //     <o5.9> use rising trigger for interrupt/event
2380:STM32_Init.c  **** //     <o6.9> use falling trigger for interrupt/event
2381:STM32_Init.c  **** //     <o9.4..7> use pin for for interrupt/event
2382:STM32_Init.c  **** //        <i> Default: pin = PA9
2383:STM32_Init.c  **** //          <0=>         pin = PA9
2384:STM32_Init.c  **** //          <1=>         pin = PB9
2385:STM32_Init.c  **** //          <2=>         pin = PC9
2386:STM32_Init.c  **** //          <3=>         pin = PD9
2387:STM32_Init.c  **** //          <4=>         pin = PE9
2388:STM32_Init.c  **** //   </e>
2389:STM32_Init.c  **** 
2390:STM32_Init.c  **** //--------------------------------------------------------------------------- EXTI line 10
2391:STM32_Init.c  **** //   <e1.10> EXTI10: EXTI line 10 enable
2392:STM32_Init.c  **** //     <o2.10> interrupt enable
2393:STM32_Init.c  **** //     <o3.10> generate interrupt
2394:STM32_Init.c  **** //     <o4.10> generate event
2395:STM32_Init.c  **** //     <o5.10> use rising trigger for interrupt/event
2396:STM32_Init.c  **** //     <o6.10> use falling trigger for interrupt/event
2397:STM32_Init.c  **** //     <o9.8..11> use pin for for interrupt/event
2398:STM32_Init.c  **** //        <i> Default: pin = PA10
2399:STM32_Init.c  **** //          <0=>         pin = PA10
2400:STM32_Init.c  **** //          <1=>         pin = PB10
2401:STM32_Init.c  **** //          <2=>         pin = PC10
2402:STM32_Init.c  **** //          <3=>         pin = PD10
2403:STM32_Init.c  **** //          <4=>         pin = PE10
2404:STM32_Init.c  **** //   </e>
2405:STM32_Init.c  **** 
2406:STM32_Init.c  **** //--------------------------------------------------------------------------- EXTI line 11
2407:STM32_Init.c  **** //   <e1.11> EXTI11: EXTI line 11 enable
2408:STM32_Init.c  **** //     <o2.11> interrupt enable
2409:STM32_Init.c  **** //     <o3.11> generate interrupt
2410:STM32_Init.c  **** //     <o4.11> generate event
2411:STM32_Init.c  **** //     <o5.11> use rising trigger for interrupt/event
2412:STM32_Init.c  **** //     <o6.11> use falling trigger for interrupt/event
2413:STM32_Init.c  **** //     <o9.12..15> use pin for for interrupt/event
2414:STM32_Init.c  **** //        <i> Default: pin = PA11
2415:STM32_Init.c  **** //          <0=>         pin = PA11
2416:STM32_Init.c  **** //          <1=>         pin = PB11
2417:STM32_Init.c  **** //          <2=>         pin = PC11
2418:STM32_Init.c  **** //          <3=>         pin = PD11
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 44


2419:STM32_Init.c  **** //          <4=>         pin = PE11
2420:STM32_Init.c  **** //   </e>
2421:STM32_Init.c  **** 
2422:STM32_Init.c  **** //--------------------------------------------------------------------------- EXTI line 12
2423:STM32_Init.c  **** //   <e1.12> EXTI12: EXTI line 12 enable
2424:STM32_Init.c  **** //     <o2.12> interrupt enable
2425:STM32_Init.c  **** //     <o3.12> generate interrupt
2426:STM32_Init.c  **** //     <o4.12> generate event
2427:STM32_Init.c  **** //     <o5.12> use rising trigger for interrupt/event
2428:STM32_Init.c  **** //     <o6.12> use falling trigger for interrupt/event
2429:STM32_Init.c  **** //     <o10.0..3> use pin for for interrupt/event
2430:STM32_Init.c  **** //        <i> Default: pin = PA12
2431:STM32_Init.c  **** //          <0=>         pin = PA12
2432:STM32_Init.c  **** //          <1=>         pin = PB12
2433:STM32_Init.c  **** //          <2=>         pin = PC12
2434:STM32_Init.c  **** //          <3=>         pin = PD12
2435:STM32_Init.c  **** //          <4=>         pin = PE12
2436:STM32_Init.c  **** //   </e>
2437:STM32_Init.c  **** 
2438:STM32_Init.c  **** //--------------------------------------------------------------------------- EXTI line 13
2439:STM32_Init.c  **** //   <e1.13> EXTI13: EXTI line 13 enable
2440:STM32_Init.c  **** //     <o2.13> interrupt enable
2441:STM32_Init.c  **** //     <o3.13> generate interrupt
2442:STM32_Init.c  **** //     <o4.13> generate event
2443:STM32_Init.c  **** //     <o5.13> use rising trigger for interrupt/event
2444:STM32_Init.c  **** //     <o6.13> use falling trigger for interrupt/event
2445:STM32_Init.c  **** //     <o10.4..7> use pin for for interrupt/event
2446:STM32_Init.c  **** //        <i> Default: pin = PA13
2447:STM32_Init.c  **** //          <0=>         pin = PA13
2448:STM32_Init.c  **** //          <1=>         pin = PB13
2449:STM32_Init.c  **** //          <2=>         pin = PC13
2450:STM32_Init.c  **** //          <3=>         pin = PD13
2451:STM32_Init.c  **** //          <4=>         pin = PE13
2452:STM32_Init.c  **** //   </e>
2453:STM32_Init.c  **** 
2454:STM32_Init.c  **** //--------------------------------------------------------------------------- EXTI line 14
2455:STM32_Init.c  **** //   <e1.14> EXTI14: EXTI line 14 enable
2456:STM32_Init.c  **** //     <o2.14> interrupt enable
2457:STM32_Init.c  **** //     <o3.14> generate interrupt
2458:STM32_Init.c  **** //     <o4.14> generate event
2459:STM32_Init.c  **** //     <o5.14> use rising trigger for interrupt/event
2460:STM32_Init.c  **** //     <o6.14> use falling trigger for interrupt/event
2461:STM32_Init.c  **** //     <o10.8..11> use pin for for interrupt/event
2462:STM32_Init.c  **** //        <i> Default: pin = PA14
2463:STM32_Init.c  **** //          <0=>         pin = PA14
2464:STM32_Init.c  **** //          <1=>         pin = PB14
2465:STM32_Init.c  **** //          <2=>         pin = PC14
2466:STM32_Init.c  **** //          <3=>         pin = PD14
2467:STM32_Init.c  **** //          <4=>         pin = PE14
2468:STM32_Init.c  **** //   </e>
2469:STM32_Init.c  **** 
2470:STM32_Init.c  **** //--------------------------------------------------------------------------- EXTI line 15
2471:STM32_Init.c  **** //   <e1.15> EXTI15: EXTI line 15 enable
2472:STM32_Init.c  **** //     <o2.15> interrupt enable
2473:STM32_Init.c  **** //     <o3.15> generate interrupt
2474:STM32_Init.c  **** //     <o4.15> generate event
2475:STM32_Init.c  **** //     <o5.15> use rising trigger for interrupt/event
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 45


2476:STM32_Init.c  **** //     <o6.15> use falling trigger for interrupt/event
2477:STM32_Init.c  **** //     <o10.12..15> use pin for for interrupt/event
2478:STM32_Init.c  **** //        <i> Default: pin = PA15
2479:STM32_Init.c  **** //          <0=>         pin = PA15
2480:STM32_Init.c  **** //          <1=>         pin = PB15
2481:STM32_Init.c  **** //          <2=>         pin = PC15
2482:STM32_Init.c  **** //          <3=>         pin = PD15
2483:STM32_Init.c  **** //          <4=>         pin = PE15
2484:STM32_Init.c  **** //   </e>
2485:STM32_Init.c  **** 
2486:STM32_Init.c  **** // </e> End of External interrupt/event Configuration
2487:STM32_Init.c  **** #define __EXTI_SETUP              0                       //  0
2488:STM32_Init.c  **** #define __EXTI_USED               0x0000                  //  1
2489:STM32_Init.c  **** #define __EXTI_INTERRUPTS         0x00000000              //  2
2490:STM32_Init.c  **** #define __EXTI_IMR                0x00000000              //  3
2491:STM32_Init.c  **** #define __EXTI_EMR                0x00000000              //  4
2492:STM32_Init.c  **** #define __EXTI_RTSR               0x00000000              //  5
2493:STM32_Init.c  **** #define __EXTI_FTSR               0x00000000              //  6
2494:STM32_Init.c  **** #define __AFIO_EXTICR1            0x00000000              //  7
2495:STM32_Init.c  **** #define __AFIO_EXTICR2            0x00000000              //  8
2496:STM32_Init.c  **** #define __AFIO_EXTICR3            0x00000000              //  9
2497:STM32_Init.c  **** #define __AFIO_EXTICR4            0x00000000              // 10
2498:STM32_Init.c  **** 
2499:STM32_Init.c  **** 
2500:STM32_Init.c  **** //=========================================================================== Alternate Function re
2501:STM32_Init.c  **** // <e0> Alternate Function remap Configuration
2502:STM32_Init.c  **** //--------------------------------------------------------------------------- SPI1 remapping
2503:STM32_Init.c  **** //   <o1.0> SPI1 remapping
2504:STM32_Init.c  **** //      <i> Default: No Remap (NSS/PA4, SCK/PA5, MISO/PA6, MOSI/PA7)
2505:STM32_Init.c  **** //        <0=>         No Remap (NSS/PA4, SCK/PA5, MISO/PA6, MOSI/PA7)
2506:STM32_Init.c  **** //        <1=>         Remap (NSS/PA15, SCK/PB3, MISO/PB4, MOSI/PB5)
2507:STM32_Init.c  **** 
2508:STM32_Init.c  **** //--------------------------------------------------------------------------- I2C1 remapping
2509:STM32_Init.c  **** //   <o1.1> I2C1 remapping
2510:STM32_Init.c  **** //      <i> Default: No Remap (SCL/PB6, SDA/PB7)
2511:STM32_Init.c  **** //        <0=>         No Remap (SCL/PB6, SDA/PB7)
2512:STM32_Init.c  **** //        <1=>         Remap (SCL/PB8, SDA/PB9)
2513:STM32_Init.c  **** 
2514:STM32_Init.c  **** //--------------------------------------------------------------------------- USART1 remapping
2515:STM32_Init.c  **** //   <O1.2> USART1 remapping
2516:STM32_Init.c  **** //      <i> Default: No Remap (TX/PA9, RX/PA10)
2517:STM32_Init.c  **** //        <0=>         No Remap (TX/PA9, RX/PA10)
2518:STM32_Init.c  **** //        <1=>         Remap (TX/PB6, RX/PB7)
2519:STM32_Init.c  **** 
2520:STM32_Init.c  **** //--------------------------------------------------------------------------- USART2 remapping
2521:STM32_Init.c  **** //   <o1.3> USART2 remapping
2522:STM32_Init.c  **** //      <i> Default: No Remap (CTS/PA0, RTS/PA1, TX/PA2, RX/PA3, CK/PA4)
2523:STM32_Init.c  **** //        <0=>         No Remap (CTS/PA0, RTS/PA1, TX/PA2, RX/PA3, CK/PA4)
2524:STM32_Init.c  **** //        <1=>         Remap (CTS/PD3, RTS/PD4, TX/PD5, RX/PD6, CK/PD7)
2525:STM32_Init.c  **** 
2526:STM32_Init.c  **** //--------------------------------------------------------------------------- USART3 remapping
2527:STM32_Init.c  **** //   <o1.4..5> USART3 remapping
2528:STM32_Init.c  **** //      <i> Default: No Remap (TX/PB10, RX/PB11, CK/PB12, CTS/PB13, RTS/PB14)
2529:STM32_Init.c  **** //        <0=>         No Remap (TX/PB10, RX/PB11, CK/PB12, CTS/PB13, RTS/PB14)
2530:STM32_Init.c  **** //        <1=>         Partial Remap (TX/PC10, RX/PC11, CK/PC12, CTS/PB13, RTS/PB14)
2531:STM32_Init.c  **** //        <3=>         Full Remap (TX/PD8, RX/PD9, CK/PD10, CTS/PD11, RTS/PD12)
2532:STM32_Init.c  **** 
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 46


2533:STM32_Init.c  **** //--------------------------------------------------------------------------- TIM1 remapping
2534:STM32_Init.c  **** //   <o1.6..7> TIM1 remapping
2535:STM32_Init.c  **** //      <i> Default: No Remap (ETR/PA12, CH1/PA8, CH2/PA9, CH3/PA10, CH4/PA11, BKIN/PB12, CH1N/PB13
2536:STM32_Init.c  **** //        <0=>         No Remap (ETR/PA12, CH1/PA8, CH2/PA9, CH3/PA10, CH4/PA11, BKIN/PB12, CH1N/PB
2537:STM32_Init.c  **** //        <1=>         Partial Remap (ETR/PA12, CH1/PA8, CH2/PA9, CH3/PA10, CH4/PA11, BKIN/PA6, CH1
2538:STM32_Init.c  **** //        <3=>         Full Remap (ETR/PE7, CH1/PE9, CH2/PE11, CH3/PE13, CH4/PE14, BKIN/PE15, CH1N/
2539:STM32_Init.c  **** 
2540:STM32_Init.c  **** //--------------------------------------------------------------------------- TIM2 remapping
2541:STM32_Init.c  **** //   <o1.8..9> TIM2 remapping
2542:STM32_Init.c  **** //      <i> Default: No Remap (CH1/ETR/PA0, CH2/PA1, CH3/PA2, CH4/PA3)
2543:STM32_Init.c  **** //        <0=>         No Remap (CH1/ETR/PA0, CH2/PA1, CH3/PA2, CH4/PA3)
2544:STM32_Init.c  **** //        <1=>         Partial Remap (CH1/ETR/PA15, CH2/PB3, CH3/PA2, CH4/PA3)
2545:STM32_Init.c  **** //        <2=>         Partial Remap (CH1/ETR/PA0, CH2/PA1, CH3/PB10, CH4/PB11)
2546:STM32_Init.c  **** //        <3=>         Full Remap (CH1/ETR/PA15, CH2/PB3, CH3/PB10, CH4/PB11)
2547:STM32_Init.c  **** 
2548:STM32_Init.c  **** //--------------------------------------------------------------------------- TIM3 remapping
2549:STM32_Init.c  **** //   <o1.10..11> TIM3 remapping
2550:STM32_Init.c  **** //      <i> Default: No Remap (CH1/PA6, CH2/PA7, CH3/PB0, CH4/PB1)
2551:STM32_Init.c  **** //        <0=>         No Remap (CH1/PA6, CH2/PA7, CH3/PB0, CH4/PB1)
2552:STM32_Init.c  **** //        <2=>         Partial Remap (CH1/PB4, CH2/PB5, CH3/PB0, CH4/PB1)
2553:STM32_Init.c  **** //        <3=>         Full Remap (CH1/PC6, CH2/PC7, CH3/PC8, CH4/PC9)
2554:STM32_Init.c  **** 
2555:STM32_Init.c  **** //--------------------------------------------------------------------------- TIM4 remapping
2556:STM32_Init.c  **** //   <o1.12> TIM4 remapping
2557:STM32_Init.c  **** //      <i> Default: No Remap (CH1/PB6, CH2/PB7, CH3/PB8, CH4/PB9)
2558:STM32_Init.c  **** //        <0=>         No Remap (CH1/PB6, CH2/PB7, CH3/PB8, CH4/PB9)
2559:STM32_Init.c  **** //        <1=>         Remap (CH1/PD12, CH2/PD13, CH3/PD14, CH4/PD15)
2560:STM32_Init.c  **** 
2561:STM32_Init.c  **** //--------------------------------------------------------------------------- CAN remapping
2562:STM32_Init.c  **** //   <o1.13..14> CAN remapping
2563:STM32_Init.c  **** //      <i> Default: No Remap (CANRX/PA11, CANTX/PA12)
2564:STM32_Init.c  **** //        <0=>         No Remap (CANRX/PA11, CANTX/PA12)
2565:STM32_Init.c  **** //        <2=>         Remap (CANRX/PB8, CANTX/PB9)
2566:STM32_Init.c  **** //        <3=>         Remap (CANRX/PD0, CANTX/PPD1)
2567:STM32_Init.c  **** 
2568:STM32_Init.c  **** //--------------------------------------------------------------------------- PD01 remapping
2569:STM32_Init.c  **** //   <o1.15> PD01 remapping
2570:STM32_Init.c  **** //      <i> Default: No Remap
2571:STM32_Init.c  **** //        <0=>         No Remap
2572:STM32_Init.c  **** //        <1=>         Remap (PD0/OSCIN, PD1/OSC_OUT)
2573:STM32_Init.c  **** 
2574:STM32_Init.c  **** // </e> End of Alternate Function remap Configuration
2575:STM32_Init.c  **** #define __AFREMAP_SETUP           0                       //  0
2576:STM32_Init.c  **** #define __AFIO_MAPR               0x00000000              //  1
2577:STM32_Init.c  **** 
2578:STM32_Init.c  **** 
2579:STM32_Init.c  **** //=========================================================================== General purpose I/O C
2580:STM32_Init.c  **** // <e0> General purpose I/O Configuration
2581:STM32_Init.c  **** //--------------------------------------------------------------------------- GPIO port A
2582:STM32_Init.c  **** //   <e1.0> GPIOA : GPIO port A used
2583:STM32_Init.c  **** //     <o2.0..3>   Pin 0 used as 
2584:STM32_Init.c  **** //                 <0=>Analog Input
2585:STM32_Init.c  **** //                 <4=>Floating Input
2586:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
2587:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
2588:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
2589:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 47


2590:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
2591:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
2592:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
2593:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
2594:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
2595:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
2596:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
2597:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
2598:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
2599:STM32_Init.c  **** //     <o2.4..7>   Pin 1 used as 
2600:STM32_Init.c  **** //                 <0=>Analog Input
2601:STM32_Init.c  **** //                 <4=>Floating Input
2602:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
2603:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
2604:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
2605:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
2606:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
2607:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
2608:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
2609:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
2610:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
2611:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
2612:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
2613:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
2614:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
2615:STM32_Init.c  **** //     <o2.8..11>  Pin 2 used as 
2616:STM32_Init.c  **** //                 <0=>Analog Input
2617:STM32_Init.c  **** //                 <4=>Floating Input
2618:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
2619:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
2620:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
2621:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
2622:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
2623:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
2624:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
2625:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
2626:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
2627:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
2628:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
2629:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
2630:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
2631:STM32_Init.c  **** //     <o2.12..15> Pin 3 used as 
2632:STM32_Init.c  **** //                 <0=>Analog Input
2633:STM32_Init.c  **** //                 <4=>Floating Input
2634:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
2635:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
2636:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
2637:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
2638:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
2639:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
2640:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
2641:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
2642:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
2643:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
2644:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
2645:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
2646:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 48


2647:STM32_Init.c  **** //     <o2.16..19> Pin 4 used as 
2648:STM32_Init.c  **** //                 <0=>Analog Input
2649:STM32_Init.c  **** //                 <4=>Floating Input
2650:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
2651:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
2652:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
2653:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
2654:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
2655:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
2656:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
2657:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
2658:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
2659:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
2660:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
2661:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
2662:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
2663:STM32_Init.c  **** //     <o2.20..23> Pin 5 used as 
2664:STM32_Init.c  **** //                 <0=>Analog Input
2665:STM32_Init.c  **** //                 <4=>Floating Input
2666:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
2667:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
2668:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
2669:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
2670:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
2671:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
2672:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
2673:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
2674:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
2675:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
2676:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
2677:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
2678:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
2679:STM32_Init.c  **** //     <o2.24..27> Pin 6 used as 
2680:STM32_Init.c  **** //                 <0=>Analog Input
2681:STM32_Init.c  **** //                 <4=>Floating Input
2682:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
2683:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
2684:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
2685:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
2686:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
2687:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
2688:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
2689:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
2690:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
2691:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
2692:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
2693:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
2694:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
2695:STM32_Init.c  **** //     <o2.28..31> Pin 7 used as 
2696:STM32_Init.c  **** //                 <0=>Analog Input
2697:STM32_Init.c  **** //                 <4=>Floating Input
2698:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
2699:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
2700:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
2701:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
2702:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
2703:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 49


2704:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
2705:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
2706:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
2707:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
2708:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
2709:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
2710:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
2711:STM32_Init.c  **** //     <o3.0..3>   Pin 8 used as 
2712:STM32_Init.c  **** //                 <0=>Analog Input
2713:STM32_Init.c  **** //                 <4=>Floating Input
2714:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
2715:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
2716:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
2717:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
2718:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
2719:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
2720:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
2721:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
2722:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
2723:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
2724:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
2725:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
2726:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
2727:STM32_Init.c  **** //     <o3.4..7>   Pin 9 used as 
2728:STM32_Init.c  **** //                 <0=>Analog Input
2729:STM32_Init.c  **** //                 <4=>Floating Input
2730:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
2731:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
2732:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
2733:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
2734:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
2735:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
2736:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
2737:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
2738:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
2739:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
2740:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
2741:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
2742:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
2743:STM32_Init.c  **** //     <o3.8..11>  Pin 10 used as 
2744:STM32_Init.c  **** //                 <0=>Analog Input
2745:STM32_Init.c  **** //                 <4=>Floating Input
2746:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
2747:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
2748:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
2749:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
2750:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
2751:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
2752:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
2753:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
2754:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
2755:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
2756:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
2757:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
2758:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
2759:STM32_Init.c  **** //     <o3.12..15> Pin 11 used as 
2760:STM32_Init.c  **** //                 <0=>Analog Input
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 50


2761:STM32_Init.c  **** //                 <4=>Floating Input
2762:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
2763:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
2764:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
2765:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
2766:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
2767:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
2768:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
2769:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
2770:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
2771:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
2772:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
2773:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
2774:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
2775:STM32_Init.c  **** //     <o3.16..19> Pin 12 used as 
2776:STM32_Init.c  **** //                 <0=>Analog Input
2777:STM32_Init.c  **** //                 <4=>Floating Input
2778:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
2779:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
2780:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
2781:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
2782:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
2783:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
2784:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
2785:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
2786:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
2787:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
2788:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
2789:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
2790:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
2791:STM32_Init.c  **** //     <o3.20..23> Pin 13 used as 
2792:STM32_Init.c  **** //                 <0=>Analog Input
2793:STM32_Init.c  **** //                 <4=>Floating Input
2794:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
2795:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
2796:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
2797:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
2798:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
2799:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
2800:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
2801:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
2802:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
2803:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
2804:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
2805:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
2806:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
2807:STM32_Init.c  **** //     <o3.24..27> Pin 14 used as 
2808:STM32_Init.c  **** //                 <0=>Analog Input
2809:STM32_Init.c  **** //                 <4=>Floating Input
2810:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
2811:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
2812:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
2813:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
2814:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
2815:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
2816:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
2817:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 51


2818:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
2819:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
2820:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
2821:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
2822:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
2823:STM32_Init.c  **** //     <o3.28..31> Pin 15 used as 
2824:STM32_Init.c  **** //                 <0=>Analog Input
2825:STM32_Init.c  **** //                 <4=>Floating Input
2826:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
2827:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
2828:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
2829:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
2830:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
2831:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
2832:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
2833:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
2834:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
2835:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
2836:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
2837:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
2838:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
2839:STM32_Init.c  **** //   </e>
2840:STM32_Init.c  **** 
2841:STM32_Init.c  **** //--------------------------------------------------------------------------- GPIO port B
2842:STM32_Init.c  **** //   <e1.1> GPIOB : GPIO port B used
2843:STM32_Init.c  **** //     <o4.0..3>   Pin 0 used as 
2844:STM32_Init.c  **** //                 <0=>Analog Input
2845:STM32_Init.c  **** //                 <4=>Floating Input
2846:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
2847:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
2848:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
2849:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
2850:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
2851:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
2852:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
2853:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
2854:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
2855:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
2856:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
2857:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
2858:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
2859:STM32_Init.c  **** //     <o4.4..7>   Pin 1 used as 
2860:STM32_Init.c  **** //                 <0=>Analog Input
2861:STM32_Init.c  **** //                 <4=>Floating Input
2862:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
2863:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
2864:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
2865:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
2866:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
2867:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
2868:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
2869:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
2870:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
2871:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
2872:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
2873:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
2874:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 52


2875:STM32_Init.c  **** //     <o4.8..11>  Pin 2 used as 
2876:STM32_Init.c  **** //                 <0=>Analog Input
2877:STM32_Init.c  **** //                 <4=>Floating Input
2878:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
2879:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
2880:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
2881:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
2882:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
2883:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
2884:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
2885:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
2886:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
2887:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
2888:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
2889:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
2890:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
2891:STM32_Init.c  **** //     <o4.12..15> Pin 3 used as 
2892:STM32_Init.c  **** //                 <0=>Analog Input
2893:STM32_Init.c  **** //                 <4=>Floating Input
2894:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
2895:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
2896:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
2897:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
2898:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
2899:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
2900:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
2901:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
2902:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
2903:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
2904:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
2905:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
2906:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
2907:STM32_Init.c  **** //     <o4.16..19> Pin 4 used as 
2908:STM32_Init.c  **** //                 <0=>Analog Input
2909:STM32_Init.c  **** //                 <4=>Floating Input
2910:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
2911:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
2912:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
2913:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
2914:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
2915:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
2916:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
2917:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
2918:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
2919:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
2920:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
2921:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
2922:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
2923:STM32_Init.c  **** //     <o4.20..23> Pin 5 used as 
2924:STM32_Init.c  **** //                 <0=>Analog Input
2925:STM32_Init.c  **** //                 <4=>Floating Input
2926:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
2927:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
2928:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
2929:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
2930:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
2931:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 53


2932:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
2933:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
2934:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
2935:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
2936:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
2937:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
2938:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
2939:STM32_Init.c  **** //     <o4.24..27> Pin 6 used as 
2940:STM32_Init.c  **** //                 <0=>Analog Input
2941:STM32_Init.c  **** //                 <4=>Floating Input
2942:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
2943:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
2944:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
2945:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
2946:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
2947:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
2948:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
2949:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
2950:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
2951:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
2952:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
2953:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
2954:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
2955:STM32_Init.c  **** //     <o4.28..31> Pin 7 used as 
2956:STM32_Init.c  **** //                 <0=>Analog Input
2957:STM32_Init.c  **** //                 <4=>Floating Input
2958:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
2959:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
2960:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
2961:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
2962:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
2963:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
2964:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
2965:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
2966:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
2967:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
2968:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
2969:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
2970:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
2971:STM32_Init.c  **** //     <o5.0..3>   Pin 8 used as 
2972:STM32_Init.c  **** //                 <0=>Analog Input
2973:STM32_Init.c  **** //                 <4=>Floating Input
2974:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
2975:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
2976:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
2977:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
2978:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
2979:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
2980:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
2981:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
2982:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
2983:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
2984:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
2985:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
2986:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
2987:STM32_Init.c  **** //     <o5.4..7>   Pin 9 used as 
2988:STM32_Init.c  **** //                 <0=>Analog Input
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 54


2989:STM32_Init.c  **** //                 <4=>Floating Input
2990:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
2991:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
2992:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
2993:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
2994:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
2995:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
2996:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
2997:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
2998:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
2999:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3000:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3001:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3002:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3003:STM32_Init.c  **** //     <o5.8..11>  Pin 10 used as 
3004:STM32_Init.c  **** //                 <0=>Analog Input
3005:STM32_Init.c  **** //                 <4=>Floating Input
3006:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3007:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3008:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3009:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3010:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3011:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3012:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3013:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3014:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3015:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3016:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3017:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3018:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3019:STM32_Init.c  **** //     <o5.12..15> Pin 11 used as 
3020:STM32_Init.c  **** //                 <0=>Analog Input
3021:STM32_Init.c  **** //                 <4=>Floating Input
3022:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3023:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3024:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3025:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3026:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3027:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3028:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3029:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3030:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3031:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3032:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3033:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3034:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3035:STM32_Init.c  **** //     <o5.16..19> Pin 12 used as 
3036:STM32_Init.c  **** //                 <0=>Analog Input
3037:STM32_Init.c  **** //                 <4=>Floating Input
3038:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3039:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3040:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3041:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3042:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3043:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3044:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3045:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 55


3046:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3047:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3048:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3049:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3050:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3051:STM32_Init.c  **** //     <o5.20..23> Pin 13 used as 
3052:STM32_Init.c  **** //                 <0=>Analog Input
3053:STM32_Init.c  **** //                 <4=>Floating Input
3054:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3055:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3056:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3057:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3058:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3059:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3060:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3061:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3062:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3063:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3064:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3065:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3066:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3067:STM32_Init.c  **** //     <o5.24..27> Pin 14 used as 
3068:STM32_Init.c  **** //                 <0=>Analog Input
3069:STM32_Init.c  **** //                 <4=>Floating Input
3070:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3071:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3072:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3073:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3074:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3075:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3076:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3077:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3078:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3079:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3080:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3081:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3082:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3083:STM32_Init.c  **** //     <o5.28..31> Pin 15 used as 
3084:STM32_Init.c  **** //                 <0=>Analog Input
3085:STM32_Init.c  **** //                 <4=>Floating Input
3086:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3087:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3088:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3089:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3090:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3091:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3092:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3093:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3094:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3095:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3096:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3097:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3098:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3099:STM32_Init.c  **** //   </e>
3100:STM32_Init.c  **** 
3101:STM32_Init.c  **** //--------------------------------------------------------------------------- GPIO port C
3102:STM32_Init.c  **** //   <e1.2> GPIOC : GPIO port C used
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 56


3103:STM32_Init.c  **** //     <o6.0..3>   Pin 0 used as 
3104:STM32_Init.c  **** //                 <0=>Analog Input
3105:STM32_Init.c  **** //                 <4=>Floating Input
3106:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3107:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3108:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3109:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3110:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3111:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3112:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3113:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3114:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3115:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3116:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3117:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3118:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3119:STM32_Init.c  **** //     <o6.4..7>   Pin 1 used as 
3120:STM32_Init.c  **** //                 <0=>Analog Input
3121:STM32_Init.c  **** //                 <4=>Floating Input
3122:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3123:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3124:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3125:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3126:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3127:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3128:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3129:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3130:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3131:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3132:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3133:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3134:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3135:STM32_Init.c  **** //     <o6.8..11>  Pin 2 used as 
3136:STM32_Init.c  **** //                 <0=>Analog Input
3137:STM32_Init.c  **** //                 <4=>Floating Input
3138:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3139:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3140:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3141:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3142:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3143:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3144:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3145:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3146:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3147:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3148:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3149:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3150:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3151:STM32_Init.c  **** //     <o6.12..15> Pin 3 used as 
3152:STM32_Init.c  **** //                 <0=>Analog Input
3153:STM32_Init.c  **** //                 <4=>Floating Input
3154:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3155:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3156:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3157:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3158:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3159:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 57


3160:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3161:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3162:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3163:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3164:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3165:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3166:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3167:STM32_Init.c  **** //     <o6.16..19> Pin 4 used as 
3168:STM32_Init.c  **** //                 <0=>Analog Input
3169:STM32_Init.c  **** //                 <4=>Floating Input
3170:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3171:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3172:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3173:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3174:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3175:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3176:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3177:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3178:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3179:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3180:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3181:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3182:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3183:STM32_Init.c  **** //     <o6.20..23> Pin 5 used as 
3184:STM32_Init.c  **** //                 <0=>Analog Input
3185:STM32_Init.c  **** //                 <4=>Floating Input
3186:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3187:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3188:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3189:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3190:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3191:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3192:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3193:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3194:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3195:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3196:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3197:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3198:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3199:STM32_Init.c  **** //     <o6.24..27> Pin 6 used as 
3200:STM32_Init.c  **** //                 <0=>Analog Input
3201:STM32_Init.c  **** //                 <4=>Floating Input
3202:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3203:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3204:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3205:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3206:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3207:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3208:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3209:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3210:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3211:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3212:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3213:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3214:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3215:STM32_Init.c  **** //     <o6.28..31> Pin 7 used as 
3216:STM32_Init.c  **** //                 <0=>Analog Input
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 58


3217:STM32_Init.c  **** //                 <4=>Floating Input
3218:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3219:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3220:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3221:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3222:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3223:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3224:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3225:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3226:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3227:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3228:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3229:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3230:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3231:STM32_Init.c  **** //     <o7.0..3>   Pin 8 used as 
3232:STM32_Init.c  **** //                 <0=>Analog Input
3233:STM32_Init.c  **** //                 <4=>Floating Input
3234:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3235:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3236:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3237:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3238:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3239:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3240:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3241:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3242:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3243:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3244:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3245:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3246:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3247:STM32_Init.c  **** //     <o7.4..7>   Pin 9 used as 
3248:STM32_Init.c  **** //                 <0=>Analog Input
3249:STM32_Init.c  **** //                 <4=>Floating Input
3250:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3251:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3252:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3253:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3254:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3255:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3256:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3257:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3258:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3259:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3260:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3261:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3262:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3263:STM32_Init.c  **** //     <o7.8..11>  Pin 10 used as 
3264:STM32_Init.c  **** //                 <0=>Analog Input
3265:STM32_Init.c  **** //                 <4=>Floating Input
3266:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3267:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3268:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3269:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3270:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3271:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3272:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3273:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 59


3274:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3275:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3276:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3277:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3278:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3279:STM32_Init.c  **** //     <o7.12..15> Pin 11 used as 
3280:STM32_Init.c  **** //                 <0=>Analog Input
3281:STM32_Init.c  **** //                 <4=>Floating Input
3282:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3283:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3284:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3285:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3286:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3287:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3288:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3289:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3290:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3291:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3292:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3293:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3294:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3295:STM32_Init.c  **** //     <o7.16..19> Pin 12 used as 
3296:STM32_Init.c  **** //                 <0=>Analog Input
3297:STM32_Init.c  **** //                 <4=>Floating Input
3298:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3299:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3300:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3301:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3302:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3303:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3304:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3305:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3306:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3307:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3308:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3309:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3310:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3311:STM32_Init.c  **** //     <o7.20..23> Pin 13 used as 
3312:STM32_Init.c  **** //                 <0=>Analog Input
3313:STM32_Init.c  **** //                 <4=>Floating Input
3314:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3315:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3316:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3317:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3318:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3319:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3320:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3321:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3322:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3323:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3324:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3325:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3326:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3327:STM32_Init.c  **** //     <o7.24..27> Pin 14 used as 
3328:STM32_Init.c  **** //                 <0=>Analog Input
3329:STM32_Init.c  **** //                 <4=>Floating Input
3330:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 60


3331:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3332:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3333:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3334:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3335:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3336:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3337:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3338:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3339:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3340:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3341:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3342:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3343:STM32_Init.c  **** //     <o7.28..31> Pin 15 used as 
3344:STM32_Init.c  **** //                 <0=>Analog Input
3345:STM32_Init.c  **** //                 <4=>Floating Input
3346:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3347:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3348:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3349:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3350:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3351:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3352:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3353:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3354:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3355:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3356:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3357:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3358:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3359:STM32_Init.c  **** //   </e>
3360:STM32_Init.c  **** 
3361:STM32_Init.c  **** //--------------------------------------------------------------------------- GPIO port D
3362:STM32_Init.c  **** //   <e1.3> GPIOD : GPIO port D used
3363:STM32_Init.c  **** //     <o8.0..3>   Pin 0 used as 
3364:STM32_Init.c  **** //                 <0=>Analog Input
3365:STM32_Init.c  **** //                 <4=>Floating Input
3366:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3367:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3368:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3369:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3370:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3371:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3372:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3373:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3374:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3375:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3376:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3377:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3378:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3379:STM32_Init.c  **** //     <o8.4..7>   Pin 1 used as 
3380:STM32_Init.c  **** //                 <0=>Analog Input
3381:STM32_Init.c  **** //                 <4=>Floating Input
3382:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3383:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3384:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3385:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3386:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3387:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 61


3388:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3389:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3390:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3391:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3392:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3393:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3394:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3395:STM32_Init.c  **** //     <o8.8..11>  Pin 2 used as 
3396:STM32_Init.c  **** //                 <0=>Analog Input
3397:STM32_Init.c  **** //                 <4=>Floating Input
3398:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3399:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3400:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3401:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3402:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3403:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3404:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3405:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3406:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3407:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3408:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3409:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3410:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3411:STM32_Init.c  **** //     <o8.12..15> Pin 3 used as 
3412:STM32_Init.c  **** //                 <0=>Analog Input
3413:STM32_Init.c  **** //                 <4=>Floating Input
3414:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3415:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3416:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3417:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3418:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3419:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3420:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3421:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3422:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3423:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3424:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3425:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3426:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3427:STM32_Init.c  **** //     <o8.16..19> Pin 4 used as 
3428:STM32_Init.c  **** //                 <0=>Analog Input
3429:STM32_Init.c  **** //                 <4=>Floating Input
3430:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3431:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3432:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3433:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3434:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3435:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3436:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3437:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3438:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3439:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3440:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3441:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3442:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3443:STM32_Init.c  **** //     <o8.20..23> Pin 5 used as 
3444:STM32_Init.c  **** //                 <0=>Analog Input
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 62


3445:STM32_Init.c  **** //                 <4=>Floating Input
3446:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3447:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3448:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3449:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3450:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3451:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3452:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3453:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3454:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3455:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3456:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3457:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3458:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3459:STM32_Init.c  **** //     <o8.24..27> Pin 6 used as 
3460:STM32_Init.c  **** //                 <0=>Analog Input
3461:STM32_Init.c  **** //                 <4=>Floating Input
3462:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3463:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3464:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3465:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3466:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3467:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3468:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3469:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3470:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3471:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3472:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3473:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3474:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3475:STM32_Init.c  **** //     <o8.28..31> Pin 7 used as 
3476:STM32_Init.c  **** //                 <0=>Analog Input
3477:STM32_Init.c  **** //                 <4=>Floating Input
3478:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3479:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3480:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3481:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3482:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3483:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3484:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3485:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3486:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3487:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3488:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3489:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3490:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3491:STM32_Init.c  **** //     <o9.0..3>   Pin 8 used as 
3492:STM32_Init.c  **** //                 <0=>Analog Input
3493:STM32_Init.c  **** //                 <4=>Floating Input
3494:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3495:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3496:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3497:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3498:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3499:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3500:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3501:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 63


3502:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3503:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3504:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3505:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3506:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3507:STM32_Init.c  **** //     <o9.4..7>   Pin 9 used as 
3508:STM32_Init.c  **** //                 <0=>Analog Input
3509:STM32_Init.c  **** //                 <4=>Floating Input
3510:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3511:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3512:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3513:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3514:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3515:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3516:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3517:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3518:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3519:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3520:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3521:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3522:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3523:STM32_Init.c  **** //     <o9.8..11>  Pin 10 used as 
3524:STM32_Init.c  **** //                 <0=>Analog Input
3525:STM32_Init.c  **** //                 <4=>Floating Input
3526:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3527:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3528:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3529:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3530:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3531:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3532:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3533:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3534:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3535:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3536:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3537:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3538:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3539:STM32_Init.c  **** //     <o9.12..15> Pin 11 used as 
3540:STM32_Init.c  **** //                 <0=>Analog Input
3541:STM32_Init.c  **** //                 <4=>Floating Input
3542:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3543:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3544:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3545:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3546:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3547:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3548:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3549:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3550:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3551:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3552:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3553:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3554:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3555:STM32_Init.c  **** //     <o9.16..19> Pin 12 used as 
3556:STM32_Init.c  **** //                 <0=>Analog Input
3557:STM32_Init.c  **** //                 <4=>Floating Input
3558:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 64


3559:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3560:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3561:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3562:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3563:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3564:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3565:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3566:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3567:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3568:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3569:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3570:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3571:STM32_Init.c  **** //     <o9.20..23> Pin 13 used as 
3572:STM32_Init.c  **** //                 <0=>Analog Input
3573:STM32_Init.c  **** //                 <4=>Floating Input
3574:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3575:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3576:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3577:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3578:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3579:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3580:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3581:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3582:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3583:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3584:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3585:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3586:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3587:STM32_Init.c  **** //     <o9.24..27> Pin 14 used as 
3588:STM32_Init.c  **** //                 <0=>Analog Input
3589:STM32_Init.c  **** //                 <4=>Floating Input
3590:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3591:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3592:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3593:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3594:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3595:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3596:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3597:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3598:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3599:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3600:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3601:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3602:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3603:STM32_Init.c  **** //     <o9.28..31> Pin 15 used as 
3604:STM32_Init.c  **** //                 <0=>Analog Input
3605:STM32_Init.c  **** //                 <4=>Floating Input
3606:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3607:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3608:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3609:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3610:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3611:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3612:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3613:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3614:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3615:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 65


3616:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3617:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3618:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3619:STM32_Init.c  **** //   </e>
3620:STM32_Init.c  **** 
3621:STM32_Init.c  **** //--------------------------------------------------------------------------- GPIO port E
3622:STM32_Init.c  **** //   <e1.4> GPIOE : GPIO port E used
3623:STM32_Init.c  **** //     <o10.0..3>   Pin 0 used as 
3624:STM32_Init.c  **** //                 <0=>Analog Input
3625:STM32_Init.c  **** //                 <4=>Floating Input
3626:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3627:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3628:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3629:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3630:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3631:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3632:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3633:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3634:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3635:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3636:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3637:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3638:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3639:STM32_Init.c  **** //     <o10.4..7>   Pin 1 used as 
3640:STM32_Init.c  **** //                 <0=>Analog Input
3641:STM32_Init.c  **** //                 <4=>Floating Input
3642:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3643:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3644:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3645:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3646:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3647:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3648:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3649:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3650:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3651:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3652:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3653:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3654:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3655:STM32_Init.c  **** //     <o10.8..11>  Pin 2 used as 
3656:STM32_Init.c  **** //                 <0=>Analog Input
3657:STM32_Init.c  **** //                 <4=>Floating Input
3658:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3659:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3660:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3661:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3662:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3663:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3664:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3665:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3666:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3667:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3668:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3669:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3670:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3671:STM32_Init.c  **** //     <o10.12..15> Pin 3 used as 
3672:STM32_Init.c  **** //                 <0=>Analog Input
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 66


3673:STM32_Init.c  **** //                 <4=>Floating Input
3674:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3675:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3676:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3677:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3678:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3679:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3680:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3681:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3682:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3683:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3684:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3685:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3686:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3687:STM32_Init.c  **** //     <o10.16..19> Pin 4 used as 
3688:STM32_Init.c  **** //                 <0=>Analog Input
3689:STM32_Init.c  **** //                 <4=>Floating Input
3690:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3691:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3692:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3693:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3694:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3695:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3696:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3697:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3698:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3699:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3700:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3701:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3702:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3703:STM32_Init.c  **** //     <o10.20..23> Pin 5 used as 
3704:STM32_Init.c  **** //                 <0=>Analog Input
3705:STM32_Init.c  **** //                 <4=>Floating Input
3706:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3707:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3708:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3709:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3710:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3711:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3712:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3713:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3714:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3715:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3716:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3717:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3718:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3719:STM32_Init.c  **** //     <o10.24..27> Pin 6 used as 
3720:STM32_Init.c  **** //                 <0=>Analog Input
3721:STM32_Init.c  **** //                 <4=>Floating Input
3722:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3723:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3724:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3725:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3726:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3727:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3728:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3729:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 67


3730:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3731:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3732:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3733:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3734:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3735:STM32_Init.c  **** //     <o10.28..31> Pin 7 used as 
3736:STM32_Init.c  **** //                 <0=>Analog Input
3737:STM32_Init.c  **** //                 <4=>Floating Input
3738:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3739:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3740:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3741:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3742:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3743:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3744:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3745:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3746:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3747:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3748:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3749:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3750:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3751:STM32_Init.c  **** //     <o11.0..3>   Pin 8 used as 
3752:STM32_Init.c  **** //                 <0=>Analog Input
3753:STM32_Init.c  **** //                 <4=>Floating Input
3754:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3755:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3756:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3757:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3758:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3759:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3760:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3761:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3762:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3763:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3764:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3765:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3766:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3767:STM32_Init.c  **** //     <o11.4..7>   Pin 9 used as 
3768:STM32_Init.c  **** //                 <0=>Analog Input
3769:STM32_Init.c  **** //                 <4=>Floating Input
3770:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3771:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3772:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3773:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3774:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3775:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3776:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3777:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3778:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3779:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3780:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3781:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3782:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3783:STM32_Init.c  **** //     <o11.8..11>  Pin 10 used as 
3784:STM32_Init.c  **** //                 <0=>Analog Input
3785:STM32_Init.c  **** //                 <4=>Floating Input
3786:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 68


3787:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3788:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3789:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3790:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3791:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3792:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3793:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3794:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3795:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3796:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3797:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3798:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3799:STM32_Init.c  **** //     <o11.12..15> Pin 11 used as 
3800:STM32_Init.c  **** //                 <0=>Analog Input
3801:STM32_Init.c  **** //                 <4=>Floating Input
3802:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3803:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3804:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3805:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3806:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3807:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3808:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3809:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3810:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3811:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3812:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3813:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3814:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3815:STM32_Init.c  **** //     <o11.16..19> Pin 12 used as 
3816:STM32_Init.c  **** //                 <0=>Analog Input
3817:STM32_Init.c  **** //                 <4=>Floating Input
3818:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3819:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3820:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3821:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3822:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3823:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3824:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3825:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3826:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3827:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3828:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3829:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3830:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3831:STM32_Init.c  **** //     <o11.20..23> Pin 13 used as 
3832:STM32_Init.c  **** //                 <0=>Analog Input
3833:STM32_Init.c  **** //                 <4=>Floating Input
3834:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3835:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3836:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3837:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3838:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3839:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3840:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3841:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3842:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3843:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 69


3844:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3845:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3846:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3847:STM32_Init.c  **** //     <o11.24..27> Pin 14 used as 
3848:STM32_Init.c  **** //                 <0=>Analog Input
3849:STM32_Init.c  **** //                 <4=>Floating Input
3850:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3851:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3852:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3853:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3854:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3855:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3856:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3857:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3858:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3859:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3860:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3861:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3862:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3863:STM32_Init.c  **** //     <o11.28..31> Pin 15 used as 
3864:STM32_Init.c  **** //                 <0=>Analog Input
3865:STM32_Init.c  **** //                 <4=>Floating Input
3866:STM32_Init.c  **** //                 <8=>Input with pull-up / pull-down
3867:STM32_Init.c  **** //                 <1=>General Purpose Output push-pull (max speed 10MHz)
3868:STM32_Init.c  **** //                 <5=>General Purpose Output open-drain (max speed 10MHz)
3869:STM32_Init.c  **** //                 <2=>General Purpose Output push-pull (max speed  2MHz)
3870:STM32_Init.c  **** //                 <6=>General Purpose Output open-drain (max speed  2MHz)
3871:STM32_Init.c  **** //                 <3=>General Purpose Output push-pull (max speed 50MHz)
3872:STM32_Init.c  **** //                 <7=>General Purpose Output open-drain (max speed 50MHz)
3873:STM32_Init.c  **** //                 <9=>Alternate Function push-pull (max speed 10MHz)
3874:STM32_Init.c  **** //                 <13=>Alternate Function open-drain (max speed 10MHz)
3875:STM32_Init.c  **** //                 <10=>Alternate Function push-pull (max speed  2MHz)
3876:STM32_Init.c  **** //                 <14=>Alternate Function open-drain (max speed  2MHz)
3877:STM32_Init.c  **** //                 <11=>Alternate Function push-pull (max speed 50MHz)
3878:STM32_Init.c  **** //                 <15=>Alternate Function open-drain (max speed 50MHz)
3879:STM32_Init.c  **** //   </e1.4>
3880:STM32_Init.c  **** // </e> End of General purpose I/O Configuration
3881:STM32_Init.c  **** #define __GPIO_SETUP              1
3882:STM32_Init.c  **** #define __GPIO_USED               0x03
3883:STM32_Init.c  **** #define __GPIOA_CRL               0x00000000
3884:STM32_Init.c  **** #define __GPIOA_CRH               0x00000000
3885:STM32_Init.c  **** #define __GPIOB_CRL               0x00000000
3886:STM32_Init.c  **** #define __GPIOB_CRH               0x33333333
3887:STM32_Init.c  **** #define __GPIOC_CRL               0x00000000
3888:STM32_Init.c  **** #define __GPIOC_CRH               0x00000000
3889:STM32_Init.c  **** #define __GPIOD_CRL               0x00000000
3890:STM32_Init.c  **** #define __GPIOD_CRH               0x00000000
3891:STM32_Init.c  **** #define __GPIOE_CRL               0x00000000
3892:STM32_Init.c  **** #define __GPIOE_CRH               0x00000000
3893:STM32_Init.c  **** 
3894:STM32_Init.c  **** 
3895:STM32_Init.c  **** //=========================================================================== Embedded Flash Config
3896:STM32_Init.c  **** // <e0> Embedded Flash Configuration
3897:STM32_Init.c  **** //   <h> Flash Access Control Configuration (FLASH_ACR)
3898:STM32_Init.c  **** //     <o1.0..2> LATENCY: Latency
3899:STM32_Init.c  **** //       <i> Default: 2 wait states
3900:STM32_Init.c  **** //                     <0=> 0 wait states
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 70


3901:STM32_Init.c  **** //                     <1=> 1 wait states
3902:STM32_Init.c  **** //                     <2=> 2 wait states
3903:STM32_Init.c  **** //     <o1.3> HLFCYA: Flash Half Cycle Access Enable
3904:STM32_Init.c  **** //     <o1.4> PRFTBE: Prefetch Buffer Enable
3905:STM32_Init.c  **** //     <o1.5> PRFTBS: Prefetch Buffer Status Enable
3906:STM32_Init.c  **** //   </h>
3907:STM32_Init.c  **** // </e>
3908:STM32_Init.c  **** #define __EFI_SETUP               1
3909:STM32_Init.c  **** #define __EFI_ACR_Val             0x00000012
3910:STM32_Init.c  **** 
3911:STM32_Init.c  **** 
3912:STM32_Init.c  **** 
3913:STM32_Init.c  **** /*----------------------------------------------------------------------------
3914:STM32_Init.c  ****   DEFINES
3915:STM32_Init.c  ****  *----------------------------------------------------------------------------*/
3916:STM32_Init.c  **** #define CFGR_SWS_MASK       0x0000000C             // Mask for used SYSCLK
3917:STM32_Init.c  **** #define CFGR_SW_MASK        0x00000003             // Mask for used SYSCLK
3918:STM32_Init.c  **** #define CFGR_PLLMULL_MASK   0x003C0000             // Mask for PLL multiplier
3919:STM32_Init.c  **** #define CFGR_PLLXTPRE_MASK  0x00020000             // Mask for PLL HSE devider
3920:STM32_Init.c  **** #define CFGR_PLLSRC_MASK    0x00010000             // Mask for PLL clock source
3921:STM32_Init.c  **** #define CFGR_HPRE_MASK      0x000000F0             // Mask for AHB prescaler
3922:STM32_Init.c  **** #define CFGR_PRE1_MASK      0x00000700             // Mask for APB1 prescaler     
3923:STM32_Init.c  **** #define CFGR_PRE2_MASK      0x00003800             // Mask for APB2 prescaler 
3924:STM32_Init.c  ****     
3925:STM32_Init.c  **** /*----------------------------------------------------------------------------
3926:STM32_Init.c  ****  Define SYSCLK
3927:STM32_Init.c  ****  *----------------------------------------------------------------------------*/
3928:STM32_Init.c  **** #define __HSI 8000000UL
3929:STM32_Init.c  **** //#define __HSE 8000000UL
3930:STM32_Init.c  **** #define __PLLMULL (((__RCC_CFGR_VAL & CFGR_PLLMULL_MASK) >> 18) + 2)
3931:STM32_Init.c  **** 
3932:STM32_Init.c  **** #if   ((__RCC_CFGR_VAL & CFGR_SW_MASK) == 0x00) 
3933:STM32_Init.c  ****   #define __SYSCLK   __HSI                        // HSI is used as system clock
3934:STM32_Init.c  **** #elif ((__RCC_CFGR_VAL & CFGR_SW_MASK) == 0x01)
3935:STM32_Init.c  ****   #define __SYSCLK   __HSE                        // HSE is used as system clock
3936:STM32_Init.c  **** #elif ((__RCC_CFGR_VAL & CFGR_SW_MASK) == 0x02)
3937:STM32_Init.c  ****   #if (__RCC_CFGR_VAL & CFGR_PLLSRC_MASK)         // HSE is PLL clock source
3938:STM32_Init.c  ****     #if (__RCC_CFGR_VAL & CFGR_PLLXTPRE_MASK)     // HSE/2 is used
3939:STM32_Init.c  ****       #define __SYSCLK  ((__HSE >> 1) * __PLLMULL)// SYSCLK = HSE/2 * pllmull
3940:STM32_Init.c  ****     #else                                         // HSE is used
3941:STM32_Init.c  ****       #define __SYSCLK  ((__HSE >> 0) * __PLLMULL)// SYSCLK = HSE   * pllmul
3942:STM32_Init.c  ****     #endif  
3943:STM32_Init.c  ****   #else                                           // HSI/2 is PLL clock source
3944:STM32_Init.c  ****     #define __SYSCLK  ((__HSI >> 1) * __PLLMULL)  // SYSCLK = HSI/2 * pllmul
3945:STM32_Init.c  ****   #endif
3946:STM32_Init.c  **** #else
3947:STM32_Init.c  ****    #error "ask for help"
3948:STM32_Init.c  **** #endif
3949:STM32_Init.c  ****    
3950:STM32_Init.c  **** /*----------------------------------------------------------------------------
3951:STM32_Init.c  ****  Define  HCLK
3952:STM32_Init.c  ****  *----------------------------------------------------------------------------*/
3953:STM32_Init.c  **** #define __HCLKPRESC  ((__RCC_CFGR_VAL & CFGR_HPRE_MASK) >> 4)
3954:STM32_Init.c  **** #if (__HCLKPRESC & 0x08)
3955:STM32_Init.c  ****   #define __HCLK        (__SYSCLK >> ((__HCLKPRESC & 0x07)+1))
3956:STM32_Init.c  **** #else
3957:STM32_Init.c  ****   #define __HCLK        (__SYSCLK)
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 71


3958:STM32_Init.c  **** #endif
3959:STM32_Init.c  **** 
3960:STM32_Init.c  **** /*----------------------------------------------------------------------------
3961:STM32_Init.c  ****  Define  PCLK1
3962:STM32_Init.c  ****  *----------------------------------------------------------------------------*/
3963:STM32_Init.c  **** #define __PCLK1PRESC  ((__RCC_CFGR_VAL & CFGR_PRE1_MASK) >> 8)
3964:STM32_Init.c  **** #if (__PCLK1PRESC & 0x04)
3965:STM32_Init.c  ****   #define __PCLK1       (__HCLK >> ((__PCLK1PRESC & 0x03)+1))
3966:STM32_Init.c  **** #else
3967:STM32_Init.c  ****   #define __PCLK1       (__HCLK)
3968:STM32_Init.c  **** #endif
3969:STM32_Init.c  **** 
3970:STM32_Init.c  **** /*----------------------------------------------------------------------------
3971:STM32_Init.c  ****  Define  PCLK2
3972:STM32_Init.c  ****  *----------------------------------------------------------------------------*/
3973:STM32_Init.c  **** #define __PCLK2PRESC  ((__RCC_CFGR_VAL & CFGR_PRE2_MASK) >> 11)
3974:STM32_Init.c  **** #if (__PCLK2PRESC & 0x04)
3975:STM32_Init.c  ****   #define __PCLK2       (__HCLK >> ((__PCLK2PRESC & 0x03)+1))
3976:STM32_Init.c  **** #else
3977:STM32_Init.c  ****   #define __PCLK2       (__HCLK)
3978:STM32_Init.c  **** #endif
3979:STM32_Init.c  **** 
3980:STM32_Init.c  **** 
3981:STM32_Init.c  **** /*----------------------------------------------------------------------------
3982:STM32_Init.c  ****  Define  IWDG PR and RLR settings
3983:STM32_Init.c  ****  *----------------------------------------------------------------------------*/
3984:STM32_Init.c  **** #if   (__IWDG_PERIOD >  16384000UL)
3985:STM32_Init.c  ****   #define __IWDG_PR             (6)
3986:STM32_Init.c  ****   #define __IWDGCLOCK (32000UL/256)
3987:STM32_Init.c  **** #elif (__IWDG_PERIOD >   8192000UL)
3988:STM32_Init.c  ****   #define __IWDG_PR             (5)
3989:STM32_Init.c  ****   #define __IWDGCLOCK (32000UL/128)
3990:STM32_Init.c  **** #elif (__IWDG_PERIOD >   4096000UL)
3991:STM32_Init.c  ****   #define __IWDG_PR             (4)
3992:STM32_Init.c  ****   #define __IWDGCLOCK  (32000UL/64)
3993:STM32_Init.c  **** #elif (__IWDG_PERIOD >   2048000UL)
3994:STM32_Init.c  ****   #define __IWDG_PR             (3)
3995:STM32_Init.c  ****   #define __IWDGCLOCK  (32000UL/32)
3996:STM32_Init.c  **** #elif (__IWDG_PERIOD >   1024000UL)
3997:STM32_Init.c  ****   #define __IWDG_PR             (2)
3998:STM32_Init.c  ****   #define __IWDGCLOCK  (32000UL/16)
3999:STM32_Init.c  **** #elif (__IWDG_PERIOD >    512000UL)
4000:STM32_Init.c  ****   #define __IWDG_PR             (1)
4001:STM32_Init.c  ****   #define __IWDGCLOCK   (32000UL/8)
4002:STM32_Init.c  **** #else
4003:STM32_Init.c  ****   #define __IWDG_PR             (0)
4004:STM32_Init.c  ****   #define __IWDGCLOCK   (32000UL/4)
4005:STM32_Init.c  **** #endif
4006:STM32_Init.c  **** #define __IWGDCLK  (32000UL/(0x04<<__IWDG_PR))
4007:STM32_Init.c  **** #define __IWDG_RLR (__IWDG_PERIOD*__IWGDCLK/1000000UL-1)
4008:STM32_Init.c  **** 
4009:STM32_Init.c  **** 
4010:STM32_Init.c  **** /*----------------------------------------------------------------------------
4011:STM32_Init.c  ****  Define  SYSTICKCLK
4012:STM32_Init.c  ****  *----------------------------------------------------------------------------*/
4013:STM32_Init.c  **** #if (__SYSTICK_CTRL_VAL & 0x04)
4014:STM32_Init.c  ****   #define __SYSTICKCLK    (__HCLK)
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 72


4015:STM32_Init.c  **** #else
4016:STM32_Init.c  ****   #define __SYSTICKCLK    (__HCLK/8)
4017:STM32_Init.c  **** #endif
4018:STM32_Init.c  **** 
4019:STM32_Init.c  **** 
4020:STM32_Init.c  **** /*----------------------------------------------------------------------------
4021:STM32_Init.c  ****  Define  RTCCLK
4022:STM32_Init.c  ****  *----------------------------------------------------------------------------*/
4023:STM32_Init.c  **** #if   ((__RTC_CLKSRC_VAL & 0x00000300) == 0x00000000)
4024:STM32_Init.c  ****   #define __RTCCLK        (0)
4025:STM32_Init.c  **** #elif ((__RTC_CLKSRC_VAL & 0x00000300) == 0x00000100)
4026:STM32_Init.c  ****   #define __RTCCLK        (32768)
4027:STM32_Init.c  **** #elif ((__RTC_CLKSRC_VAL & 0x00000300) == 0x00000200)
4028:STM32_Init.c  ****   #define __RTCCLK        (32000)
4029:STM32_Init.c  **** #elif ((__RTC_CLKSRC_VAL & 0x00000300) == 0x00000300)
4030:STM32_Init.c  ****   #define __RTCCLK        (__HSE/128)
4031:STM32_Init.c  **** #endif
4032:STM32_Init.c  **** 
4033:STM32_Init.c  **** 
4034:STM32_Init.c  **** /*----------------------------------------------------------------------------
4035:STM32_Init.c  ****  Define  TIM1CLK
4036:STM32_Init.c  ****  *----------------------------------------------------------------------------*/
4037:STM32_Init.c  **** #if (__PCLK2PRESC & 0x04)
4038:STM32_Init.c  ****   #define __TIM1CLK     (2*__PCLK2)
4039:STM32_Init.c  **** #else
4040:STM32_Init.c  ****   #define __TIM1CLK     (__PCLK2)
4041:STM32_Init.c  **** #endif
4042:STM32_Init.c  **** 
4043:STM32_Init.c  **** 
4044:STM32_Init.c  **** /*----------------------------------------------------------------------------
4045:STM32_Init.c  ****  Define  TIMXCLK
4046:STM32_Init.c  ****  *----------------------------------------------------------------------------*/
4047:STM32_Init.c  **** #if (__PCLK1PRESC & 0x04)
4048:STM32_Init.c  ****   #define __TIMXCLK    (2*__PCLK1)
4049:STM32_Init.c  **** #else
4050:STM32_Init.c  ****   #define __TIMXCLK    (__PCLK1)
4051:STM32_Init.c  **** #endif
4052:STM32_Init.c  **** 
4053:STM32_Init.c  **** 
4054:STM32_Init.c  **** /*----------------------------------------------------------------------------
4055:STM32_Init.c  ****  Define Real Time Clock CNT and ALR settings
4056:STM32_Init.c  ****  *----------------------------------------------------------------------------*/
4057:STM32_Init.c  **** #define __RTC_CNT_TICKS  ((__RTC_TIME_H *3600UL)+(__RTC_TIME_M *60UL)+(__RTC_TIME_S) )
4058:STM32_Init.c  **** #define __RTC_ALR_TICKS  ((__RTC_ALARM_H*3600UL)+(__RTC_ALARM_M*60UL)+(__RTC_ALARM_S))
4059:STM32_Init.c  **** #define __RTC_CNT        (__RTC_CNT_TICKS*1000UL/__RTC_PERIOD)
4060:STM32_Init.c  **** #define __RTC_ALR        (__RTC_ALR_TICKS*1000UL/__RTC_PERIOD)
4061:STM32_Init.c  **** 
4062:STM32_Init.c  **** /*----------------------------------------------------------------------------
4063:STM32_Init.c  ****  Define Timer PSC and ARR settings
4064:STM32_Init.c  ****  *----------------------------------------------------------------------------*/
4065:STM32_Init.c  **** #define __VAL(__TIMCLK, __PERIOD) ((__TIMCLK/1000000UL)*__PERIOD)
4066:STM32_Init.c  **** //#define __PSC(__TIMCLK, __PERIOD) ((__VAL(__TIMCLK, __PERIOD)-1)>>15)
4067:STM32_Init.c  **** #define __PSC(__TIMCLK, __PERIOD)  (((__VAL(__TIMCLK, __PERIOD)+49999UL)/50000UL) - 1)
4068:STM32_Init.c  **** #define __ARR(__TIMCLK, __PERIOD) ((__VAL(__TIMCLK, __PERIOD)/(__PSC(__TIMCLK, __PERIOD)+1)) - 1)
4069:STM32_Init.c  **** 
4070:STM32_Init.c  **** 
4071:STM32_Init.c  **** /*----------------------------------------------------------------------------
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 73


4072:STM32_Init.c  ****  Define  Baudrate setting (BRR) for USART1 
4073:STM32_Init.c  ****  *----------------------------------------------------------------------------*/
4074:STM32_Init.c  **** #define __DIV(__PCLK, __BAUD)       ((__PCLK*25)/(4*__BAUD))
4075:STM32_Init.c  **** #define __DIVMANT(__PCLK, __BAUD)   (__DIV(__PCLK, __BAUD)/100)
4076:STM32_Init.c  **** #define __DIVFRAQ(__PCLK, __BAUD)   (((__DIV(__PCLK, __BAUD) - (__DIVMANT(__PCLK, __BAUD) * 100)) *
4077:STM32_Init.c  **** #define __USART_BRR(__PCLK, __BAUD) ((__DIVMANT(__PCLK, __BAUD) << 4)|(__DIVFRAQ(__PCLK, __BAUD) & 
4078:STM32_Init.c  **** 
4079:STM32_Init.c  **** 
4080:STM32_Init.c  **** /*----------------------------------------------------------------------------
4081:STM32_Init.c  ****  STM32 embedded Flash interface setup.
4082:STM32_Init.c  ****  initializes the ACR register
4083:STM32_Init.c  ****  *----------------------------------------------------------------------------*/
4084:STM32_Init.c  **** void stm32_EfiSetup (void) {
  30              		.loc 1 4084 0
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
4085:STM32_Init.c  **** 
4086:STM32_Init.c  ****   FLASH->ACR = __EFI_ACR_Val;                        // set access control register 
  34              		.loc 1 4086 0
  35 0000 42F20003 		movw	r3, #:lower16:1073881088
  36 0004 C4F20203 		movt	r3, #:upper16:1073881088
  37 0008 4FF01202 		mov	r2, #18
  38 000c 1A60     		str	r2, [r3, #0]
4087:STM32_Init.c  **** }
  39              		.loc 1 4087 0
  40 000e 7047     		bx	lr
  41              	.LFE2:
  42              		.size	stm32_EfiSetup, .-stm32_EfiSetup
  43              		.align	2
  44              		.global	stm32_ClockSetup
  45              		.thumb
  46              		.thumb_func
  47              		.type	stm32_ClockSetup, %function
  48              	stm32_ClockSetup:
  49              	.LFB3:
4088:STM32_Init.c  **** 
4089:STM32_Init.c  **** /*----------------------------------------------------------------------------
4090:STM32_Init.c  ****  STM32 clock setup.
4091:STM32_Init.c  ****  initializes the RCC register
4092:STM32_Init.c  ****  *----------------------------------------------------------------------------*/
4093:STM32_Init.c  **** void stm32_ClockSetup (void) {
  50              		.loc 1 4093 0
  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
4094:STM32_Init.c  ****   /* Clock Configuration*/
4095:STM32_Init.c  **** 
4096:STM32_Init.c  ****   RCC->CFGR = __RCC_CFGR_VAL;                        // set clock configuration register
  54              		.loc 1 4096 0
  55 0010 41F20003 		movw	r3, #:lower16:1073876992
  56 0014 C4F20203 		movt	r3, #:upper16:1073876992
  57 0018 48F20242 		movw	r2, #:lower16:1934338
  58 001c C0F21D02 		movt	r2, #:upper16:1934338
  59 0020 5A60     		str	r2, [r3, #4]
4097:STM32_Init.c  ****   RCC->CR   = __RCC_CR_VAL;                          // set clock control register
  60              		.loc 1 4097 0
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 74


  61 0022 40F28202 		movw	r2, #:lower16:16842882
  62 0026 C0F20112 		movt	r2, #:upper16:16842882
  63 002a 1A60     		str	r2, [r3, #0]
4098:STM32_Init.c  **** 
4099:STM32_Init.c  ****   if (__RCC_CR_VAL & RCC_CR_HSION) {                 // if HSI enabled
4100:STM32_Init.c  ****     while ((RCC->CR & RCC_CR_HSIRDY) == 0);          // Wait for HSIRDY = 1 (HSI is ready)
4101:STM32_Init.c  ****   }
4102:STM32_Init.c  **** 
4103:STM32_Init.c  ****   if (__RCC_CR_VAL & RCC_CR_HSEON) {                 // if HSE enabled
4104:STM32_Init.c  ****     while ((RCC->CR & RCC_CR_HSERDY) == 0);          // Wait for HSERDY = 1 (HSE is ready)
  64              		.loc 1 4104 0
  65 002c 1A46     		mov	r2, r3
  66              	.L4:
  67 002e 1368     		ldr	r3, [r2, #0]
  68 0030 13F4003F 		tst	r3, #131072
  69 0034 FBD0     		beq	.L4
4105:STM32_Init.c  ****   }
4106:STM32_Init.c  **** 
4107:STM32_Init.c  ****   if (__RCC_CR_VAL & RCC_CR_PLLON) {                 // if PLL enabled
4108:STM32_Init.c  ****     while ((RCC->CR & RCC_CR_PLLRDY) == 0);          // Wait for PLLRDY = 1 (PLL is ready)
  70              		.loc 1 4108 0
  71 0036 41F20001 		movw	r1, #:lower16:1073876992
  72 003a 0A46     		mov	r2, r1
  73 003c C4F20202 		movt	r2, #:upper16:1073876992
  74              	.L9:
  75 0040 1368     		ldr	r3, [r2, #0]
  76 0042 13F0007F 		tst	r3, #33554432
  77 0046 FBD0     		beq	.L9
4109:STM32_Init.c  ****   }
4110:STM32_Init.c  **** 
4111:STM32_Init.c  ****   /* Wait till SYSCLK is stabilized (depending on selected clock) */
4112:STM32_Init.c  ****   while ((RCC->CFGR & RCC_CFGR_SWS) != ((__RCC_CFGR_VAL<<2) & RCC_CFGR_SWS));
  78              		.loc 1 4112 0
  79 0048 41F20001 		movw	r1, #:lower16:1073876992
  80 004c 0A46     		mov	r2, r1
  81 004e C4F20202 		movt	r2, #:upper16:1073876992
  82              	.L8:
  83 0052 5368     		ldr	r3, [r2, #4]
  84 0054 03F00C03 		and	r3, r3, #12
  85 0058 082B     		cmp	r3, #8
  86 005a FAD1     		bne	.L8
4113:STM32_Init.c  **** } // end of stm32_ClockSetup
  87              		.loc 1 4113 0
  88 005c 7047     		bx	lr
  89              	.LFE3:
  90              		.size	stm32_ClockSetup, .-stm32_ClockSetup
  91 005e 00BF     		.align	2
  92              		.global	stm32_NvicSetup
  93              		.thumb
  94              		.thumb_func
  95              		.type	stm32_NvicSetup, %function
  96              	stm32_NvicSetup:
  97              	.LFB4:
4114:STM32_Init.c  **** 
4115:STM32_Init.c  **** 
4116:STM32_Init.c  **** /*----------------------------------------------------------------------------
4117:STM32_Init.c  ****  STM32 NVIC setup.
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 75


4118:STM32_Init.c  ****  initializes the NVIC register
4119:STM32_Init.c  ****  *----------------------------------------------------------------------------*/
4120:STM32_Init.c  **** void stm32_NvicSetup (void) {
  98              		.loc 1 4120 0
  99              		@ args = 0, pretend = 0, frame = 0
 100              		@ frame_needed = 0, uses_anonymous_args = 0
 101              		@ link register save eliminated.
4121:STM32_Init.c  **** 
4122:STM32_Init.c  ****   if (__NVIC_USED & (1 << 0)) {                              // Vector Table Offset Register
4123:STM32_Init.c  ****     SCB->VTOR = (__NVIC_VTOR_VAL & (u32)0x1FFFFF80);         // set register
4124:STM32_Init.c  ****   }
4125:STM32_Init.c  **** 
4126:STM32_Init.c  **** } // end of stm32_NvicSetup
 102              		.loc 1 4126 0
 103 0060 7047     		bx	lr
 104              	.LFE4:
 105              		.size	stm32_NvicSetup, .-stm32_NvicSetup
 106 0062 00BF     		.align	2
 107              		.global	stm32_IwdgSetup
 108              		.thumb
 109              		.thumb_func
 110              		.type	stm32_IwdgSetup, %function
 111              	stm32_IwdgSetup:
 112              	.LFB5:
4127:STM32_Init.c  **** 
4128:STM32_Init.c  **** 
4129:STM32_Init.c  **** /*----------------------------------------------------------------------------
4130:STM32_Init.c  ****  STM32 Independent watchdog setup.
4131:STM32_Init.c  ****  initializes the IWDG register
4132:STM32_Init.c  ****  *----------------------------------------------------------------------------*/
4133:STM32_Init.c  **** void stm32_IwdgSetup (void) {
 113              		.loc 1 4133 0
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
4134:STM32_Init.c  **** 
4135:STM32_Init.c  **** //  RCC->CSR |= (1<<0);                                           // LSI enable, necessary for IWDG
4136:STM32_Init.c  **** //  while ((RCC->CSR & (1<<1)) == 0);                             // wait till LSI is ready
4137:STM32_Init.c  **** 
4138:STM32_Init.c  ****   IWDG->KR  = 0x5555;                                           // enable write to PR, RLR
 117              		.loc 1 4138 0
 118 0064 43F20003 		movw	r3, #:lower16:1073754112
 119 0068 C4F20003 		movt	r3, #:upper16:1073754112
 120 006c 45F25552 		movw	r2, #21845
 121 0070 1A60     		str	r2, [r3, #0]
4139:STM32_Init.c  ****   IWDG->PR  = __IWDG_PR;                                        // Init prescaler
 122              		.loc 1 4139 0
 123 0072 4FF00202 		mov	r2, #2
 124 0076 5A60     		str	r2, [r3, #4]
4140:STM32_Init.c  ****   IWDG->RLR = __IWDG_RLR;                                       // Init RLR
 125              		.loc 1 4140 0
 126 0078 40F69F72 		movw	r2, #3999
 127 007c 9A60     		str	r2, [r3, #8]
4141:STM32_Init.c  ****   IWDG->KR  = 0xAAAA;                                           // Reload the watchdog
 128              		.loc 1 4141 0
 129 007e 4AF6AA22 		movw	r2, #43690
 130 0082 1A60     		str	r2, [r3, #0]
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 76


4142:STM32_Init.c  ****   IWDG->KR  = 0xCCCC;                                           // Start the watchdog
 131              		.loc 1 4142 0
 132 0084 4CF6CC42 		movw	r2, #52428
 133 0088 1A60     		str	r2, [r3, #0]
4143:STM32_Init.c  **** } // end of stm32_IwdgSetup
 134              		.loc 1 4143 0
 135 008a 7047     		bx	lr
 136              	.LFE5:
 137              		.size	stm32_IwdgSetup, .-stm32_IwdgSetup
 138              		.align	2
 139              		.global	stm32_SysTickSetup
 140              		.thumb
 141              		.thumb_func
 142              		.type	stm32_SysTickSetup, %function
 143              	stm32_SysTickSetup:
 144              	.LFB6:
4144:STM32_Init.c  **** 
4145:STM32_Init.c  **** 
4146:STM32_Init.c  **** /*----------------------------------------------------------------------------
4147:STM32_Init.c  ****  STM32 System Timer setup.
4148:STM32_Init.c  ****  initializes the SysTick register
4149:STM32_Init.c  ****  *----------------------------------------------------------------------------*/
4150:STM32_Init.c  **** void stm32_SysTickSetup (void) {
 145              		.loc 1 4150 0
 146              		@ args = 0, pretend = 0, frame = 0
 147              		@ frame_needed = 0, uses_anonymous_args = 0
 148              		@ link register save eliminated.
4151:STM32_Init.c  **** 
4152:STM32_Init.c  **** #if ((__SYSTICK_PERIOD*(__SYSTICKCLK/1000)-1) > 0xFFFFFF)       // reload value to large
4153:STM32_Init.c  ****    #error "Reload Value to large! Please use 'HCLK/8' as System Timer clock source or smaller perio
4154:STM32_Init.c  **** #else
4155:STM32_Init.c  ****   SysTick->LOAD  = __SYSTICK_PERIOD*(__SYSTICKCLK/1000)-1;      // set reload register
 149              		.loc 1 4155 0
 150 008c 4EF21002 		movw	r2, #:lower16:-536813552
 151 0090 CEF20002 		movt	r2, #:upper16:-536813552
 152 0094 4FF67F43 		movw	r3, #:lower16:719999
 153 0098 C0F20A03 		movt	r3, #:upper16:719999
 154 009c 5360     		str	r3, [r2, #4]
4156:STM32_Init.c  ****   SysTick->CTRL  = __SYSTICK_CTRL_VAL;                          // set clock source and Interrupt e
 155              		.loc 1 4156 0
 156 009e 4FF00603 		mov	r3, #6
 157 00a2 1360     		str	r3, [r2, #0]
4157:STM32_Init.c  **** 
4158:STM32_Init.c  ****   SysTick->VAL   =  0;                                          // clear  the counter
 158              		.loc 1 4158 0
 159 00a4 4FF00003 		mov	r3, #0
 160 00a8 9360     		str	r3, [r2, #8]
4159:STM32_Init.c  ****   SysTick->CTRL |= SYSTICK_CSR_ENABLE;                          // enable the counter
 161              		.loc 1 4159 0
 162 00aa 1368     		ldr	r3, [r2, #0]
 163 00ac 43F00103 		orr	r3, r3, #1
 164 00b0 1360     		str	r3, [r2, #0]
4160:STM32_Init.c  **** #endif
4161:STM32_Init.c  **** } // end of stm32_SysTickSetup
 165              		.loc 1 4161 0
 166 00b2 7047     		bx	lr
 167              	.LFE6:
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 77


 168              		.size	stm32_SysTickSetup, .-stm32_SysTickSetup
 169              		.align	2
 170              		.global	stm32_RtcSetup
 171              		.thumb
 172              		.thumb_func
 173              		.type	stm32_RtcSetup, %function
 174              	stm32_RtcSetup:
 175              	.LFB7:
4162:STM32_Init.c  **** 
4163:STM32_Init.c  **** 
4164:STM32_Init.c  **** /*----------------------------------------------------------------------------
4165:STM32_Init.c  ****  STM32 Real Time Clock setup.
4166:STM32_Init.c  ****  initializes the RTC Prescaler and RTC counter register
4167:STM32_Init.c  ****  *----------------------------------------------------------------------------*/
4168:STM32_Init.c  **** void stm32_RtcSetup (void) {
 176              		.loc 1 4168 0
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
4169:STM32_Init.c  **** 
4170:STM32_Init.c  ****   RCC->APB1ENR |= RCC_APB1ENR_PWREN;                            // enable clock for Power interface
 180              		.loc 1 4170 0
 181 00b4 41F20001 		movw	r1, #:lower16:1073876992
 182 00b8 C4F20201 		movt	r1, #:upper16:1073876992
 183 00bc CB69     		ldr	r3, [r1, #28]
 184 00be 43F08053 		orr	r3, r3, #268435456
 185 00c2 CB61     		str	r3, [r1, #28]
4171:STM32_Init.c  ****   PWR->CR      |= PWR_CR_DBP;                                   // enable access to RTC, BDC regist
 186              		.loc 1 4171 0
 187 00c4 47F20002 		movw	r2, #:lower16:1073770496
 188 00c8 C4F20002 		movt	r2, #:upper16:1073770496
 189 00cc 1368     		ldr	r3, [r2, #0]
 190 00ce 43F48073 		orr	r3, r3, #256
 191 00d2 1360     		str	r3, [r2, #0]
4172:STM32_Init.c  **** 
4173:STM32_Init.c  ****   if ((__RTC_CLKSRC_VAL & RCC_BDCR_RTCSEL) == 0x00000100) {     // LSE is RTC clock source
4174:STM32_Init.c  ****     RCC->BDCR |= RCC_BDCR_LSEON;                                // enable LSE
 192              		.loc 1 4174 0
 193 00d4 0B6A     		ldr	r3, [r1, #32]
 194 00d6 43F00103 		orr	r3, r3, #1
 195 00da 0B62     		str	r3, [r1, #32]
4175:STM32_Init.c  ****     while ((RCC->BDCR & RCC_BDCR_LSERDY) == 0);                 // Wait for LSERDY = 1 (LSE is read
 196              		.loc 1 4175 0
 197 00dc 0A46     		mov	r2, r1
 198              	.L20:
 199 00de 136A     		ldr	r3, [r2, #32]
 200 00e0 13F0020F 		tst	r3, #2
 201 00e4 FBD0     		beq	.L20
4176:STM32_Init.c  ****   }
4177:STM32_Init.c  **** 
4178:STM32_Init.c  ****   if ((__RTC_CLKSRC_VAL & RCC_BDCR_RTCSEL) == 0x00000200) {     // LSI is RTC clock source
4179:STM32_Init.c  ****     RCC->CSR |= RCC_CSR_LSION;                                  // enable LSI
4180:STM32_Init.c  ****     while ((RCC->CSR & RCC_CSR_LSIRDY) == 0);                   // Wait for LSERDY = 1 (LSE is read
4181:STM32_Init.c  ****   }
4182:STM32_Init.c  **** 
4183:STM32_Init.c  ****   RCC->BDCR |= (__RTC_CLKSRC_VAL | RCC_BDCR_RTCEN);             // set RTC clock source, enable RTC
 202              		.loc 1 4183 0
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 78


 203 00e6 41F20002 		movw	r2, #:lower16:1073876992
 204 00ea C4F20202 		movt	r2, #:upper16:1073876992
 205 00ee 136A     		ldr	r3, [r2, #32]
 206 00f0 43F40143 		orr	r3, r3, #33024
 207 00f4 1362     		str	r3, [r2, #32]
4184:STM32_Init.c  **** 
4185:STM32_Init.c  **** //  RTC->CRL   &= ~(1<<3);                                        // reset Registers Synchronized F
4186:STM32_Init.c  **** //  while ((RTC->CRL & (1<<3)) == 0);                             // wait until registers are synch
4187:STM32_Init.c  **** 
4188:STM32_Init.c  ****   RTC->CRL  |=  RTC_CRL_CNF;                                    // set configuration mode
 208              		.loc 1 4188 0
 209 00f6 42F60001 		movw	r1, #:lower16:1073752064
 210 00fa C4F20001 		movt	r1, #:upper16:1073752064
 211 00fe 8B88     		ldrh	r3, [r1, #4]
 212 0100 9BB2     		uxth	r3, r3
 213 0102 43F01003 		orr	r3, r3, #16
 214 0106 8B80     		strh	r3, [r1, #4]	@ movhi
4189:STM32_Init.c  ****   RTC->PRLH  = ((__RTC_PERIOD*__RTCCLK/1000-1)>>16) & 0x00FF;   // set prescaler load register high
 215              		.loc 1 4189 0
 216 0108 4FF00003 		mov	r3, #0
 217 010c 0B81     		strh	r3, [r1, #8]	@ movhi
4190:STM32_Init.c  ****   RTC->PRLL  = ((__RTC_PERIOD*__RTCCLK/1000-1)    ) & 0xFFFF;   // set prescaler load register low
 218              		.loc 1 4190 0
 219 010e 47F6FF72 		movw	r2, 32767	@ movhi
 220 0112 8A81     		strh	r2, [r1, #12]	@ movhi
4191:STM32_Init.c  ****   RTC->CNTH  = ((__RTC_CNT)>>16) & 0xFFFF;                      // set counter high
 221              		.loc 1 4191 0
 222 0114 0B83     		strh	r3, [r1, #24]	@ movhi
4192:STM32_Init.c  ****   RTC->CNTL  = ((__RTC_CNT)    ) & 0xFFFF;                      // set counter low
 223              		.loc 1 4192 0
 224 0116 8B83     		strh	r3, [r1, #28]	@ movhi
4193:STM32_Init.c  ****   RTC->ALRH  = ((__RTC_ALR)>>16) & 0xFFFF;                      // set alarm high
 225              		.loc 1 4193 0
 226 0118 0B84     		strh	r3, [r1, #32]	@ movhi
4194:STM32_Init.c  ****   RTC->ALRL  = ((__RTC_ALR)    ) & 0xFFFF;                      // set alarm low
 227              		.loc 1 4194 0
 228 011a 4FF03C03 		mov	r3, #60	@ movhi
 229 011e 8B84     		strh	r3, [r1, #36]	@ movhi
4195:STM32_Init.c  ****   if (__RTC_INTERRUPTS) {                                       // RTC interrupts used
4196:STM32_Init.c  ****     RTC->CRH = __RTC_CRH;                                       // enable RTC interrupts
 230              		.loc 1 4196 0
 231 0120 4FF00102 		mov	r2, #1	@ movhi
 232 0124 0A80     		strh	r2, [r1, #0]	@ movhi
4197:STM32_Init.c  ****     NVIC->ISER[0] |= (1 << (RTC_IRQChannel & 0x1F));            // enable interrupt
 233              		.loc 1 4197 0
 234 0126 4EF20012 		movw	r2, #:lower16:-536813312
 235 012a CEF20002 		movt	r2, #:upper16:-536813312
 236 012e 1368     		ldr	r3, [r2, #0]
 237 0130 43F00803 		orr	r3, r3, #8
 238 0134 1360     		str	r3, [r2, #0]
4198:STM32_Init.c  ****   }
4199:STM32_Init.c  ****   RTC->CRL  &= ~RTC_CRL_CNF;                                    // reset configuration mode
 239              		.loc 1 4199 0
 240 0136 8B88     		ldrh	r3, [r1, #4]
 241 0138 23F01003 		bic	r3, r3, #16
 242 013c 4FEA0343 		lsl	r3, r3, #16
 243 0140 4FEA1343 		lsr	r3, r3, #16
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 79


 244 0144 8B80     		strh	r3, [r1, #4]	@ movhi
4200:STM32_Init.c  ****   while ((RTC->CRL & RTC_CRL_RTOFF) == 0);                      // wait until write is finished
 245              		.loc 1 4200 0
 246 0146 0A46     		mov	r2, r1
 247              	.L21:
 248 0148 9388     		ldrh	r3, [r2, #4]
 249 014a 13F0200F 		tst	r3, #32
 250 014e FBD0     		beq	.L21
4201:STM32_Init.c  **** 
4202:STM32_Init.c  ****   PWR->CR   &= ~PWR_CR_DBP;                                     // disable access to RTC registers
 251              		.loc 1 4202 0
 252 0150 47F20002 		movw	r2, #:lower16:1073770496
 253 0154 C4F20002 		movt	r2, #:upper16:1073770496
 254 0158 1368     		ldr	r3, [r2, #0]
 255 015a 23F48073 		bic	r3, r3, #256
 256 015e 1360     		str	r3, [r2, #0]
4203:STM32_Init.c  **** } // end of stm32_RtcSetup
 257              		.loc 1 4203 0
 258 0160 7047     		bx	lr
 259              	.LFE7:
 260              		.size	stm32_RtcSetup, .-stm32_RtcSetup
 261 0162 00BF     		.align	2
 262              		.global	stm32_TimerSetup
 263              		.thumb
 264              		.thumb_func
 265              		.type	stm32_TimerSetup, %function
 266              	stm32_TimerSetup:
 267              	.LFB8:
4204:STM32_Init.c  **** 
4205:STM32_Init.c  **** 
4206:STM32_Init.c  **** /*----------------------------------------------------------------------------
4207:STM32_Init.c  ****  STM32 Timer setup.
4208:STM32_Init.c  ****  initializes the Timer register
4209:STM32_Init.c  ****  *----------------------------------------------------------------------------*/
4210:STM32_Init.c  **** void stm32_TimerSetup (void) {
 268              		.loc 1 4210 0
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271              		@ link register save eliminated.
4211:STM32_Init.c  ****   
4212:STM32_Init.c  ****   if (__TIMER_USED & 0x01) {                                // TIM1 used
4213:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_TIM1EN;                     // enable clock for TIM1
4214:STM32_Init.c  **** 
4215:STM32_Init.c  ****     TIM1->PSC = __PSC(__TIM1CLK, __TIM1_PERIOD);            // set prescaler
4216:STM32_Init.c  ****     TIM1->ARR = __ARR(__TIM1CLK, __TIM1_PERIOD);            // set auto-reload
4217:STM32_Init.c  ****     TIM1->RCR = __TIM1_RCR;                                 // set repetition counter
4218:STM32_Init.c  **** 
4219:STM32_Init.c  ****     TIM1->CR1 = 0;                                          // reset command register 1
4220:STM32_Init.c  ****     TIM1->CR2 = 0;                                          // reset command register 2
4221:STM32_Init.c  **** 
4222:STM32_Init.c  ****     if (__TIMER_DETAILS & 0x01) {                           // detailed settings used
4223:STM32_Init.c  ****       TIM1->PSC = __TIM1_PSC;                               // set prescaler
4224:STM32_Init.c  ****       TIM1->ARR = __TIM1_ARR;                               // set auto-reload
4225:STM32_Init.c  **** 
4226:STM32_Init.c  ****       TIM1->CCR1  = __TIM1_CCR1;                            //
4227:STM32_Init.c  ****       TIM1->CCR2  = __TIM1_CCR2;                            //
4228:STM32_Init.c  ****       TIM1->CCR3  = __TIM1_CCR3;                            //
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 80


4229:STM32_Init.c  ****       TIM1->CCR4  = __TIM1_CCR4;                            //
4230:STM32_Init.c  ****       TIM1->CCMR1 = __TIM1_CCMR1;                           //
4231:STM32_Init.c  ****       TIM1->CCMR2 = __TIM1_CCMR2;                           //
4232:STM32_Init.c  ****       TIM1->CCER  = __TIM1_CCER;                            // set capture/compare enable register
4233:STM32_Init.c  ****       TIM1->SMCR  = __TIM1_SMCR;                            // set slave mode control register
4234:STM32_Init.c  **** 
4235:STM32_Init.c  ****       TIM1->CR1 = __TIM1_CR1;                               // set command register 1
4236:STM32_Init.c  ****       TIM1->CR2 = __TIM1_CR2;                               // set command register 2
4237:STM32_Init.c  ****     }
4238:STM32_Init.c  **** 
4239:STM32_Init.c  ****     if (__TIMER_INTERRUPTS & 0x01) {                        // interrupts used
4240:STM32_Init.c  ****       TIM1->DIER = __TIM1_DIER;                             // enable interrupt
4241:STM32_Init.c  ****       NVIC->ISER[0] |= (1 << (TIM1_UP_IRQChannel & 0x1F));  // enable interrupt
4242:STM32_Init.c  ****     }
4243:STM32_Init.c  **** 
4244:STM32_Init.c  ****     TIM1->CR1 |= TIMX_CR1_CEN;                              // enable timer
4245:STM32_Init.c  ****   } // end TIM1 used
4246:STM32_Init.c  **** 
4247:STM32_Init.c  ****   if (__TIMER_USED & 0x02) {                                // TIM2 used
4248:STM32_Init.c  ****     RCC->APB1ENR |= RCC_APB1ENR_TIM2EN;                     // enable clock for TIM2
4249:STM32_Init.c  **** 
4250:STM32_Init.c  ****     TIM2->PSC = __PSC(__TIMXCLK, __TIM2_PERIOD);            // set prescaler
4251:STM32_Init.c  ****     TIM2->ARR = __ARR(__TIMXCLK, __TIM2_PERIOD);            // set auto-reload
4252:STM32_Init.c  **** 
4253:STM32_Init.c  ****     TIM2->CR1 = 0;                                          // reset command register 1
4254:STM32_Init.c  ****     TIM2->CR2 = 0;                                          // reset command register 2
4255:STM32_Init.c  **** 
4256:STM32_Init.c  ****     if (__TIMER_DETAILS & 0x02) {                           // detailed settings used
4257:STM32_Init.c  ****       TIM2->PSC = __TIM2_PSC;                               // set prescaler
4258:STM32_Init.c  ****       TIM2->ARR = __TIM2_ARR;                               // set auto-reload
4259:STM32_Init.c  **** 
4260:STM32_Init.c  ****       TIM2->CCR1  = __TIM2_CCR1;                            //
4261:STM32_Init.c  ****       TIM2->CCR2  = __TIM2_CCR2;                            //
4262:STM32_Init.c  ****       TIM2->CCR3  = __TIM2_CCR3;                            //
4263:STM32_Init.c  ****       TIM2->CCR4  = __TIM2_CCR4;                            //
4264:STM32_Init.c  ****       TIM2->CCMR1 = __TIM2_CCMR1;                           //
4265:STM32_Init.c  ****       TIM2->CCMR2 = __TIM2_CCMR2;                           //
4266:STM32_Init.c  ****       TIM2->CCER  = __TIM2_CCER;                            // set capture/compare enable register
4267:STM32_Init.c  ****       TIM2->SMCR  = __TIM2_SMCR;                            // set slave mode control register
4268:STM32_Init.c  **** 
4269:STM32_Init.c  ****       TIM2->CR1 = __TIM2_CR1;                               // set command register 1
4270:STM32_Init.c  ****       TIM2->CR2 = __TIM2_CR2;                               // set command register 2
4271:STM32_Init.c  ****     }
4272:STM32_Init.c  **** 
4273:STM32_Init.c  ****     if (__TIMER_INTERRUPTS & 0x02) {                        // interrupts used
4274:STM32_Init.c  ****       TIM2->DIER = __TIM2_DIER;                             // enable interrupt
4275:STM32_Init.c  ****       NVIC->ISER[0] |= (1 << (TIM2_IRQChannel & 0x1F));     // enable interrupt
4276:STM32_Init.c  ****     }
4277:STM32_Init.c  **** 
4278:STM32_Init.c  ****     TIM2->CR1 |= TIMX_CR1_CEN;                              // enable timer
4279:STM32_Init.c  ****   } // end TIM2 used
4280:STM32_Init.c  **** 
4281:STM32_Init.c  ****   if (__TIMER_USED & 0x04) {                                // TIM3 used
4282:STM32_Init.c  ****     RCC->APB1ENR |= RCC_APB1ENR_TIM3EN;                     // enable clock for TIM3
4283:STM32_Init.c  **** 
4284:STM32_Init.c  ****     TIM3->PSC = __PSC(__TIMXCLK, __TIM3_PERIOD);            // set prescaler
4285:STM32_Init.c  ****     TIM3->ARR = __ARR(__TIMXCLK, __TIM3_PERIOD);            // set auto-reload
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 81


4286:STM32_Init.c  **** 
4287:STM32_Init.c  ****     TIM3->CR1 = 0;                                          // reset command register 1
4288:STM32_Init.c  ****     TIM3->CR2 = 0;                                          // reset command register 2
4289:STM32_Init.c  **** 
4290:STM32_Init.c  ****     if (__TIMER_DETAILS & 0x04) {                           // detailed settings used
4291:STM32_Init.c  ****       TIM3->PSC = __TIM3_PSC;                               // set prescaler
4292:STM32_Init.c  ****       TIM3->ARR = __TIM3_ARR;                               // set auto-reload
4293:STM32_Init.c  **** 
4294:STM32_Init.c  ****       TIM3->CCR1  = __TIM3_CCR1;                            //
4295:STM32_Init.c  ****       TIM3->CCR2  = __TIM3_CCR2;                            //
4296:STM32_Init.c  ****       TIM3->CCR3  = __TIM3_CCR3;                            //
4297:STM32_Init.c  ****       TIM3->CCR4  = __TIM3_CCR4;                            //
4298:STM32_Init.c  ****       TIM3->CCMR1 = __TIM3_CCMR1;                           //
4299:STM32_Init.c  ****       TIM3->CCMR2 = __TIM3_CCMR2;                           //
4300:STM32_Init.c  ****       TIM3->CCER  = __TIM3_CCER;                            // set capture/compare enable register
4301:STM32_Init.c  ****       TIM3->SMCR  = __TIM3_SMCR;                            // set slave mode control register
4302:STM32_Init.c  **** 
4303:STM32_Init.c  ****       TIM3->CR1 = __TIM3_CR1;                               // set command register 1
4304:STM32_Init.c  ****       TIM3->CR2 = __TIM3_CR2;                               // set command register 2
4305:STM32_Init.c  ****     }
4306:STM32_Init.c  **** 
4307:STM32_Init.c  ****     if (__TIMER_INTERRUPTS & 0x04) {                        // interrupts used
4308:STM32_Init.c  ****       TIM3->DIER = __TIM3_DIER;                             // enable interrupt
4309:STM32_Init.c  ****       NVIC->ISER[0] |= (1 << (TIM3_IRQChannel & 0x1F));     // enable interrupt
4310:STM32_Init.c  ****     }
4311:STM32_Init.c  **** 
4312:STM32_Init.c  ****     TIM3->CR1 |= TIMX_CR1_CEN;                              // enable timer
4313:STM32_Init.c  ****   } // end TIM3 used
4314:STM32_Init.c  **** 
4315:STM32_Init.c  ****   if (__TIMER_USED & 0x08) {                                // TIM4 used
4316:STM32_Init.c  ****     RCC->APB1ENR |= RCC_APB1ENR_TIM4EN;                     // enable clock for TIM4
4317:STM32_Init.c  **** 
4318:STM32_Init.c  ****     TIM4->PSC = __PSC(__TIMXCLK, __TIM4_PERIOD);            // set prescaler
4319:STM32_Init.c  ****     TIM4->ARR = __ARR(__TIMXCLK, __TIM4_PERIOD);            // set auto-reload
4320:STM32_Init.c  **** 
4321:STM32_Init.c  ****     TIM4->CR1 = 0;                                          // reset command register 1
4322:STM32_Init.c  ****     TIM4->CR2 = 0;                                          // reset command register 2
4323:STM32_Init.c  **** 
4324:STM32_Init.c  ****     if (__TIMER_DETAILS & 0x08) {                           // detailed settings used
4325:STM32_Init.c  ****       TIM4->PSC = __TIM4_PSC;                               // set prescaler
4326:STM32_Init.c  ****       TIM4->ARR = __TIM4_ARR;                               // set auto-reload
4327:STM32_Init.c  **** 
4328:STM32_Init.c  ****       TIM4->CCR1  = __TIM4_CCR1;                            //
4329:STM32_Init.c  ****       TIM4->CCR2  = __TIM4_CCR2;                            //
4330:STM32_Init.c  ****       TIM4->CCR3  = __TIM4_CCR3;                            //
4331:STM32_Init.c  ****       TIM4->CCR4  = __TIM4_CCR4;                            //
4332:STM32_Init.c  ****       TIM4->CCMR1 = __TIM4_CCMR1;                           //
4333:STM32_Init.c  ****       TIM4->CCMR2 = __TIM4_CCMR2;                           //
4334:STM32_Init.c  ****       TIM4->CCER  = __TIM4_CCER;                            // set capture/compare enable register
4335:STM32_Init.c  ****       TIM4->SMCR  = __TIM4_SMCR;                            // set slave mode control register
4336:STM32_Init.c  **** 
4337:STM32_Init.c  ****       TIM4->CR1 = __TIM4_CR1;                               // set command register 1
4338:STM32_Init.c  ****       TIM4->CR2 = __TIM4_CR2;                               // set command register 2
4339:STM32_Init.c  ****     }
4340:STM32_Init.c  **** 
4341:STM32_Init.c  ****     if (__TIMER_INTERRUPTS & 0x08) {                        // interrupts used
4342:STM32_Init.c  ****       TIM4->DIER = __TIM4_DIER;                             // enable interrupt
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 82


4343:STM32_Init.c  ****       NVIC->ISER[0] |= (1 << (TIM4_IRQChannel & 0x1F));     // enable interrupt
4344:STM32_Init.c  ****     }
4345:STM32_Init.c  **** 
4346:STM32_Init.c  ****     TIM4->CR1 |= TIMX_CR1_CEN;                              // enable timer
4347:STM32_Init.c  ****   } // end TIM4 used
4348:STM32_Init.c  **** 
4349:STM32_Init.c  **** } // end of stm32_TimSetup
 272              		.loc 1 4349 0
 273 0164 7047     		bx	lr
 274              	.LFE8:
 275              		.size	stm32_TimerSetup, .-stm32_TimerSetup
 276 0166 00BF     		.align	2
 277              		.global	stm32_GpioSetup
 278              		.thumb
 279              		.thumb_func
 280              		.type	stm32_GpioSetup, %function
 281              	stm32_GpioSetup:
 282              	.LFB9:
4350:STM32_Init.c  **** 
4351:STM32_Init.c  **** 
4352:STM32_Init.c  **** /*----------------------------------------------------------------------------
4353:STM32_Init.c  ****  STM32 GPIO setup.
4354:STM32_Init.c  ****  initializes the GPIOx_CRL and GPIOxCRH register
4355:STM32_Init.c  ****  *----------------------------------------------------------------------------*/
4356:STM32_Init.c  **** void stm32_GpioSetup (void) {
 283              		.loc 1 4356 0
 284              		@ args = 0, pretend = 0, frame = 0
 285              		@ frame_needed = 0, uses_anonymous_args = 0
 286              		@ link register save eliminated.
4357:STM32_Init.c  ****   
4358:STM32_Init.c  ****   if (__GPIO_USED & 0x01) {                        // GPIO Port A used
4359:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;            // enable clock for GPIOA
 287              		.loc 1 4359 0
 288 0168 41F20002 		movw	r2, #:lower16:1073876992
 289 016c C4F20202 		movt	r2, #:upper16:1073876992
 290 0170 9369     		ldr	r3, [r2, #24]
 291 0172 43F00403 		orr	r3, r3, #4
 292 0176 9361     		str	r3, [r2, #24]
4360:STM32_Init.c  ****     GPIOA->CRL = __GPIOA_CRL;                      // set Port configuration register low
 293              		.loc 1 4360 0
 294 0178 40F60003 		movw	r3, #:lower16:1073809408
 295 017c C4F20103 		movt	r3, #:upper16:1073809408
 296 0180 4FF00001 		mov	r1, #0
 297 0184 1960     		str	r1, [r3, #0]
4361:STM32_Init.c  ****     GPIOA->CRH = __GPIOA_CRH;                      // set Port configuration register high
 298              		.loc 1 4361 0
 299 0186 5960     		str	r1, [r3, #4]
4362:STM32_Init.c  ****   }
4363:STM32_Init.c  **** 
4364:STM32_Init.c  ****   if (__GPIO_USED & 0x02) {                        // GPIO Port B used
4365:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_IOPBEN;            // enable clock for GPIOB
 300              		.loc 1 4365 0
 301 0188 9369     		ldr	r3, [r2, #24]
 302 018a 43F00803 		orr	r3, r3, #8
 303 018e 9361     		str	r3, [r2, #24]
4366:STM32_Init.c  ****     GPIOB->CRL = __GPIOB_CRL;                      // set Port configuration register low
 304              		.loc 1 4366 0
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 83


 305 0190 40F60043 		movw	r3, #:lower16:1073810432
 306 0194 C4F20103 		movt	r3, #:upper16:1073810432
 307 0198 1960     		str	r1, [r3, #0]
4367:STM32_Init.c  ****     GPIOB->CRH = __GPIOB_CRH;                      // set Port configuration register high
 308              		.loc 1 4367 0
 309 019a 4FF03332 		mov	r2, #858993459
 310 019e 5A60     		str	r2, [r3, #4]
4368:STM32_Init.c  ****   }
4369:STM32_Init.c  **** 
4370:STM32_Init.c  ****   if (__GPIO_USED & 0x04) {                        // GPIO Port C used
4371:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_IOPCEN;            // enable clock for GPIOC
4372:STM32_Init.c  ****     GPIOC->CRL = __GPIOC_CRL;                      // set Port configuration register low
4373:STM32_Init.c  ****     GPIOC->CRH = __GPIOC_CRH;                      // set Port configuration register high
4374:STM32_Init.c  ****   }
4375:STM32_Init.c  **** 
4376:STM32_Init.c  ****   if (__GPIO_USED & 0x08) {                        // GPIO Port D used
4377:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_IOPDEN;            // enable clock for GPIOD
4378:STM32_Init.c  ****     GPIOD->CRL = __GPIOD_CRL;                      // set Port configuration register low
4379:STM32_Init.c  ****     GPIOD->CRH = __GPIOD_CRH;                      // set Port configuration register high
4380:STM32_Init.c  ****   }
4381:STM32_Init.c  **** 
4382:STM32_Init.c  ****   if (__GPIO_USED & 0x10) {                        // GPIO Port E used
4383:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_IOPEEN;            // enable clock for GPIOE
4384:STM32_Init.c  ****     GPIOE->CRL = __GPIOE_CRL;                      // set Port configuration register low
4385:STM32_Init.c  ****     GPIOE->CRH = __GPIOE_CRH;                      // set Port configuration register high
4386:STM32_Init.c  ****   }
4387:STM32_Init.c  **** 
4388:STM32_Init.c  **** } // end of stm32_GpioSetup
 311              		.loc 1 4388 0
 312 01a0 7047     		bx	lr
 313              	.LFE9:
 314              		.size	stm32_GpioSetup, .-stm32_GpioSetup
 315 01a2 00BF     		.align	2
 316              		.global	stm32_UsartSetup
 317              		.thumb
 318              		.thumb_func
 319              		.type	stm32_UsartSetup, %function
 320              	stm32_UsartSetup:
 321              	.LFB10:
4389:STM32_Init.c  **** 
4390:STM32_Init.c  **** 
4391:STM32_Init.c  **** /*----------------------------------------------------------------------------
4392:STM32_Init.c  ****  STM32 USART setup.
4393:STM32_Init.c  ****  initializes the USARTx register
4394:STM32_Init.c  ****  *----------------------------------------------------------------------------*/
4395:STM32_Init.c  **** void stm32_UsartSetup (void) {
 322              		.loc 1 4395 0
 323              		@ args = 0, pretend = 0, frame = 0
 324              		@ frame_needed = 0, uses_anonymous_args = 0
 325              		@ link register save eliminated.
4396:STM32_Init.c  ****                                                     
4397:STM32_Init.c  ****   if (__USART_USED & 0x01) {                                // USART1 used
4398:STM32_Init.c  **** 
4399:STM32_Init.c  ****     AFIO->MAPR   &= ~(1 << 2);                              // clear USART1 remap
 326              		.loc 1 4399 0
 327 01a4 40F20002 		movw	r2, #:lower16:1073807360
 328 01a8 C4F20102 		movt	r2, #:upper16:1073807360
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 84


 329 01ac 5368     		ldr	r3, [r2, #4]
 330 01ae 23F00403 		bic	r3, r3, #4
 331 01b2 5360     		str	r3, [r2, #4]
4400:STM32_Init.c  ****     if      ((__USART1_REMAP & 0x04) == 0x00) {             // USART1 no remap
4401:STM32_Init.c  ****       RCC->APB2ENR |= RCC_APB2ENR_IOPAEN;                   // enable clock for GPIOA
 332              		.loc 1 4401 0
 333 01b4 41F20001 		movw	r1, #:lower16:1073876992
 334 01b8 C4F20201 		movt	r1, #:upper16:1073876992
 335 01bc 8B69     		ldr	r3, [r1, #24]
 336 01be 43F00403 		orr	r3, r3, #4
 337 01c2 8B61     		str	r3, [r1, #24]
4402:STM32_Init.c  ****       GPIOA->CRH   &= ~(0xFFUL  << 4);                      // Clear PA9, PA10
 338              		.loc 1 4402 0
 339 01c4 40F60002 		movw	r2, #:lower16:1073809408
 340 01c8 C4F20102 		movt	r2, #:upper16:1073809408
 341 01cc 5368     		ldr	r3, [r2, #4]
 342 01ce 23F47F63 		bic	r3, r3, #4080
 343 01d2 5360     		str	r3, [r2, #4]
4403:STM32_Init.c  ****       GPIOA->CRH   |=  (0x0BUL  << 4);                      // USART1 Tx (PA9)  alternate output pu
 344              		.loc 1 4403 0
 345 01d4 5368     		ldr	r3, [r2, #4]
 346 01d6 43F0B003 		orr	r3, r3, #176
 347 01da 5360     		str	r3, [r2, #4]
4404:STM32_Init.c  ****       GPIOA->CRH   |=  (0x04UL  << 8);                      // USART1 Rx (PA10) input floating
 348              		.loc 1 4404 0
 349 01dc 5368     		ldr	r3, [r2, #4]
 350 01de 43F48063 		orr	r3, r3, #1024
 351 01e2 5360     		str	r3, [r2, #4]
4405:STM32_Init.c  ****     }
4406:STM32_Init.c  ****     else {                                                  // USART1    remap
4407:STM32_Init.c  ****       RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;                   // enable clock for Alternate Function
4408:STM32_Init.c  ****       AFIO->MAPR   |= __USART1_REMAP;                       // set   USART1 remap
4409:STM32_Init.c  ****       RCC->APB2ENR |= RCC_APB2ENR_IOPBEN;                   // enable clock for GPIOB
4410:STM32_Init.c  ****       GPIOB->CRL   &= ~(0xFFUL  << 24);                     // Clear PB6, PB7
4411:STM32_Init.c  ****       GPIOB->CRL   |=  (0x0BUL  << 24);                     // USART1 Tx (PB6)  alternate output pu
4412:STM32_Init.c  ****       GPIOB->CRL   |=  (0x04UL  << 28);                     // USART1 Rx (PB7) input floating
4413:STM32_Init.c  ****     }
4414:STM32_Init.c  **** 
4415:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_USART1EN;                   // enable clock for USART1
 352              		.loc 1 4415 0
 353 01e4 8B69     		ldr	r3, [r1, #24]
 354 01e6 43F48043 		orr	r3, r3, #16384
 355 01ea 8B61     		str	r3, [r1, #24]
4416:STM32_Init.c  ****         
4417:STM32_Init.c  ****     USART1->BRR  = __USART_BRR(__PCLK2, __USART1_BAUDRATE); // set baudrate
 356              		.loc 1 4417 0
 357 01ec 43F60002 		movw	r2, #:lower16:1073821696
 358 01f0 C4F20102 		movt	r2, #:upper16:1073821696
 359 01f4 40F27123 		movw	r3, 625	@ movhi
 360 01f8 1381     		strh	r3, [r2, #8]	@ movhi
4418:STM32_Init.c  ****     USART1->CR1  = __USART1_DATABITS;                       // set Data bits
 361              		.loc 1 4418 0
 362 01fa 4FF00001 		mov	r1, #0
 363 01fe 9181     		strh	r1, [r2, #12]	@ movhi
4419:STM32_Init.c  ****     USART1->CR2  = __USART1_STOPBITS;                       // set Stop bits
 364              		.loc 1 4419 0
 365 0200 1182     		strh	r1, [r2, #16]	@ movhi
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 85


4420:STM32_Init.c  ****     USART1->CR1 |= __USART1_PARITY;                         // set Parity
 366              		.loc 1 4420 0
 367 0202 9389     		ldrh	r3, [r2, #12]
 368 0204 9BB2     		uxth	r3, r3
 369 0206 9381     		strh	r3, [r2, #12]	@ movhi
4421:STM32_Init.c  ****     USART1->CR3  = __USART1_FLOWCTRL;                       // Set Flow Control
 370              		.loc 1 4421 0
 371 0208 9182     		strh	r1, [r2, #20]	@ movhi
4422:STM32_Init.c  **** 
4423:STM32_Init.c  ****     USART1->CR1 |= (USART_CR1_RE | USART_CR1_TE);           // RX, TX enable
 372              		.loc 1 4423 0
 373 020a 9389     		ldrh	r3, [r2, #12]
 374 020c 9BB2     		uxth	r3, r3
 375 020e 43F00C03 		orr	r3, r3, #12
 376 0212 9381     		strh	r3, [r2, #12]	@ movhi
4424:STM32_Init.c  **** 
4425:STM32_Init.c  ****     if (__USART_INTERRUPTS & 0x01) {                        // interrupts used
4426:STM32_Init.c  ****       USART1->CR1 |= __USART1_CR1;
4427:STM32_Init.c  ****       USART1->CR2 |= __USART1_CR2;
4428:STM32_Init.c  ****       USART1->CR3 |= __USART1_CR3;
4429:STM32_Init.c  ****       NVIC->ISER[1] |= (1 << (USART1_IRQChannel & 0x1F));   // enable interrupt
4430:STM32_Init.c  ****     }
4431:STM32_Init.c  **** 
4432:STM32_Init.c  ****     USART1->CR1 |= USART_CR1_UE;                            // USART enable
 377              		.loc 1 4432 0
 378 0214 9389     		ldrh	r3, [r2, #12]
 379 0216 9BB2     		uxth	r3, r3
 380 0218 43F40053 		orr	r3, r3, #8192
 381 021c 9381     		strh	r3, [r2, #12]	@ movhi
4433:STM32_Init.c  ****   } // end USART1 used
4434:STM32_Init.c  **** 
4435:STM32_Init.c  ****   if (__USART_USED & 0x02) {                                // USART2 used
4436:STM32_Init.c  **** 
4437:STM32_Init.c  ****     AFIO->MAPR   &= ~(1 << 3);                              // clear USART2 remap
4438:STM32_Init.c  ****     if      ((__USART2_REMAP & 0x08) == 0x00) {             // USART2 no remap
4439:STM32_Init.c  ****       RCC->APB2ENR |=  RCC_APB2ENR_IOPAEN;                  // enable clock for GPIOA
4440:STM32_Init.c  ****       GPIOA->CRL   &= ~(0xFFUL  << 8);                      // Clear PA2, PA3
4441:STM32_Init.c  ****       GPIOA->CRL   |=  (0x0BUL  << 8);                      // USART2 Tx (PA2)  alternate output pu
4442:STM32_Init.c  ****       GPIOA->CRL   |=  (0x04UL  << 12);                     // USART2 Rx (PA3)  input floating
4443:STM32_Init.c  ****       if (__USART2_FLOWCTRL & 0x0300) {                     // HW flow control enabled
4444:STM32_Init.c  ****         GPIOA->CRL   &= ~(0xFFUL  << 0);                    // Clear PA0, PA1
4445:STM32_Init.c  ****         GPIOA->CRL   |=  (0x04UL  << 0);                    // USART2 CTS (PA0) input floating
4446:STM32_Init.c  ****         GPIOA->CRL   |=  (0x0BUL  << 4);                    // USART2 RTS (PA1) alternate output pu
4447:STM32_Init.c  ****       }
4448:STM32_Init.c  ****     }                                                
4449:STM32_Init.c  ****     else {                                                  // USART2    remap
4450:STM32_Init.c  ****       RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;                   // enable clock for Alternate Function
4451:STM32_Init.c  ****       AFIO->MAPR   |= __USART2_REMAP;                       // set   USART2 remap
4452:STM32_Init.c  ****       RCC->APB2ENR |=  RCC_APB2ENR_IOPDEN;                  // enable clock for GPIOD
4453:STM32_Init.c  ****       GPIOD->CRL   &= ~(0xFFUL  << 20);                     // Clear PD5, PD6
4454:STM32_Init.c  ****       GPIOD->CRL   |=  (0x0BUL  << 20);                     // USART2 Tx (PD5)  alternate output pu
4455:STM32_Init.c  ****       GPIOD->CRL   |=  (0x04UL  << 24);                     // USART2 Rx (PD6)  input floating
4456:STM32_Init.c  ****       if (__USART2_FLOWCTRL & 0x0300) {                     // HW flow control enabled
4457:STM32_Init.c  ****         GPIOD->CRL   &= ~(0xFFUL  << 12);                   // Clear PD3, PD4
4458:STM32_Init.c  ****         GPIOD->CRL   |=  (0x04UL  << 12);                   // USART2 CTS (PD3) input floating
4459:STM32_Init.c  ****         GPIOD->CRL   |=  (0x0BUL  << 16);                   // USART2 RTS (PD4) alternate output pu
4460:STM32_Init.c  ****       }
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 86


4461:STM32_Init.c  ****     }
4462:STM32_Init.c  **** 
4463:STM32_Init.c  ****     RCC->APB1ENR |= RCC_APB1ENR_USART2EN;                   // enable clock for USART2
4464:STM32_Init.c  **** 
4465:STM32_Init.c  ****     USART2->BRR  = __USART_BRR(__PCLK1, __USART2_BAUDRATE); // set baudrate
4466:STM32_Init.c  ****     USART2->CR1  = __USART2_DATABITS;                       // set Data bits
4467:STM32_Init.c  ****     USART2->CR2  = __USART2_STOPBITS;                       // set Stop bits
4468:STM32_Init.c  ****     USART2->CR1 |= __USART2_PARITY;                         // set Parity
4469:STM32_Init.c  ****     USART2->CR3  = __USART2_FLOWCTRL;                       // Set Flow Control
4470:STM32_Init.c  **** 
4471:STM32_Init.c  ****     USART2->CR1 |= (USART_CR1_RE | USART_CR1_TE);           // RX, TX enable
4472:STM32_Init.c  **** 
4473:STM32_Init.c  ****     if (__USART_INTERRUPTS & 0x02) {                        // interrupts used
4474:STM32_Init.c  ****       USART2->CR1 |= __USART2_CR1;
4475:STM32_Init.c  ****       USART2->CR2 |= __USART2_CR2;
4476:STM32_Init.c  ****       USART2->CR3 |= __USART2_CR3;
4477:STM32_Init.c  ****       NVIC->ISER[1] |= (1 << (USART2_IRQChannel & 0x1F));   // enable interrupt
4478:STM32_Init.c  ****     }
4479:STM32_Init.c  **** 
4480:STM32_Init.c  ****     USART2->CR1 |= USART_CR1_UE;                            // USART enable
4481:STM32_Init.c  ****   } // end USART2 used
4482:STM32_Init.c  **** 
4483:STM32_Init.c  ****   if (__USART_USED & 0x04) {                                // USART3 used
4484:STM32_Init.c  **** 
4485:STM32_Init.c  ****     AFIO->MAPR   &= ~(3 << 4);                              // clear USART3 remap
4486:STM32_Init.c  ****     if      ((__USART3_REMAP & 0x30) == 0x00) {             // USART3 no remap
4487:STM32_Init.c  ****       RCC->APB2ENR |=  RCC_APB2ENR_IOPBEN;                  // enable clock for GPIOB
4488:STM32_Init.c  ****       GPIOB->CRH   &= ~(0xFFUL  <<  8);                     // Clear PB10, PB11
4489:STM32_Init.c  ****       GPIOB->CRH   |=  (0x0BUL  <<  8);                     // USART3 Tx (PB10) alternate output pu
4490:STM32_Init.c  ****       GPIOB->CRH   |=  (0x04UL  << 12);                     // USART3 Rx (PB11) input floating
4491:STM32_Init.c  ****       if (__USART3_FLOWCTRL & 0x0300) {                     // HW flow control enabled
4492:STM32_Init.c  ****         GPIOB->CRH   &= ~(0xFFUL  << 20);                   // Clear PB13, PB14
4493:STM32_Init.c  ****         GPIOB->CRH   |=  (0x04UL  << 20);                   // USART3 CTS (PB13) input floating
4494:STM32_Init.c  ****         GPIOB->CRH   |=  (0x0BUL  << 24);                   // USART3 RTS (PB14) alternate output p
4495:STM32_Init.c  ****       }
4496:STM32_Init.c  ****     }
4497:STM32_Init.c  ****     else if ((__USART3_REMAP & 0x30) == 0x10) {             // USART3 partial remap
4498:STM32_Init.c  ****       RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;                   // enable clock for Alternate Function
4499:STM32_Init.c  ****       AFIO->MAPR   |= __USART3_REMAP;                       // set   USART3 remap
4500:STM32_Init.c  ****       RCC->APB2ENR |=  RCC_APB2ENR_IOPCEN;                  // enable clock for GPIOC
4501:STM32_Init.c  ****       GPIOC->CRH   &= ~(0xFFUL  <<  8);                     // Clear PC10, PC11
4502:STM32_Init.c  ****       GPIOC->CRH   |=  (0x0BUL  <<  8);                     // USART3 Tx (PC10) alternate output pu
4503:STM32_Init.c  ****       GPIOC->CRH   |=  (0x04UL  << 12);                     // USART3 Rx (PC11) input floating
4504:STM32_Init.c  ****       if (__USART3_FLOWCTRL & 0x0300) {                     // HW flow control enabled
4505:STM32_Init.c  ****         RCC->APB2ENR |=  RCC_APB2ENR_IOPBEN;                // enable clock for GPIOB
4506:STM32_Init.c  ****         GPIOB->CRH   &= ~(0xFFUL  << 20);                   // Clear PB13, PB14
4507:STM32_Init.c  ****         GPIOB->CRH   |=  (0x04UL  << 20);                   // USART3 CTS (PB13) input floating
4508:STM32_Init.c  ****         GPIOB->CRH   |=  (0x0BUL  << 24);                   // USART3 RTS (PB14) alternate output p
4509:STM32_Init.c  ****       }
4510:STM32_Init.c  ****     }
4511:STM32_Init.c  ****     else {                                                  // USART3 full remap
4512:STM32_Init.c  ****       RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;                   // enable clock for Alternate Function
4513:STM32_Init.c  ****       AFIO->MAPR   |= __USART3_REMAP;                       // set   USART3 remap
4514:STM32_Init.c  ****       RCC->APB2ENR |=  RCC_APB2ENR_IOPDEN;                  // enable clock for GPIOD
4515:STM32_Init.c  ****       GPIOD->CRH   &= ~(0xFFUL  <<  0);                     // Clear PD8, PD9
4516:STM32_Init.c  ****       GPIOD->CRH   |=  (0x0BUL  <<  0);                     // USART3 Tx (PD8) alternate output pus
4517:STM32_Init.c  ****       GPIOD->CRH   |=  (0x04UL  <<  4);                     // USART3 Rx (PD9) input floating
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 87


4518:STM32_Init.c  ****       if (__USART3_FLOWCTRL & 0x0300) {                     // HW flow control enabled
4519:STM32_Init.c  ****         GPIOD->CRH   &= ~(0xFFUL  << 12);                   // Clear PD11, PD12
4520:STM32_Init.c  ****         GPIOD->CRH   |=  (0x04UL  << 12);                   // USART3 CTS (PD11) input floating
4521:STM32_Init.c  ****         GPIOD->CRH   |=  (0x0BUL  << 16);                   // USART3 RTS (PD12) alternate output p
4522:STM32_Init.c  ****       }
4523:STM32_Init.c  ****     } 
4524:STM32_Init.c  **** 
4525:STM32_Init.c  ****     RCC->APB1ENR |= RCC_APB1ENR_USART3EN;                   // enable clock for USART3
4526:STM32_Init.c  **** 
4527:STM32_Init.c  ****     USART3->BRR  = __USART_BRR(__PCLK1, __USART3_BAUDRATE); // set baudrate
4528:STM32_Init.c  ****     USART3->CR1  = __USART3_DATABITS;                       // set Data bits
4529:STM32_Init.c  ****     USART3->CR2  = __USART3_STOPBITS;                       // set Stop bits
4530:STM32_Init.c  ****     USART3->CR1 |= __USART3_PARITY;                         // set Parity
4531:STM32_Init.c  ****     USART3->CR3  = __USART3_FLOWCTRL;                       // Set Flow Control
4532:STM32_Init.c  **** 
4533:STM32_Init.c  ****     USART3->CR1 |= (USART_CR1_RE | USART_CR1_TE);           // RX, TX enable
4534:STM32_Init.c  **** 
4535:STM32_Init.c  ****     if (__USART_INTERRUPTS & 0x04) {                        // interrupts used
4536:STM32_Init.c  ****       USART3->CR1 |= __USART3_CR1;
4537:STM32_Init.c  ****       USART3->CR2 |= __USART3_CR2;
4538:STM32_Init.c  ****       USART3->CR3 |= __USART3_CR3;
4539:STM32_Init.c  ****       NVIC->ISER[1] |= (1 << (USART3_IRQChannel & 0x1F));   // enable interrupt
4540:STM32_Init.c  ****     }
4541:STM32_Init.c  **** 
4542:STM32_Init.c  ****     USART3->CR1 |= USART_CR1_UE;                            // USART enable
4543:STM32_Init.c  ****   } // end USART3 used
4544:STM32_Init.c  **** 
4545:STM32_Init.c  **** 
4546:STM32_Init.c  **** } // end of stm32_UsartSetup
 382              		.loc 1 4546 0
 383 021e 7047     		bx	lr
 384              	.LFE10:
 385              		.size	stm32_UsartSetup, .-stm32_UsartSetup
 386              		.align	2
 387              		.global	stm32_ExtiSetup
 388              		.thumb
 389              		.thumb_func
 390              		.type	stm32_ExtiSetup, %function
 391              	stm32_ExtiSetup:
 392              	.LFB11:
4547:STM32_Init.c  **** 
4548:STM32_Init.c  **** 
4549:STM32_Init.c  **** 
4550:STM32_Init.c  **** /*----------------------------------------------------------------------------
4551:STM32_Init.c  ****  STM32 EXTI setup.
4552:STM32_Init.c  ****  initializes the EXTI register
4553:STM32_Init.c  ****  *----------------------------------------------------------------------------*/
4554:STM32_Init.c  **** void stm32_ExtiSetup (void) {
 393              		.loc 1 4554 0
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 0, uses_anonymous_args = 0
 396              		@ link register save eliminated.
4555:STM32_Init.c  ****                                                     
4556:STM32_Init.c  ****   if (__EXTI_USED & (1 << 0)) {                             // EXTI0 used
4557:STM32_Init.c  **** 
4558:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;                     // enable clock for Alternate Function
4559:STM32_Init.c  ****     AFIO->EXTICR[0] &= 0xFFF0;                              // clear used pin
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 88


4560:STM32_Init.c  ****     AFIO->EXTICR[0] |= (0x000F & __AFIO_EXTICR1);           // set pin to use
4561:STM32_Init.c  **** 
4562:STM32_Init.c  ****     EXTI->IMR       |= ((1 << 0) & __EXTI_IMR);             // unmask interrupt
4563:STM32_Init.c  ****     EXTI->EMR       |= ((1 << 0) & __EXTI_EMR);             // unmask event
4564:STM32_Init.c  ****     EXTI->RTSR      |= ((1 << 0) & __EXTI_RTSR);            // set rising edge
4565:STM32_Init.c  ****     EXTI->FTSR      |= ((1 << 0) & __EXTI_FTSR);            // set falling edge
4566:STM32_Init.c  **** 
4567:STM32_Init.c  ****     if (__EXTI_INTERRUPTS & (1 << 0)) {                     // interrupt used
4568:STM32_Init.c  ****       NVIC->ISER[0] |= (1 << (EXTI0_IRQChannel & 0x1F));    // enable interrupt EXTI 0
4569:STM32_Init.c  ****     }
4570:STM32_Init.c  ****   } // end EXTI0 used
4571:STM32_Init.c  **** 
4572:STM32_Init.c  ****   if (__EXTI_USED & (1 << 1)) {                             // EXTI1 used
4573:STM32_Init.c  **** 
4574:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;                     // enable clock for Alternate Function
4575:STM32_Init.c  ****     AFIO->EXTICR[0] &= 0xFF0F;                              // clear used pin
4576:STM32_Init.c  ****     AFIO->EXTICR[0] |= (0x00F0 & __AFIO_EXTICR1);           // set pin to use
4577:STM32_Init.c  **** 
4578:STM32_Init.c  ****     EXTI->IMR       |= ((1 << 1) & __EXTI_IMR);             // unmask interrupt
4579:STM32_Init.c  ****     EXTI->EMR       |= ((1 << 1) & __EXTI_EMR);             // unmask event
4580:STM32_Init.c  ****     EXTI->RTSR      |= ((1 << 1) & __EXTI_RTSR);            // set rising edge
4581:STM32_Init.c  ****     EXTI->FTSR      |= ((1 << 1) & __EXTI_FTSR);            // set falling edge
4582:STM32_Init.c  **** 
4583:STM32_Init.c  ****     if (__EXTI_INTERRUPTS & (1 << 1)) {                     // interrupt used
4584:STM32_Init.c  ****       NVIC->ISER[0] |= (1 << (EXTI1_IRQChannel & 0x1F));    // enable interrupt EXTI 1
4585:STM32_Init.c  ****     }
4586:STM32_Init.c  ****   } // end EXTI1 used
4587:STM32_Init.c  **** 
4588:STM32_Init.c  ****   if (__EXTI_USED & (1 << 2)) {                             // EXTI2 used
4589:STM32_Init.c  **** 
4590:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;                     // enable clock for Alternate Function
4591:STM32_Init.c  ****     AFIO->EXTICR[0] &= 0xF0FF;                              // clear used pin
4592:STM32_Init.c  ****     AFIO->EXTICR[0] |= (0x0F00 & __AFIO_EXTICR1);           // set pin to use
4593:STM32_Init.c  **** 
4594:STM32_Init.c  ****     EXTI->IMR       |= ((1 << 2) & __EXTI_IMR);             // unmask interrupt
4595:STM32_Init.c  ****     EXTI->EMR       |= ((1 << 2) & __EXTI_EMR);             // unmask event
4596:STM32_Init.c  ****     EXTI->RTSR      |= ((1 << 2) & __EXTI_RTSR);            // set rising edge
4597:STM32_Init.c  ****     EXTI->FTSR      |= ((1 << 2) & __EXTI_FTSR);            // set falling edge
4598:STM32_Init.c  **** 
4599:STM32_Init.c  ****     if (__EXTI_INTERRUPTS & (1 << 2)) {                     // interrupt used
4600:STM32_Init.c  ****       NVIC->ISER[0] |= (1 << (EXTI2_IRQChannel & 0x1F));    // enable interrupt EXTI 2
4601:STM32_Init.c  ****     }
4602:STM32_Init.c  ****   } // end EXTI2 used
4603:STM32_Init.c  **** 
4604:STM32_Init.c  ****   if (__EXTI_USED & (1 << 3)) {                             // EXTI3 used
4605:STM32_Init.c  **** 
4606:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;                     // enable clock for Alternate Function
4607:STM32_Init.c  ****     AFIO->EXTICR[0] &= 0x0FFF;                              // clear used pin
4608:STM32_Init.c  ****     AFIO->EXTICR[0] |= (0xFF00 & __AFIO_EXTICR1);           // set pin to use
4609:STM32_Init.c  **** 
4610:STM32_Init.c  ****     EXTI->IMR       |= ((1 << 3) & __EXTI_IMR);             // unmask interrupt
4611:STM32_Init.c  ****     EXTI->EMR       |= ((1 << 3) & __EXTI_EMR);             // unmask event
4612:STM32_Init.c  ****     EXTI->RTSR      |= ((1 << 3) & __EXTI_RTSR);            // set rising edge
4613:STM32_Init.c  ****     EXTI->FTSR      |= ((1 << 3) & __EXTI_FTSR);            // set falling edge
4614:STM32_Init.c  **** 
4615:STM32_Init.c  ****     if (__EXTI_INTERRUPTS & (1 << 3)) {                     // interrupt used
4616:STM32_Init.c  ****       NVIC->ISER[0] |= (1 << (EXTI3_IRQChannel & 0x1F));    // enable interrupt EXTI 3
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 89


4617:STM32_Init.c  ****     }
4618:STM32_Init.c  ****   } // end EXTI3 used
4619:STM32_Init.c  **** 
4620:STM32_Init.c  ****   if (__EXTI_USED & (1 << 4)) {                             // EXTI4 used
4621:STM32_Init.c  **** 
4622:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;                     // enable clock for Alternate Function
4623:STM32_Init.c  ****     AFIO->EXTICR[1] &= 0xFFF0;                              // clear used pin
4624:STM32_Init.c  ****     AFIO->EXTICR[1] |= (0x000F & __AFIO_EXTICR2);           // set pin to use
4625:STM32_Init.c  **** 
4626:STM32_Init.c  ****     EXTI->IMR       |= ((1 << 4) & __EXTI_IMR);             // unmask interrupt
4627:STM32_Init.c  ****     EXTI->EMR       |= ((1 << 4) & __EXTI_EMR);             // unmask event
4628:STM32_Init.c  ****     EXTI->RTSR      |= ((1 << 4) & __EXTI_RTSR);            // set rising edge
4629:STM32_Init.c  ****     EXTI->FTSR      |= ((1 << 4) & __EXTI_FTSR);            // set falling edge
4630:STM32_Init.c  **** 
4631:STM32_Init.c  ****     if (__EXTI_INTERRUPTS & (1 << 4)) {                     // interrupt used
4632:STM32_Init.c  ****       NVIC->ISER[0] |= (1 << (EXTI4_IRQChannel & 0x1F));    // enable interrupt EXTI 4
4633:STM32_Init.c  ****     }
4634:STM32_Init.c  ****   } // end EXTI4 used
4635:STM32_Init.c  **** 
4636:STM32_Init.c  ****   if (__EXTI_USED & (1 << 5)) {                             // EXTI5 used
4637:STM32_Init.c  **** 
4638:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;                     // enable clock for Alternate Function
4639:STM32_Init.c  ****     AFIO->EXTICR[1] &= 0xFF0F;                              // clear used pin
4640:STM32_Init.c  ****     AFIO->EXTICR[1] |= (0x00F0 & __AFIO_EXTICR2);           // set pin to use
4641:STM32_Init.c  **** 
4642:STM32_Init.c  ****     EXTI->IMR       |= ((1 << 5) & __EXTI_IMR);             // unmask interrupt
4643:STM32_Init.c  ****     EXTI->EMR       |= ((1 << 5) & __EXTI_EMR);             // unmask event
4644:STM32_Init.c  ****     EXTI->RTSR      |= ((1 << 5) & __EXTI_RTSR);            // set rising edge
4645:STM32_Init.c  ****     EXTI->FTSR      |= ((1 << 5) & __EXTI_FTSR);            // set falling edge
4646:STM32_Init.c  **** 
4647:STM32_Init.c  ****     if (__EXTI_INTERRUPTS & (1 << 5)) {                     // interrupt used
4648:STM32_Init.c  ****       NVIC->ISER[0] |= (1 << (EXTI9_5_IRQChannel & 0x1F));  // enable interrupt EXTI 9..5
4649:STM32_Init.c  ****     }
4650:STM32_Init.c  ****   } // end EXTI5 used
4651:STM32_Init.c  **** 
4652:STM32_Init.c  ****   if (__EXTI_USED & (1 << 6)) {                             // EXTI6 used
4653:STM32_Init.c  **** 
4654:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;                     // enable clock for Alternate Function
4655:STM32_Init.c  ****     AFIO->EXTICR[1] &= 0xF0FF;                              // clear used pin
4656:STM32_Init.c  ****     AFIO->EXTICR[1] |= (0x0F00 & __AFIO_EXTICR2);           // set pin to use
4657:STM32_Init.c  **** 
4658:STM32_Init.c  ****     EXTI->IMR       |= ((1 << 6) & __EXTI_IMR);             // unmask interrupt
4659:STM32_Init.c  ****     EXTI->EMR       |= ((1 << 6) & __EXTI_EMR);             // unmask event
4660:STM32_Init.c  ****     EXTI->RTSR      |= ((1 << 6) & __EXTI_RTSR);            // set rising edge
4661:STM32_Init.c  ****     EXTI->FTSR      |= ((1 << 6) & __EXTI_FTSR);            // set falling edge
4662:STM32_Init.c  **** 
4663:STM32_Init.c  ****     if (__EXTI_INTERRUPTS & (1 << 6)) {                     // interrupt used
4664:STM32_Init.c  ****       NVIC->ISER[0] |= (1 << (EXTI9_5_IRQChannel & 0x1F));  // enable interrupt EXTI 9..5
4665:STM32_Init.c  ****     }
4666:STM32_Init.c  ****   } // end EXTI6 used
4667:STM32_Init.c  **** 
4668:STM32_Init.c  ****   if (__EXTI_USED & (1 << 7)) {                             // EXTI7 used
4669:STM32_Init.c  **** 
4670:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;                     // enable clock for Alternate Function
4671:STM32_Init.c  ****     AFIO->EXTICR[1] &= 0x0FFF;                              // clear used pin
4672:STM32_Init.c  ****     AFIO->EXTICR[1] |= (0xF000 & __AFIO_EXTICR2);           // set pin to use
4673:STM32_Init.c  **** 
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 90


4674:STM32_Init.c  ****     EXTI->IMR       |= ((1 << 7) & __EXTI_IMR);             // unmask interrupt
4675:STM32_Init.c  ****     EXTI->EMR       |= ((1 << 7) & __EXTI_EMR);             // unmask event
4676:STM32_Init.c  ****     EXTI->RTSR      |= ((1 << 7) & __EXTI_RTSR);            // set rising edge
4677:STM32_Init.c  ****     EXTI->FTSR      |= ((1 << 7) & __EXTI_FTSR);            // set falling edge
4678:STM32_Init.c  **** 
4679:STM32_Init.c  ****     if (__EXTI_INTERRUPTS & (1 << 7)) {                     // interrupt used
4680:STM32_Init.c  ****       NVIC->ISER[0] |= (1 << (EXTI9_5_IRQChannel & 0x1F));  // enable interrupt EXTI 9..5
4681:STM32_Init.c  ****     }
4682:STM32_Init.c  ****   } // end EXTI7 used
4683:STM32_Init.c  **** 
4684:STM32_Init.c  ****   if (__EXTI_USED & (1 << 8)) {                             // EXTI8 used
4685:STM32_Init.c  **** 
4686:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;                     // enable clock for Alternate Function
4687:STM32_Init.c  ****     AFIO->EXTICR[2] &= 0xFFF0;                              // clear used pin
4688:STM32_Init.c  ****     AFIO->EXTICR[2] |= (0x000F & __AFIO_EXTICR3);           // set pin to use
4689:STM32_Init.c  **** 
4690:STM32_Init.c  ****     EXTI->IMR       |= ((1 << 8) & __EXTI_IMR);             // unmask interrupt
4691:STM32_Init.c  ****     EXTI->EMR       |= ((1 << 8) & __EXTI_EMR);             // unmask event
4692:STM32_Init.c  ****     EXTI->RTSR      |= ((1 << 8) & __EXTI_RTSR);            // set rising edge
4693:STM32_Init.c  ****     EXTI->FTSR      |= ((1 << 8) & __EXTI_FTSR);            // set falling edge
4694:STM32_Init.c  **** 
4695:STM32_Init.c  ****     if (__EXTI_INTERRUPTS & (1 << 8)) {                     // interrupt used
4696:STM32_Init.c  ****       NVIC->ISER[0] |= (1 << (EXTI9_5_IRQChannel & 0x1F));  // enable interrupt EXTI 9..5
4697:STM32_Init.c  ****     }
4698:STM32_Init.c  ****   } // end EXTI8 used
4699:STM32_Init.c  **** 
4700:STM32_Init.c  ****   if (__EXTI_USED & (1 << 9)) {                             // EXTI9 used
4701:STM32_Init.c  **** 
4702:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;                     // enable clock for Alternate Function
4703:STM32_Init.c  ****     AFIO->EXTICR[2] &= 0xFF0F;                              // clear used pin
4704:STM32_Init.c  ****     AFIO->EXTICR[2] |= (0x00F0 & __AFIO_EXTICR3);           // set pin to use
4705:STM32_Init.c  **** 
4706:STM32_Init.c  ****     EXTI->IMR       |= ((1 << 9) & __EXTI_IMR);             // unmask interrupt
4707:STM32_Init.c  ****     EXTI->EMR       |= ((1 << 9) & __EXTI_EMR);             // unmask event
4708:STM32_Init.c  ****     EXTI->RTSR      |= ((1 << 9) & __EXTI_RTSR);            // set rising edge
4709:STM32_Init.c  ****     EXTI->FTSR      |= ((1 << 9) & __EXTI_FTSR);            // set falling edge
4710:STM32_Init.c  **** 
4711:STM32_Init.c  ****     if (__EXTI_INTERRUPTS & (1 << 9)) {                     // interrupt used
4712:STM32_Init.c  ****       NVIC->ISER[0] |= (1 << (EXTI9_5_IRQChannel & 0x1F));  // enable interrupt EXTI 9..5
4713:STM32_Init.c  ****     }
4714:STM32_Init.c  ****   } // end EXTI9 used
4715:STM32_Init.c  **** 
4716:STM32_Init.c  ****   if (__EXTI_USED & (1 << 10)) {                            // EXTI10 used
4717:STM32_Init.c  **** 
4718:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;                     // enable clock for Alternate Function
4719:STM32_Init.c  ****     AFIO->EXTICR[2] &= 0xF0FF;                              // clear used pin
4720:STM32_Init.c  ****     AFIO->EXTICR[2] |= (0x0F00 & __AFIO_EXTICR3);           // set pin to use
4721:STM32_Init.c  **** 
4722:STM32_Init.c  ****     EXTI->IMR       |= ((1 << 10) & __EXTI_IMR);            // unmask interrupt
4723:STM32_Init.c  ****     EXTI->EMR       |= ((1 << 10) & __EXTI_EMR);            // unmask event
4724:STM32_Init.c  ****     EXTI->RTSR      |= ((1 << 10) & __EXTI_RTSR);           // set rising edge
4725:STM32_Init.c  ****     EXTI->FTSR      |= ((1 << 10) & __EXTI_FTSR);           // set falling edge
4726:STM32_Init.c  **** 
4727:STM32_Init.c  ****     if (__EXTI_INTERRUPTS & (1 << 10)) {                    // interrupt used
4728:STM32_Init.c  ****       NVIC->ISER[1] |= (1 << (EXTI15_10_IRQChannel & 0x1F));// enable interrupt EXTI 10..15
4729:STM32_Init.c  ****     }
4730:STM32_Init.c  ****   } // end EXTI10 used
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 91


4731:STM32_Init.c  **** 
4732:STM32_Init.c  ****   if (__EXTI_USED & (1 << 11)) {                            // EXTI11 used
4733:STM32_Init.c  **** 
4734:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;                     // enable clock for Alternate Function
4735:STM32_Init.c  ****     AFIO->EXTICR[2] &= 0x0FFF;                              // clear used pin
4736:STM32_Init.c  ****     AFIO->EXTICR[2] |= (0xF000 & __AFIO_EXTICR3);           // set pin to use
4737:STM32_Init.c  **** 
4738:STM32_Init.c  ****     EXTI->IMR       |= ((1 << 11) & __EXTI_IMR);            // unmask interrupt
4739:STM32_Init.c  ****     EXTI->EMR       |= ((1 << 11) & __EXTI_EMR);            // unmask event
4740:STM32_Init.c  ****     EXTI->RTSR      |= ((1 << 11) & __EXTI_RTSR);           // set rising edge
4741:STM32_Init.c  ****     EXTI->FTSR      |= ((1 << 11) & __EXTI_FTSR);           // set falling edge
4742:STM32_Init.c  **** 
4743:STM32_Init.c  ****     if (__EXTI_INTERRUPTS & (1 << 11)) {                    // interrupt used
4744:STM32_Init.c  ****       NVIC->ISER[1] |= (1 << (EXTI15_10_IRQChannel & 0x1F));// enable interrupt EXTI 10..15
4745:STM32_Init.c  ****     }
4746:STM32_Init.c  ****   } // end EXTI11 used
4747:STM32_Init.c  **** 
4748:STM32_Init.c  ****   if (__EXTI_USED & (1 << 12)) {                            // EXTI12 used
4749:STM32_Init.c  **** 
4750:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;                     // enable clock for Alternate Function
4751:STM32_Init.c  ****     AFIO->EXTICR[3] &= 0xFFF0;                              // clear used pin
4752:STM32_Init.c  ****     AFIO->EXTICR[3] |= (0x000F & __AFIO_EXTICR4);           // set pin to use
4753:STM32_Init.c  **** 
4754:STM32_Init.c  ****     EXTI->IMR       |= ((1 << 12) & __EXTI_IMR);            // unmask interrupt
4755:STM32_Init.c  ****     EXTI->EMR       |= ((1 << 12) & __EXTI_EMR);            // unmask event
4756:STM32_Init.c  ****     EXTI->RTSR      |= ((1 << 12) & __EXTI_RTSR);           // set rising edge
4757:STM32_Init.c  ****     EXTI->FTSR      |= ((1 << 12) & __EXTI_FTSR);           // set falling edge
4758:STM32_Init.c  **** 
4759:STM32_Init.c  ****     if (__EXTI_INTERRUPTS & (1 << 12)) {                    // interrupt used
4760:STM32_Init.c  ****       NVIC->ISER[1] |= (1 << (EXTI15_10_IRQChannel & 0x1F));// enable interrupt EXTI 10..15
4761:STM32_Init.c  ****     }
4762:STM32_Init.c  ****   } // end EXTI12 used
4763:STM32_Init.c  **** 
4764:STM32_Init.c  ****   if (__EXTI_USED & (1 << 13)) {                            // EXTI13 used
4765:STM32_Init.c  **** 
4766:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;                     // enable clock for Alternate Function
4767:STM32_Init.c  ****     AFIO->EXTICR[3] &= 0xFF0F;                              // clear used pin
4768:STM32_Init.c  ****     AFIO->EXTICR[3] |= (0x00F0 & __AFIO_EXTICR4);           // set pin to use
4769:STM32_Init.c  **** 
4770:STM32_Init.c  ****     EXTI->IMR       |= ((1 << 13) & __EXTI_IMR);            // unmask interrupt
4771:STM32_Init.c  ****     EXTI->EMR       |= ((1 << 13) & __EXTI_EMR);            // unmask event
4772:STM32_Init.c  ****     EXTI->RTSR      |= ((1 << 13) & __EXTI_RTSR);           // set rising edge
4773:STM32_Init.c  ****     EXTI->FTSR      |= ((1 << 13) & __EXTI_FTSR);           // set falling edge
4774:STM32_Init.c  **** 
4775:STM32_Init.c  ****     if (__EXTI_INTERRUPTS & (1 << 13)) {                    // interrupt used
4776:STM32_Init.c  ****       NVIC->ISER[1] |= (1 << (EXTI15_10_IRQChannel & 0x1F));// enable interrupt EXTI 10..15
4777:STM32_Init.c  ****     }
4778:STM32_Init.c  ****   } // end EXTI13 used
4779:STM32_Init.c  **** 
4780:STM32_Init.c  ****   if (__EXTI_USED & (1 << 14)) {                            // EXTI14 used
4781:STM32_Init.c  **** 
4782:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;                     // enable clock for Alternate Function
4783:STM32_Init.c  ****     AFIO->EXTICR[3] &= 0xF0FF;                              // clear used pin
4784:STM32_Init.c  ****     AFIO->EXTICR[3] |= (0x0F00 & __AFIO_EXTICR4);           // set pin to use
4785:STM32_Init.c  **** 
4786:STM32_Init.c  ****     EXTI->IMR       |= ((1 << 14) & __EXTI_IMR);            // unmask interrupt
4787:STM32_Init.c  ****     EXTI->EMR       |= ((1 << 14) & __EXTI_EMR);            // unmask event
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 92


4788:STM32_Init.c  ****     EXTI->RTSR      |= ((1 << 14) & __EXTI_RTSR);           // set rising edge
4789:STM32_Init.c  ****     EXTI->FTSR      |= ((1 << 14) & __EXTI_FTSR);           // set falling edge
4790:STM32_Init.c  **** 
4791:STM32_Init.c  ****     if (__EXTI_INTERRUPTS & (1 << 14)) {                    // interrupt used
4792:STM32_Init.c  ****       NVIC->ISER[1] |= (1 << (EXTI15_10_IRQChannel & 0x1F));// enable interrupt EXTI 10..15
4793:STM32_Init.c  ****     }
4794:STM32_Init.c  ****   } // end EXTI14 used
4795:STM32_Init.c  **** 
4796:STM32_Init.c  ****   if (__EXTI_USED & (1 << 15)) {                            // EXTI15 used
4797:STM32_Init.c  **** 
4798:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;                     // enable clock for Alternate Function
4799:STM32_Init.c  ****     AFIO->EXTICR[3] &= 0x0FFF;                              // clear used pin
4800:STM32_Init.c  ****     AFIO->EXTICR[3] |= (0xF000 & __AFIO_EXTICR4);           // set pin to use
4801:STM32_Init.c  **** 
4802:STM32_Init.c  ****     EXTI->IMR       |= ((1 << 15) & __EXTI_IMR);            // unmask interrupt
4803:STM32_Init.c  ****     EXTI->EMR       |= ((1 << 15) & __EXTI_EMR);            // unmask event
4804:STM32_Init.c  ****     EXTI->RTSR      |= ((1 << 15) & __EXTI_RTSR);           // set rising edge
4805:STM32_Init.c  ****     EXTI->FTSR      |= ((1 << 15) & __EXTI_FTSR);           // set falling edge
4806:STM32_Init.c  **** 
4807:STM32_Init.c  ****     if (__EXTI_INTERRUPTS & (1 << 15)) {                    // interrupt used
4808:STM32_Init.c  ****       NVIC->ISER[1] |= (1 << (EXTI15_10_IRQChannel & 0x1F));// enable interrupt EXTI 10..15
4809:STM32_Init.c  ****     }
4810:STM32_Init.c  ****   } // end EXTI15 used
4811:STM32_Init.c  **** 
4812:STM32_Init.c  **** } // end of stm32_ExtiSetup
 397              		.loc 1 4812 0
 398 0220 7047     		bx	lr
 399              	.LFE11:
 400              		.size	stm32_ExtiSetup, .-stm32_ExtiSetup
 401 0222 00BF     		.align	2
 402              		.global	stm32_AfRemapSetup
 403              		.thumb
 404              		.thumb_func
 405              		.type	stm32_AfRemapSetup, %function
 406              	stm32_AfRemapSetup:
 407              	.LFB12:
4813:STM32_Init.c  **** 
4814:STM32_Init.c  **** 
4815:STM32_Init.c  **** /*----------------------------------------------------------------------------
4816:STM32_Init.c  ****  STM32 AF remap setup.
4817:STM32_Init.c  ****  initializes the AFIO_MAPR register
4818:STM32_Init.c  ****  *----------------------------------------------------------------------------*/
4819:STM32_Init.c  **** void stm32_AfRemapSetup (void) {
 408              		.loc 1 4819 0
 409              		@ args = 0, pretend = 0, frame = 0
 410              		@ frame_needed = 0, uses_anonymous_args = 0
 411              		@ link register save eliminated.
4820:STM32_Init.c  ****                                                     
4821:STM32_Init.c  ****   if (__AFIO_MAPR & (1 << 0)) {                             // SPI1 remap used 
4822:STM32_Init.c  **** 
4823:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;                     // enable clock for Alternate Function
4824:STM32_Init.c  ****     AFIO->MAPR &= ~(1 << 0);                                // clear used bit
4825:STM32_Init.c  ****     AFIO->MAPR |= ((1 << 0) & __AFIO_MAPR);                 // set used bits
4826:STM32_Init.c  ****   } // end SPI1 remap used
4827:STM32_Init.c  **** 
4828:STM32_Init.c  ****   if (__AFIO_MAPR & (1 << 1)) {                             // I2C1 remap used 
4829:STM32_Init.c  **** 
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 93


4830:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;                     // enable clock for Alternate Function
4831:STM32_Init.c  ****     AFIO->MAPR &= ~(1 << 1);                                // clear used bit
4832:STM32_Init.c  ****     AFIO->MAPR |= ((1 << 1) & __AFIO_MAPR);                 // set used bits
4833:STM32_Init.c  ****   } // end I2C1 remap used
4834:STM32_Init.c  **** 
4835:STM32_Init.c  ****   if (__AFIO_MAPR & (1 << 2)) {                             // USART1 remap used 
4836:STM32_Init.c  **** 
4837:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;                     // enable clock for Alternate Function
4838:STM32_Init.c  ****     AFIO->MAPR &= ~(1 << 2);                                // clear used bit
4839:STM32_Init.c  ****     AFIO->MAPR |= ((1 << 2) & __AFIO_MAPR);                 // set used bits
4840:STM32_Init.c  ****   } // end USART1 remap used
4841:STM32_Init.c  **** 
4842:STM32_Init.c  ****   if (__AFIO_MAPR & (1 << 3)) {                             // USART2 remap used 
4843:STM32_Init.c  **** 
4844:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;                     // enable clock for Alternate Function
4845:STM32_Init.c  ****     AFIO->MAPR &= ~(1 << 3);                                // clear used bit
4846:STM32_Init.c  ****     AFIO->MAPR |= ((1 << 3) & __AFIO_MAPR);                 // set used bits
4847:STM32_Init.c  ****   } // end USART2 remap used
4848:STM32_Init.c  **** 
4849:STM32_Init.c  ****   if (__AFIO_MAPR & (3 << 4)) {                             // USART3 remap used 
4850:STM32_Init.c  **** 
4851:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;                     // enable clock for Alternate Function
4852:STM32_Init.c  ****     AFIO->MAPR &= ~(3 << 4);                                // clear used bit
4853:STM32_Init.c  ****     AFIO->MAPR |= ((3 << 4) & __AFIO_MAPR);                 // set used bits
4854:STM32_Init.c  ****   } // end USART3 remap used
4855:STM32_Init.c  **** 
4856:STM32_Init.c  ****   if (__AFIO_MAPR & (3 << 6)) {                             // TIM1 remap used 
4857:STM32_Init.c  **** 
4858:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;                     // enable clock for Alternate Function
4859:STM32_Init.c  ****     AFIO->MAPR &= ~(3 << 6);                                // clear used bit
4860:STM32_Init.c  ****     AFIO->MAPR |= ((3 << 6) & __AFIO_MAPR);                 // set used bits
4861:STM32_Init.c  ****   } // end TIM1 remap used
4862:STM32_Init.c  **** 
4863:STM32_Init.c  ****   if (__AFIO_MAPR & (3 << 8)) {                             // TIM2 remap used 
4864:STM32_Init.c  **** 
4865:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;                     // enable clock for Alternate Function
4866:STM32_Init.c  ****     AFIO->MAPR &= ~(3 << 8);                                // clear used bit
4867:STM32_Init.c  ****     AFIO->MAPR |= ((3 << 8) & __AFIO_MAPR);                 // set used bits
4868:STM32_Init.c  ****   } // end TIM2 remap used
4869:STM32_Init.c  **** 
4870:STM32_Init.c  ****   if (__AFIO_MAPR & (3 << 10)) {                            // TIM3 remap used 
4871:STM32_Init.c  **** 
4872:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;                     // enable clock for Alternate Function
4873:STM32_Init.c  ****     AFIO->MAPR &= ~(3 << 10);                               // clear used bit
4874:STM32_Init.c  ****     AFIO->MAPR |= ((3 << 10) & __AFIO_MAPR);                // set used bits
4875:STM32_Init.c  ****   } // end TIM3 remap used
4876:STM32_Init.c  **** 
4877:STM32_Init.c  ****   if (__AFIO_MAPR & (1 << 12)) {                            // TIM4 remap used 
4878:STM32_Init.c  **** 
4879:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;                     // enable clock for Alternate Function
4880:STM32_Init.c  ****     AFIO->MAPR &= ~(1 << 12);                               // clear used bit
4881:STM32_Init.c  ****     AFIO->MAPR |= ((1 << 12) & __AFIO_MAPR);                // set used bits
4882:STM32_Init.c  ****   } // end TIM2 remap used
4883:STM32_Init.c  **** 
4884:STM32_Init.c  ****   if (__AFIO_MAPR & (3 << 13)) {                            // CAN remap used 
4885:STM32_Init.c  **** 
4886:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;                     // enable clock for Alternate Function
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 94


4887:STM32_Init.c  ****     AFIO->MAPR &= ~(3 << 13);                               // clear used bit
4888:STM32_Init.c  ****     AFIO->MAPR |= ((3 << 13) & __AFIO_MAPR);                // set used bits
4889:STM32_Init.c  ****   } // end TIM2 remap used
4890:STM32_Init.c  **** 
4891:STM32_Init.c  ****   if (__AFIO_MAPR & (1 << 15)) {                            // PD01 remap used 
4892:STM32_Init.c  **** 
4893:STM32_Init.c  ****     RCC->APB2ENR |= RCC_APB2ENR_AFIOEN;                     // enable clock for Alternate Function
4894:STM32_Init.c  ****     AFIO->MAPR &= ~(1 << 15);                               // clear used bit
4895:STM32_Init.c  ****     AFIO->MAPR |= ((1 << 15) & __AFIO_MAPR);                // set used bits
4896:STM32_Init.c  ****   } // end TIM2 remap used
4897:STM32_Init.c  **** 
4898:STM32_Init.c  **** } // end of stm32_AfRemapSetup
 412              		.loc 1 4898 0
 413 0224 7047     		bx	lr
 414              	.LFE12:
 415              		.size	stm32_AfRemapSetup, .-stm32_AfRemapSetup
 416 0226 00BF     		.align	2
 417              		.global	stm32_TamperSetup
 418              		.thumb
 419              		.thumb_func
 420              		.type	stm32_TamperSetup, %function
 421              	stm32_TamperSetup:
 422              	.LFB13:
4899:STM32_Init.c  **** 
4900:STM32_Init.c  **** 
4901:STM32_Init.c  **** 
4902:STM32_Init.c  **** /*----------------------------------------------------------------------------
4903:STM32_Init.c  ****  STM32 Tamper setup.
4904:STM32_Init.c  ****  initializes the Tamper register
4905:STM32_Init.c  ****  *----------------------------------------------------------------------------*/
4906:STM32_Init.c  **** void stm32_TamperSetup (void) {
 423              		.loc 1 4906 0
 424              		@ args = 0, pretend = 0, frame = 0
 425              		@ frame_needed = 0, uses_anonymous_args = 0
 426              		@ link register save eliminated.
4907:STM32_Init.c  **** 
4908:STM32_Init.c  ****   RCC->APB1ENR |= RCC_APB1ENR_BKPEN;                        // enable clock for Backup interface
 427              		.loc 1 4908 0
 428 0228 41F20002 		movw	r2, #:lower16:1073876992
 429 022c C4F20202 		movt	r2, #:upper16:1073876992
 430 0230 D369     		ldr	r3, [r2, #28]
 431 0232 43F00063 		orr	r3, r3, #134217728
 432 0236 D361     		str	r3, [r2, #28]
4909:STM32_Init.c  ****   RCC->APB1ENR |= RCC_APB1ENR_PWREN;                        // enable clock for Power interface
 433              		.loc 1 4909 0
 434 0238 D369     		ldr	r3, [r2, #28]
 435 023a 43F08053 		orr	r3, r3, #268435456
 436 023e D361     		str	r3, [r2, #28]
4910:STM32_Init.c  **** 
4911:STM32_Init.c  ****   PWR->CR  |= PWR_CR_DBP;                                   // enable access to RTC, BDC registers
 437              		.loc 1 4911 0
 438 0240 47F20001 		movw	r1, #:lower16:1073770496
 439 0244 C4F20001 		movt	r1, #:upper16:1073770496
 440 0248 0B68     		ldr	r3, [r1, #0]
 441 024a 43F48073 		orr	r3, r3, #256
 442 024e 0B60     		str	r3, [r1, #0]
4912:STM32_Init.c  ****   BKP->CR   = __BKP_CR;                                     // set BKP_CR register
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 95


 443              		.loc 1 4912 0
 444 0250 46F60042 		movw	r2, #:lower16:1073769472
 445 0254 C4F20002 		movt	r2, #:upper16:1073769472
 446 0258 4FF00003 		mov	r3, #0
 447 025c 1386     		strh	r3, [r2, #48]	@ movhi
4913:STM32_Init.c  ****   BKP->CSR  = __BKP_CSR;                                    // set BKP_CSR register
 448              		.loc 1 4913 0
 449 025e 9386     		strh	r3, [r2, #52]	@ movhi
4914:STM32_Init.c  ****   BKP->CSR |= 0x0003;                                       // clear CTI, CTE
 450              		.loc 1 4914 0
 451 0260 938E     		ldrh	r3, [r2, #52]
 452 0262 9BB2     		uxth	r3, r3
 453 0264 43F00303 		orr	r3, r3, #3
 454 0268 9386     		strh	r3, [r2, #52]	@ movhi
4915:STM32_Init.c  ****   PWR->CR  &= ~PWR_CR_DBP;                                  // disable access to RTC, BDC registers
 455              		.loc 1 4915 0
 456 026a 0B68     		ldr	r3, [r1, #0]
 457 026c 23F48073 		bic	r3, r3, #256
 458 0270 0B60     		str	r3, [r1, #0]
4916:STM32_Init.c  **** 
4917:STM32_Init.c  ****   if (BKP->CSR & (1<<2)) {                                  // Tamper interrupt enable ?
 459              		.loc 1 4917 0
 460 0272 938E     		ldrh	r3, [r2, #52]
 461 0274 13F0040F 		tst	r3, #4
4918:STM32_Init.c  ****     NVIC->ISER[0] |= (1 << (TAMPER_IRQChannel & 0x1F));     // enable interrupt
 462              		.loc 1 4918 0
 463 0278 1FBF     		itttt	ne
 464 027a 4EF20012 		movwne	r2, #:lower16:-536813312
 465 027e CEF20002 		movtne	r2, #:upper16:-536813312
 466 0282 1368     		ldrne	r3, [r2, #0]
 467 0284 43F00403 		orrne	r3, r3, #4
 468 0288 18BF     		it	ne
 469 028a 1360     		strne	r3, [r2, #0]
4919:STM32_Init.c  ****   }
4920:STM32_Init.c  ****                                                       
4921:STM32_Init.c  **** } // end of stm32_TamperSetup
 470              		.loc 1 4921 0
 471 028c 7047     		bx	lr
 472              	.LFE13:
 473              		.size	stm32_TamperSetup, .-stm32_TamperSetup
 474 028e 00BF     		.align	2
 475              		.global	stm32_Init
 476              		.thumb
 477              		.thumb_func
 478              		.type	stm32_Init, %function
 479              	stm32_Init:
 480              	.LFB14:
4922:STM32_Init.c  **** 
4923:STM32_Init.c  **** 
4924:STM32_Init.c  **** /*----------------------------------------------------------------------------
4925:STM32_Init.c  ****  STM32 initialization
4926:STM32_Init.c  ****  Call this function as first in main ()
4927:STM32_Init.c  ****  *----------------------------------------------------------------------------*/
4928:STM32_Init.c  **** void stm32_Init () {
 481              		.loc 1 4928 0
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 96


 484 0290 10B5     		push	{r4, lr}
 485              	.LCFI0:
4929:STM32_Init.c  **** 
4930:STM32_Init.c  **** #if __EFI_SETUP
4931:STM32_Init.c  ****   stm32_EfiSetup ();
 486              		.loc 1 4931 0
 487 0292 FFF7FEFF 		bl	stm32_EfiSetup
4932:STM32_Init.c  **** #endif
4933:STM32_Init.c  **** 
4934:STM32_Init.c  **** #if __CLOCK_SETUP
4935:STM32_Init.c  ****   stm32_ClockSetup ();
 488              		.loc 1 4935 0
 489 0296 FFF7FEFF 		bl	stm32_ClockSetup
4936:STM32_Init.c  **** #endif
4937:STM32_Init.c  **** 
4938:STM32_Init.c  **** #if __NVIC_SETUP
4939:STM32_Init.c  ****   stm32_NvicSetup ();
4940:STM32_Init.c  **** #endif
4941:STM32_Init.c  **** 
4942:STM32_Init.c  **** #if __SYSTICK_SETUP
4943:STM32_Init.c  ****   stm32_SysTickSetup ();
 490              		.loc 1 4943 0
 491 029a FFF7FEFF 		bl	stm32_SysTickSetup
4944:STM32_Init.c  **** #endif
4945:STM32_Init.c  **** 
4946:STM32_Init.c  **** #if __RTC_SETUP
4947:STM32_Init.c  ****   stm32_RtcSetup ();
4948:STM32_Init.c  **** #endif
4949:STM32_Init.c  **** 
4950:STM32_Init.c  **** #if __TIMER_SETUP
4951:STM32_Init.c  ****   stm32_TimerSetup ();
4952:STM32_Init.c  **** #endif
4953:STM32_Init.c  **** 
4954:STM32_Init.c  **** #if __AFREMAP_SETUP
4955:STM32_Init.c  ****   stm32_AfRemapSetup ();
4956:STM32_Init.c  **** #endif
4957:STM32_Init.c  **** 
4958:STM32_Init.c  **** #if __GPIO_SETUP
4959:STM32_Init.c  ****   stm32_GpioSetup ();
 492              		.loc 1 4959 0
 493 029e FFF7FEFF 		bl	stm32_GpioSetup
4960:STM32_Init.c  **** #endif
4961:STM32_Init.c  **** 
4962:STM32_Init.c  **** #if __USART_SETUP
4963:STM32_Init.c  ****   stm32_UsartSetup();
 494              		.loc 1 4963 0
 495 02a2 FFF7FEFF 		bl	stm32_UsartSetup
4964:STM32_Init.c  **** #endif
4965:STM32_Init.c  **** 
4966:STM32_Init.c  **** #if __EXTI_SETUP
4967:STM32_Init.c  ****   stm32_ExtiSetup();
4968:STM32_Init.c  **** #endif
4969:STM32_Init.c  **** 
4970:STM32_Init.c  **** #if __TAMPER_SETUP
4971:STM32_Init.c  ****   stm32_TamperSetup();
4972:STM32_Init.c  **** #endif
4973:STM32_Init.c  **** 
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 97


4974:STM32_Init.c  **** #if __IWDG_SETUP
4975:STM32_Init.c  ****   stm32_IwdgSetup();   // this should be the last function. watchdog is running afterwards
4976:STM32_Init.c  **** #endif
4977:STM32_Init.c  **** 
4978:STM32_Init.c  **** } // end of stm32_Init
 496              		.loc 1 4978 0
 497 02a6 10BD     		pop	{r4, pc}
 498              	.LFE14:
 499              		.size	stm32_Init, .-stm32_Init
 500              		.align	2
 501              		.global	stm32_GetPCLK1
 502              		.thumb
 503              		.thumb_func
 504              		.type	stm32_GetPCLK1, %function
 505              	stm32_GetPCLK1:
 506              	.LFB15:
4979:STM32_Init.c  **** 
4980:STM32_Init.c  **** 
4981:STM32_Init.c  **** /*----------------------------------------------------------------------------
4982:STM32_Init.c  ****  STM32 get PCLK1
4983:STM32_Init.c  ****  deliver the PCLK1
4984:STM32_Init.c  ****  *----------------------------------------------------------------------------*/
4985:STM32_Init.c  **** unsigned int stm32_GetPCLK1 (void) {
 507              		.loc 1 4985 0
 508              		@ args = 0, pretend = 0, frame = 0
 509              		@ frame_needed = 0, uses_anonymous_args = 0
 510              		@ link register save eliminated.
4986:STM32_Init.c  ****   return ((unsigned int)__PCLK1);
4987:STM32_Init.c  **** }
 511              		.loc 1 4987 0
 512 02a8 45F20010 		movw	r0, #:lower16:36000000
 513 02ac C0F22520 		movt	r0, #:upper16:36000000
 514 02b0 7047     		bx	lr
 515              	.LFE15:
 516              		.size	stm32_GetPCLK1, .-stm32_GetPCLK1
 517              		.section	.debug_frame,"",%progbits
 518              	.Lframe0:
 519 0000 0C000000 		.4byte	.LECIE0-.LSCIE0
 520              	.LSCIE0:
 521 0004 FFFFFFFF 		.4byte	0xffffffff
 522 0008 01       		.byte	0x1
 523 0009 00       		.ascii	"\000"
 524 000a 01       		.uleb128 0x1
 525 000b 7C       		.sleb128 -4
 526 000c 0E       		.byte	0xe
 527 000d 0C       		.byte	0xc
 528 000e 0D       		.uleb128 0xd
 529 000f 00       		.uleb128 0x0
 530              		.align	2
 531              	.LECIE0:
 532              	.LSFDE0:
 533 0010 0C000000 		.4byte	.LEFDE0-.LASFDE0
 534              	.LASFDE0:
 535 0014 00000000 		.4byte	.Lframe0
 536 0018 00000000 		.4byte	.LFB2
 537 001c 10000000 		.4byte	.LFE2-.LFB2
 538              		.align	2
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 98


 539              	.LEFDE0:
 540              	.LSFDE2:
 541 0020 0C000000 		.4byte	.LEFDE2-.LASFDE2
 542              	.LASFDE2:
 543 0024 00000000 		.4byte	.Lframe0
 544 0028 10000000 		.4byte	.LFB3
 545 002c 4E000000 		.4byte	.LFE3-.LFB3
 546              		.align	2
 547              	.LEFDE2:
 548              	.LSFDE4:
 549 0030 0C000000 		.4byte	.LEFDE4-.LASFDE4
 550              	.LASFDE4:
 551 0034 00000000 		.4byte	.Lframe0
 552 0038 60000000 		.4byte	.LFB4
 553 003c 02000000 		.4byte	.LFE4-.LFB4
 554              		.align	2
 555              	.LEFDE4:
 556              	.LSFDE6:
 557 0040 0C000000 		.4byte	.LEFDE6-.LASFDE6
 558              	.LASFDE6:
 559 0044 00000000 		.4byte	.Lframe0
 560 0048 64000000 		.4byte	.LFB5
 561 004c 28000000 		.4byte	.LFE5-.LFB5
 562              		.align	2
 563              	.LEFDE6:
 564              	.LSFDE8:
 565 0050 0C000000 		.4byte	.LEFDE8-.LASFDE8
 566              	.LASFDE8:
 567 0054 00000000 		.4byte	.Lframe0
 568 0058 8C000000 		.4byte	.LFB6
 569 005c 28000000 		.4byte	.LFE6-.LFB6
 570              		.align	2
 571              	.LEFDE8:
 572              	.LSFDE10:
 573 0060 0C000000 		.4byte	.LEFDE10-.LASFDE10
 574              	.LASFDE10:
 575 0064 00000000 		.4byte	.Lframe0
 576 0068 B4000000 		.4byte	.LFB7
 577 006c AE000000 		.4byte	.LFE7-.LFB7
 578              		.align	2
 579              	.LEFDE10:
 580              	.LSFDE12:
 581 0070 0C000000 		.4byte	.LEFDE12-.LASFDE12
 582              	.LASFDE12:
 583 0074 00000000 		.4byte	.Lframe0
 584 0078 64010000 		.4byte	.LFB8
 585 007c 02000000 		.4byte	.LFE8-.LFB8
 586              		.align	2
 587              	.LEFDE12:
 588              	.LSFDE14:
 589 0080 0C000000 		.4byte	.LEFDE14-.LASFDE14
 590              	.LASFDE14:
 591 0084 00000000 		.4byte	.Lframe0
 592 0088 68010000 		.4byte	.LFB9
 593 008c 3A000000 		.4byte	.LFE9-.LFB9
 594              		.align	2
 595              	.LEFDE14:
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 99


 596              	.LSFDE16:
 597 0090 0C000000 		.4byte	.LEFDE16-.LASFDE16
 598              	.LASFDE16:
 599 0094 00000000 		.4byte	.Lframe0
 600 0098 A4010000 		.4byte	.LFB10
 601 009c 7C000000 		.4byte	.LFE10-.LFB10
 602              		.align	2
 603              	.LEFDE16:
 604              	.LSFDE18:
 605 00a0 0C000000 		.4byte	.LEFDE18-.LASFDE18
 606              	.LASFDE18:
 607 00a4 00000000 		.4byte	.Lframe0
 608 00a8 20020000 		.4byte	.LFB11
 609 00ac 02000000 		.4byte	.LFE11-.LFB11
 610              		.align	2
 611              	.LEFDE18:
 612              	.LSFDE20:
 613 00b0 0C000000 		.4byte	.LEFDE20-.LASFDE20
 614              	.LASFDE20:
 615 00b4 00000000 		.4byte	.Lframe0
 616 00b8 24020000 		.4byte	.LFB12
 617 00bc 02000000 		.4byte	.LFE12-.LFB12
 618              		.align	2
 619              	.LEFDE20:
 620              	.LSFDE22:
 621 00c0 0C000000 		.4byte	.LEFDE22-.LASFDE22
 622              	.LASFDE22:
 623 00c4 00000000 		.4byte	.Lframe0
 624 00c8 28020000 		.4byte	.LFB13
 625 00cc 66000000 		.4byte	.LFE13-.LFB13
 626              		.align	2
 627              	.LEFDE22:
 628              	.LSFDE24:
 629 00d0 14000000 		.4byte	.LEFDE24-.LASFDE24
 630              	.LASFDE24:
 631 00d4 00000000 		.4byte	.Lframe0
 632 00d8 90020000 		.4byte	.LFB14
 633 00dc 18000000 		.4byte	.LFE14-.LFB14
 634 00e0 42       		.byte	0x4
 635              		.4byte	.LCFI0-.LFB14
 636 00e1 0E       		.byte	0xe
 637 00e2 08       		.uleb128 0x8
 638 00e3 8E       		.byte	0x8e
 639 00e4 01       		.uleb128 0x1
 640 00e5 84       		.byte	0x84
 641 00e6 02       		.uleb128 0x2
 642 00e7 00       		.align	2
 643              	.LEFDE24:
 644              	.LSFDE26:
 645 00e8 0C000000 		.4byte	.LEFDE26-.LASFDE26
 646              	.LASFDE26:
 647 00ec 00000000 		.4byte	.Lframe0
 648 00f0 A8020000 		.4byte	.LFB15
 649 00f4 0A000000 		.4byte	.LFE15-.LFB15
 650              		.align	2
 651              	.LEFDE26:
 652              		.text
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 100


 653              	.Letext0:
 654 02b2 00BF     		.section	.debug_loc,"",%progbits
 655              	.Ldebug_loc0:
 656              	.LLST12:
 657 0000 90020000 		.4byte	.LFB14-.Ltext0
 658 0004 92020000 		.4byte	.LCFI0-.Ltext0
 659 0008 0100     		.2byte	0x1
 660 000a 5D       		.byte	0x5d
 661 000b 92020000 		.4byte	.LCFI0-.Ltext0
 662 000f A8020000 		.4byte	.LFE14-.Ltext0
 663 0013 0200     		.2byte	0x2
 664 0015 7D       		.byte	0x7d
 665 0016 08       		.sleb128 8
 666 0017 00000000 		.4byte	0x0
 667 001b 00000000 		.4byte	0x0
 668              		.file 2 "E:/programs/keil_arm_eval/ARM/INC/ST/STM32F10x/stm32f10x_type.h"
 669              		.file 3 "E:/programs/keil_arm_eval/ARM/INC/ST/STM32F10x/stm32f10x_map.h"
 670              		.section	.debug_info
 671 0000 42100000 		.4byte	0x1042
 672 0004 0200     		.2byte	0x2
 673 0006 00000000 		.4byte	.Ldebug_abbrev0
 674 000a 04       		.byte	0x4
 675 000b 01       		.uleb128 0x1
 676 000c 39020000 		.4byte	.LASF159
 677 0010 01       		.byte	0x1
 678 0011 50010000 		.4byte	.LASF160
 679 0015 6D000000 		.4byte	.LASF161
 680 0019 00000000 		.4byte	.Ltext0
 681 001d B2020000 		.4byte	.Letext0
 682 0021 00000000 		.4byte	.Ldebug_line0
 683 0025 02       		.uleb128 0x2
 684 0026 04       		.byte	0x4
 685 0027 05       		.byte	0x5
 686 0028 F5020000 		.4byte	.LASF0
 687 002c 02       		.uleb128 0x2
 688 002d 02       		.byte	0x2
 689 002e 05       		.byte	0x5
 690 002f D7020000 		.4byte	.LASF1
 691 0033 02       		.uleb128 0x2
 692 0034 01       		.byte	0x1
 693 0035 06       		.byte	0x6
 694 0036 6D040000 		.4byte	.LASF2
 695 003a 03       		.uleb128 0x3
 696 003b 75333200 		.ascii	"u32\000"
 697 003f 02       		.byte	0x2
 698 0040 27       		.byte	0x27
 699 0041 45000000 		.4byte	0x45
 700 0045 02       		.uleb128 0x2
 701 0046 04       		.byte	0x4
 702 0047 07       		.byte	0x7
 703 0048 9B030000 		.4byte	.LASF3
 704 004c 03       		.uleb128 0x3
 705 004d 75313600 		.ascii	"u16\000"
 706 0051 02       		.byte	0x2
 707 0052 28       		.byte	0x28
 708 0053 57000000 		.4byte	0x57
 709 0057 02       		.uleb128 0x2
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 101


 710 0058 02       		.byte	0x2
 711 0059 07       		.byte	0x7
 712 005a 79040000 		.4byte	.LASF4
 713 005e 02       		.uleb128 0x2
 714 005f 01       		.byte	0x1
 715 0060 08       		.byte	0x8
 716 0061 D3030000 		.4byte	.LASF5
 717 0065 04       		.uleb128 0x4
 718 0066 45000000 		.4byte	0x45
 719 006a 04       		.uleb128 0x4
 720 006b 57000000 		.4byte	0x57
 721 006f 05       		.uleb128 0x5
 722 0070 65000000 		.4byte	0x65
 723 0074 06       		.uleb128 0x6
 724 0075 C0       		.byte	0xc0
 725 0076 03       		.byte	0x3
 726 0077 3E       		.byte	0x3e
 727 0078 96050000 		.4byte	0x596
 728 007c 07       		.uleb128 0x7
 729 007d 91020000 		.4byte	.LASF6
 730 0081 03       		.byte	0x3
 731 0082 3F       		.byte	0x3f
 732 0083 3A000000 		.4byte	0x3a
 733 0087 02       		.byte	0x2
 734 0088 23       		.byte	0x23
 735 0089 00       		.uleb128 0x0
 736 008a 08       		.uleb128 0x8
 737 008b 44523100 		.ascii	"DR1\000"
 738 008f 03       		.byte	0x3
 739 0090 40       		.byte	0x40
 740 0091 6A000000 		.4byte	0x6a
 741 0095 02       		.byte	0x2
 742 0096 23       		.byte	0x23
 743 0097 04       		.uleb128 0x4
 744 0098 07       		.uleb128 0x7
 745 0099 9B020000 		.4byte	.LASF7
 746 009d 03       		.byte	0x3
 747 009e 41       		.byte	0x41
 748 009f 4C000000 		.4byte	0x4c
 749 00a3 02       		.byte	0x2
 750 00a4 23       		.byte	0x23
 751 00a5 06       		.uleb128 0x6
 752 00a6 08       		.uleb128 0x8
 753 00a7 44523200 		.ascii	"DR2\000"
 754 00ab 03       		.byte	0x3
 755 00ac 42       		.byte	0x42
 756 00ad 6A000000 		.4byte	0x6a
 757 00b1 02       		.byte	0x2
 758 00b2 23       		.byte	0x23
 759 00b3 08       		.uleb128 0x8
 760 00b4 07       		.uleb128 0x7
 761 00b5 A5020000 		.4byte	.LASF8
 762 00b9 03       		.byte	0x3
 763 00ba 43       		.byte	0x43
 764 00bb 4C000000 		.4byte	0x4c
 765 00bf 02       		.byte	0x2
 766 00c0 23       		.byte	0x23
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 102


 767 00c1 0A       		.uleb128 0xa
 768 00c2 08       		.uleb128 0x8
 769 00c3 44523300 		.ascii	"DR3\000"
 770 00c7 03       		.byte	0x3
 771 00c8 44       		.byte	0x44
 772 00c9 6A000000 		.4byte	0x6a
 773 00cd 02       		.byte	0x2
 774 00ce 23       		.byte	0x23
 775 00cf 0C       		.uleb128 0xc
 776 00d0 07       		.uleb128 0x7
 777 00d1 AF020000 		.4byte	.LASF9
 778 00d5 03       		.byte	0x3
 779 00d6 45       		.byte	0x45
 780 00d7 4C000000 		.4byte	0x4c
 781 00db 02       		.byte	0x2
 782 00dc 23       		.byte	0x23
 783 00dd 0E       		.uleb128 0xe
 784 00de 08       		.uleb128 0x8
 785 00df 44523400 		.ascii	"DR4\000"
 786 00e3 03       		.byte	0x3
 787 00e4 46       		.byte	0x46
 788 00e5 6A000000 		.4byte	0x6a
 789 00e9 02       		.byte	0x2
 790 00ea 23       		.byte	0x23
 791 00eb 10       		.uleb128 0x10
 792 00ec 07       		.uleb128 0x7
 793 00ed B9020000 		.4byte	.LASF10
 794 00f1 03       		.byte	0x3
 795 00f2 47       		.byte	0x47
 796 00f3 4C000000 		.4byte	0x4c
 797 00f7 02       		.byte	0x2
 798 00f8 23       		.byte	0x23
 799 00f9 12       		.uleb128 0x12
 800 00fa 08       		.uleb128 0x8
 801 00fb 44523500 		.ascii	"DR5\000"
 802 00ff 03       		.byte	0x3
 803 0100 48       		.byte	0x48
 804 0101 6A000000 		.4byte	0x6a
 805 0105 02       		.byte	0x2
 806 0106 23       		.byte	0x23
 807 0107 14       		.uleb128 0x14
 808 0108 07       		.uleb128 0x7
 809 0109 C3020000 		.4byte	.LASF11
 810 010d 03       		.byte	0x3
 811 010e 49       		.byte	0x49
 812 010f 4C000000 		.4byte	0x4c
 813 0113 02       		.byte	0x2
 814 0114 23       		.byte	0x23
 815 0115 16       		.uleb128 0x16
 816 0116 08       		.uleb128 0x8
 817 0117 44523600 		.ascii	"DR6\000"
 818 011b 03       		.byte	0x3
 819 011c 4A       		.byte	0x4a
 820 011d 6A000000 		.4byte	0x6a
 821 0121 02       		.byte	0x2
 822 0122 23       		.byte	0x23
 823 0123 18       		.uleb128 0x18
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 103


 824 0124 07       		.uleb128 0x7
 825 0125 CD020000 		.4byte	.LASF12
 826 0129 03       		.byte	0x3
 827 012a 4B       		.byte	0x4b
 828 012b 4C000000 		.4byte	0x4c
 829 012f 02       		.byte	0x2
 830 0130 23       		.byte	0x23
 831 0131 1A       		.uleb128 0x1a
 832 0132 08       		.uleb128 0x8
 833 0133 44523700 		.ascii	"DR7\000"
 834 0137 03       		.byte	0x3
 835 0138 4C       		.byte	0x4c
 836 0139 6A000000 		.4byte	0x6a
 837 013d 02       		.byte	0x2
 838 013e 23       		.byte	0x23
 839 013f 1C       		.uleb128 0x1c
 840 0140 07       		.uleb128 0x7
 841 0141 05050000 		.4byte	.LASF13
 842 0145 03       		.byte	0x3
 843 0146 4D       		.byte	0x4d
 844 0147 4C000000 		.4byte	0x4c
 845 014b 02       		.byte	0x2
 846 014c 23       		.byte	0x23
 847 014d 1E       		.uleb128 0x1e
 848 014e 08       		.uleb128 0x8
 849 014f 44523800 		.ascii	"DR8\000"
 850 0153 03       		.byte	0x3
 851 0154 4E       		.byte	0x4e
 852 0155 6A000000 		.4byte	0x6a
 853 0159 02       		.byte	0x2
 854 015a 23       		.byte	0x23
 855 015b 20       		.uleb128 0x20
 856 015c 07       		.uleb128 0x7
 857 015d E1020000 		.4byte	.LASF14
 858 0161 03       		.byte	0x3
 859 0162 4F       		.byte	0x4f
 860 0163 4C000000 		.4byte	0x4c
 861 0167 02       		.byte	0x2
 862 0168 23       		.byte	0x23
 863 0169 22       		.uleb128 0x22
 864 016a 08       		.uleb128 0x8
 865 016b 44523900 		.ascii	"DR9\000"
 866 016f 03       		.byte	0x3
 867 0170 50       		.byte	0x50
 868 0171 6A000000 		.4byte	0x6a
 869 0175 02       		.byte	0x2
 870 0176 23       		.byte	0x23
 871 0177 24       		.uleb128 0x24
 872 0178 07       		.uleb128 0x7
 873 0179 EB020000 		.4byte	.LASF15
 874 017d 03       		.byte	0x3
 875 017e 51       		.byte	0x51
 876 017f 4C000000 		.4byte	0x4c
 877 0183 02       		.byte	0x2
 878 0184 23       		.byte	0x23
 879 0185 26       		.uleb128 0x26
 880 0186 07       		.uleb128 0x7
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 104


 881 0187 FC010000 		.4byte	.LASF16
 882 018b 03       		.byte	0x3
 883 018c 52       		.byte	0x52
 884 018d 6A000000 		.4byte	0x6a
 885 0191 02       		.byte	0x2
 886 0192 23       		.byte	0x23
 887 0193 28       		.uleb128 0x28
 888 0194 07       		.uleb128 0x7
 889 0195 F5030000 		.4byte	.LASF17
 890 0199 03       		.byte	0x3
 891 019a 53       		.byte	0x53
 892 019b 4C000000 		.4byte	0x4c
 893 019f 02       		.byte	0x2
 894 01a0 23       		.byte	0x23
 895 01a1 2A       		.uleb128 0x2a
 896 01a2 07       		.uleb128 0x7
 897 01a3 67040000 		.4byte	.LASF18
 898 01a7 03       		.byte	0x3
 899 01a8 54       		.byte	0x54
 900 01a9 6A000000 		.4byte	0x6a
 901 01ad 02       		.byte	0x2
 902 01ae 23       		.byte	0x23
 903 01af 2C       		.uleb128 0x2c
 904 01b0 07       		.uleb128 0x7
 905 01b1 00040000 		.4byte	.LASF19
 906 01b5 03       		.byte	0x3
 907 01b6 55       		.byte	0x55
 908 01b7 4C000000 		.4byte	0x4c
 909 01bb 02       		.byte	0x2
 910 01bc 23       		.byte	0x23
 911 01bd 2E       		.uleb128 0x2e
 912 01be 08       		.uleb128 0x8
 913 01bf 435200   		.ascii	"CR\000"
 914 01c2 03       		.byte	0x3
 915 01c3 56       		.byte	0x56
 916 01c4 6A000000 		.4byte	0x6a
 917 01c8 02       		.byte	0x2
 918 01c9 23       		.byte	0x23
 919 01ca 30       		.uleb128 0x30
 920 01cb 07       		.uleb128 0x7
 921 01cc 0B040000 		.4byte	.LASF20
 922 01d0 03       		.byte	0x3
 923 01d1 57       		.byte	0x57
 924 01d2 4C000000 		.4byte	0x4c
 925 01d6 02       		.byte	0x2
 926 01d7 23       		.byte	0x23
 927 01d8 32       		.uleb128 0x32
 928 01d9 08       		.uleb128 0x8
 929 01da 43535200 		.ascii	"CSR\000"
 930 01de 03       		.byte	0x3
 931 01df 58       		.byte	0x58
 932 01e0 6A000000 		.4byte	0x6a
 933 01e4 02       		.byte	0x2
 934 01e5 23       		.byte	0x23
 935 01e6 34       		.uleb128 0x34
 936 01e7 07       		.uleb128 0x7
 937 01e8 16040000 		.4byte	.LASF21
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 105


 938 01ec 03       		.byte	0x3
 939 01ed 59       		.byte	0x59
 940 01ee 96050000 		.4byte	0x596
 941 01f2 02       		.byte	0x2
 942 01f3 23       		.byte	0x23
 943 01f4 36       		.uleb128 0x36
 944 01f5 07       		.uleb128 0x7
 945 01f6 01020000 		.4byte	.LASF22
 946 01fa 03       		.byte	0x3
 947 01fb 5A       		.byte	0x5a
 948 01fc 6A000000 		.4byte	0x6a
 949 0200 02       		.byte	0x2
 950 0201 23       		.byte	0x23
 951 0202 40       		.uleb128 0x40
 952 0203 07       		.uleb128 0x7
 953 0204 21040000 		.4byte	.LASF23
 954 0208 03       		.byte	0x3
 955 0209 5B       		.byte	0x5b
 956 020a 4C000000 		.4byte	0x4c
 957 020e 02       		.byte	0x2
 958 020f 23       		.byte	0x23
 959 0210 42       		.uleb128 0x42
 960 0211 07       		.uleb128 0x7
 961 0212 06020000 		.4byte	.LASF24
 962 0216 03       		.byte	0x3
 963 0217 5C       		.byte	0x5c
 964 0218 6A000000 		.4byte	0x6a
 965 021c 02       		.byte	0x2
 966 021d 23       		.byte	0x23
 967 021e 44       		.uleb128 0x44
 968 021f 07       		.uleb128 0x7
 969 0220 1F010000 		.4byte	.LASF25
 970 0224 03       		.byte	0x3
 971 0225 5D       		.byte	0x5d
 972 0226 4C000000 		.4byte	0x4c
 973 022a 02       		.byte	0x2
 974 022b 23       		.byte	0x23
 975 022c 46       		.uleb128 0x46
 976 022d 07       		.uleb128 0x7
 977 022e 0B020000 		.4byte	.LASF26
 978 0232 03       		.byte	0x3
 979 0233 5E       		.byte	0x5e
 980 0234 6A000000 		.4byte	0x6a
 981 0238 02       		.byte	0x2
 982 0239 23       		.byte	0x23
 983 023a 48       		.uleb128 0x48
 984 023b 07       		.uleb128 0x7
 985 023c 2C040000 		.4byte	.LASF27
 986 0240 03       		.byte	0x3
 987 0241 5F       		.byte	0x5f
 988 0242 4C000000 		.4byte	0x4c
 989 0246 02       		.byte	0x2
 990 0247 23       		.byte	0x23
 991 0248 4A       		.uleb128 0x4a
 992 0249 07       		.uleb128 0x7
 993 024a 10020000 		.4byte	.LASF28
 994 024e 03       		.byte	0x3
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 106


 995 024f 60       		.byte	0x60
 996 0250 6A000000 		.4byte	0x6a
 997 0254 02       		.byte	0x2
 998 0255 23       		.byte	0x23
 999 0256 4C       		.uleb128 0x4c
 1000 0257 07       		.uleb128 0x7
 1001 0258 37040000 		.4byte	.LASF29
 1002 025c 03       		.byte	0x3
 1003 025d 61       		.byte	0x61
 1004 025e 4C000000 		.4byte	0x4c
 1005 0262 02       		.byte	0x2
 1006 0263 23       		.byte	0x23
 1007 0264 4E       		.uleb128 0x4e
 1008 0265 07       		.uleb128 0x7
 1009 0266 15020000 		.4byte	.LASF30
 1010 026a 03       		.byte	0x3
 1011 026b 62       		.byte	0x62
 1012 026c 6A000000 		.4byte	0x6a
 1013 0270 02       		.byte	0x2
 1014 0271 23       		.byte	0x23
 1015 0272 50       		.uleb128 0x50
 1016 0273 07       		.uleb128 0x7
 1017 0274 42040000 		.4byte	.LASF31
 1018 0278 03       		.byte	0x3
 1019 0279 63       		.byte	0x63
 1020 027a 4C000000 		.4byte	0x4c
 1021 027e 02       		.byte	0x2
 1022 027f 23       		.byte	0x23
 1023 0280 52       		.uleb128 0x52
 1024 0281 07       		.uleb128 0x7
 1025 0282 1A020000 		.4byte	.LASF32
 1026 0286 03       		.byte	0x3
 1027 0287 64       		.byte	0x64
 1028 0288 6A000000 		.4byte	0x6a
 1029 028c 02       		.byte	0x2
 1030 028d 23       		.byte	0x23
 1031 028e 54       		.uleb128 0x54
 1032 028f 07       		.uleb128 0x7
 1033 0290 4D040000 		.4byte	.LASF33
 1034 0294 03       		.byte	0x3
 1035 0295 65       		.byte	0x65
 1036 0296 4C000000 		.4byte	0x4c
 1037 029a 02       		.byte	0x2
 1038 029b 23       		.byte	0x23
 1039 029c 56       		.uleb128 0x56
 1040 029d 07       		.uleb128 0x7
 1041 029e 1F020000 		.4byte	.LASF34
 1042 02a2 03       		.byte	0x3
 1043 02a3 66       		.byte	0x66
 1044 02a4 6A000000 		.4byte	0x6a
 1045 02a8 02       		.byte	0x2
 1046 02a9 23       		.byte	0x23
 1047 02aa 58       		.uleb128 0x58
 1048 02ab 07       		.uleb128 0x7
 1049 02ac 8C040000 		.4byte	.LASF35
 1050 02b0 03       		.byte	0x3
 1051 02b1 67       		.byte	0x67
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 107


 1052 02b2 4C000000 		.4byte	0x4c
 1053 02b6 02       		.byte	0x2
 1054 02b7 23       		.byte	0x23
 1055 02b8 5A       		.uleb128 0x5a
 1056 02b9 07       		.uleb128 0x7
 1057 02ba 24020000 		.4byte	.LASF36
 1058 02be 03       		.byte	0x3
 1059 02bf 68       		.byte	0x68
 1060 02c0 6A000000 		.4byte	0x6a
 1061 02c4 02       		.byte	0x2
 1062 02c5 23       		.byte	0x23
 1063 02c6 5C       		.uleb128 0x5c
 1064 02c7 07       		.uleb128 0x7
 1065 02c8 97040000 		.4byte	.LASF37
 1066 02cc 03       		.byte	0x3
 1067 02cd 69       		.byte	0x69
 1068 02ce 4C000000 		.4byte	0x4c
 1069 02d2 02       		.byte	0x2
 1070 02d3 23       		.byte	0x23
 1071 02d4 5E       		.uleb128 0x5e
 1072 02d5 07       		.uleb128 0x7
 1073 02d6 29020000 		.4byte	.LASF38
 1074 02da 03       		.byte	0x3
 1075 02db 6A       		.byte	0x6a
 1076 02dc 6A000000 		.4byte	0x6a
 1077 02e0 02       		.byte	0x2
 1078 02e1 23       		.byte	0x23
 1079 02e2 60       		.uleb128 0x60
 1080 02e3 07       		.uleb128 0x7
 1081 02e4 A2040000 		.4byte	.LASF39
 1082 02e8 03       		.byte	0x3
 1083 02e9 6B       		.byte	0x6b
 1084 02ea 4C000000 		.4byte	0x4c
 1085 02ee 02       		.byte	0x2
 1086 02ef 23       		.byte	0x23
 1087 02f0 62       		.uleb128 0x62
 1088 02f1 07       		.uleb128 0x7
 1089 02f2 4F020000 		.4byte	.LASF40
 1090 02f6 03       		.byte	0x3
 1091 02f7 6C       		.byte	0x6c
 1092 02f8 6A000000 		.4byte	0x6a
 1093 02fc 02       		.byte	0x2
 1094 02fd 23       		.byte	0x23
 1095 02fe 64       		.uleb128 0x64
 1096 02ff 07       		.uleb128 0x7
 1097 0300 AD040000 		.4byte	.LASF41
 1098 0304 03       		.byte	0x3
 1099 0305 6D       		.byte	0x6d
 1100 0306 4C000000 		.4byte	0x4c
 1101 030a 02       		.byte	0x2
 1102 030b 23       		.byte	0x23
 1103 030c 66       		.uleb128 0x66
 1104 030d 07       		.uleb128 0x7
 1105 030e 54020000 		.4byte	.LASF42
 1106 0312 03       		.byte	0x3
 1107 0313 6E       		.byte	0x6e
 1108 0314 6A000000 		.4byte	0x6a
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 108


 1109 0318 02       		.byte	0x2
 1110 0319 23       		.byte	0x23
 1111 031a 68       		.uleb128 0x68
 1112 031b 07       		.uleb128 0x7
 1113 031c B8040000 		.4byte	.LASF43
 1114 0320 03       		.byte	0x3
 1115 0321 6F       		.byte	0x6f
 1116 0322 4C000000 		.4byte	0x4c
 1117 0326 02       		.byte	0x2
 1118 0327 23       		.byte	0x23
 1119 0328 6A       		.uleb128 0x6a
 1120 0329 07       		.uleb128 0x7
 1121 032a 59020000 		.4byte	.LASF44
 1122 032e 03       		.byte	0x3
 1123 032f 70       		.byte	0x70
 1124 0330 6A000000 		.4byte	0x6a
 1125 0334 02       		.byte	0x2
 1126 0335 23       		.byte	0x23
 1127 0336 6C       		.uleb128 0x6c
 1128 0337 07       		.uleb128 0x7
 1129 0338 C3040000 		.4byte	.LASF45
 1130 033c 03       		.byte	0x3
 1131 033d 71       		.byte	0x71
 1132 033e 4C000000 		.4byte	0x4c
 1133 0342 02       		.byte	0x2
 1134 0343 23       		.byte	0x23
 1135 0344 6E       		.uleb128 0x6e
 1136 0345 07       		.uleb128 0x7
 1137 0346 5E020000 		.4byte	.LASF46
 1138 034a 03       		.byte	0x3
 1139 034b 72       		.byte	0x72
 1140 034c 6A000000 		.4byte	0x6a
 1141 0350 02       		.byte	0x2
 1142 0351 23       		.byte	0x23
 1143 0352 70       		.uleb128 0x70
 1144 0353 07       		.uleb128 0x7
 1145 0354 CE040000 		.4byte	.LASF47
 1146 0358 03       		.byte	0x3
 1147 0359 73       		.byte	0x73
 1148 035a 4C000000 		.4byte	0x4c
 1149 035e 02       		.byte	0x2
 1150 035f 23       		.byte	0x23
 1151 0360 72       		.uleb128 0x72
 1152 0361 07       		.uleb128 0x7
 1153 0362 63020000 		.4byte	.LASF48
 1154 0366 03       		.byte	0x3
 1155 0367 74       		.byte	0x74
 1156 0368 6A000000 		.4byte	0x6a
 1157 036c 02       		.byte	0x2
 1158 036d 23       		.byte	0x23
 1159 036e 74       		.uleb128 0x74
 1160 036f 07       		.uleb128 0x7
 1161 0370 D9040000 		.4byte	.LASF49
 1162 0374 03       		.byte	0x3
 1163 0375 75       		.byte	0x75
 1164 0376 4C000000 		.4byte	0x4c
 1165 037a 02       		.byte	0x2
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 109


 1166 037b 23       		.byte	0x23
 1167 037c 76       		.uleb128 0x76
 1168 037d 07       		.uleb128 0x7
 1169 037e 68020000 		.4byte	.LASF50
 1170 0382 03       		.byte	0x3
 1171 0383 76       		.byte	0x76
 1172 0384 6A000000 		.4byte	0x6a
 1173 0388 02       		.byte	0x2
 1174 0389 23       		.byte	0x23
 1175 038a 78       		.uleb128 0x78
 1176 038b 07       		.uleb128 0x7
 1177 038c E4040000 		.4byte	.LASF51
 1178 0390 03       		.byte	0x3
 1179 0391 77       		.byte	0x77
 1180 0392 4C000000 		.4byte	0x4c
 1181 0396 02       		.byte	0x2
 1182 0397 23       		.byte	0x23
 1183 0398 7A       		.uleb128 0x7a
 1184 0399 07       		.uleb128 0x7
 1185 039a 6D020000 		.4byte	.LASF52
 1186 039e 03       		.byte	0x3
 1187 039f 78       		.byte	0x78
 1188 03a0 6A000000 		.4byte	0x6a
 1189 03a4 02       		.byte	0x2
 1190 03a5 23       		.byte	0x23
 1191 03a6 7C       		.uleb128 0x7c
 1192 03a7 07       		.uleb128 0x7
 1193 03a8 EF040000 		.4byte	.LASF53
 1194 03ac 03       		.byte	0x3
 1195 03ad 79       		.byte	0x79
 1196 03ae 4C000000 		.4byte	0x4c
 1197 03b2 02       		.byte	0x2
 1198 03b3 23       		.byte	0x23
 1199 03b4 7E       		.uleb128 0x7e
 1200 03b5 07       		.uleb128 0x7
 1201 03b6 72020000 		.4byte	.LASF54
 1202 03ba 03       		.byte	0x3
 1203 03bb 7A       		.byte	0x7a
 1204 03bc 6A000000 		.4byte	0x6a
 1205 03c0 03       		.byte	0x3
 1206 03c1 23       		.byte	0x23
 1207 03c2 8001     		.uleb128 0x80
 1208 03c4 07       		.uleb128 0x7
 1209 03c5 27050000 		.4byte	.LASF55
 1210 03c9 03       		.byte	0x3
 1211 03ca 7B       		.byte	0x7b
 1212 03cb 4C000000 		.4byte	0x4c
 1213 03cf 03       		.byte	0x3
 1214 03d0 23       		.byte	0x23
 1215 03d1 8201     		.uleb128 0x82
 1216 03d3 07       		.uleb128 0x7
 1217 03d4 77020000 		.4byte	.LASF56
 1218 03d8 03       		.byte	0x3
 1219 03d9 7C       		.byte	0x7c
 1220 03da 6A000000 		.4byte	0x6a
 1221 03de 03       		.byte	0x3
 1222 03df 23       		.byte	0x23
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 110


 1223 03e0 8401     		.uleb128 0x84
 1224 03e2 07       		.uleb128 0x7
 1225 03e3 32050000 		.4byte	.LASF57
 1226 03e7 03       		.byte	0x3
 1227 03e8 7D       		.byte	0x7d
 1228 03e9 4C000000 		.4byte	0x4c
 1229 03ed 03       		.byte	0x3
 1230 03ee 23       		.byte	0x23
 1231 03ef 8601     		.uleb128 0x86
 1232 03f1 07       		.uleb128 0x7
 1233 03f2 7C020000 		.4byte	.LASF58
 1234 03f6 03       		.byte	0x3
 1235 03f7 7E       		.byte	0x7e
 1236 03f8 6A000000 		.4byte	0x6a
 1237 03fc 03       		.byte	0x3
 1238 03fd 23       		.byte	0x23
 1239 03fe 8801     		.uleb128 0x88
 1240 0400 07       		.uleb128 0x7
 1241 0401 3D050000 		.4byte	.LASF59
 1242 0405 03       		.byte	0x3
 1243 0406 7F       		.byte	0x7f
 1244 0407 4C000000 		.4byte	0x4c
 1245 040b 03       		.byte	0x3
 1246 040c 23       		.byte	0x23
 1247 040d 8A01     		.uleb128 0x8a
 1248 040f 07       		.uleb128 0x7
 1249 0410 1B030000 		.4byte	.LASF60
 1250 0414 03       		.byte	0x3
 1251 0415 80       		.byte	0x80
 1252 0416 6A000000 		.4byte	0x6a
 1253 041a 03       		.byte	0x3
 1254 041b 23       		.byte	0x23
 1255 041c 8C01     		.uleb128 0x8c
 1256 041e 07       		.uleb128 0x7
 1257 041f 48050000 		.4byte	.LASF61
 1258 0423 03       		.byte	0x3
 1259 0424 81       		.byte	0x81
 1260 0425 4C000000 		.4byte	0x4c
 1261 0429 03       		.byte	0x3
 1262 042a 23       		.byte	0x23
 1263 042b 8E01     		.uleb128 0x8e
 1264 042d 07       		.uleb128 0x7
 1265 042e 20030000 		.4byte	.LASF62
 1266 0432 03       		.byte	0x3
 1267 0433 82       		.byte	0x82
 1268 0434 6A000000 		.4byte	0x6a
 1269 0438 03       		.byte	0x3
 1270 0439 23       		.byte	0x23
 1271 043a 9001     		.uleb128 0x90
 1272 043c 07       		.uleb128 0x7
 1273 043d 53050000 		.4byte	.LASF63
 1274 0441 03       		.byte	0x3
 1275 0442 83       		.byte	0x83
 1276 0443 4C000000 		.4byte	0x4c
 1277 0447 03       		.byte	0x3
 1278 0448 23       		.byte	0x23
 1279 0449 9201     		.uleb128 0x92
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 111


 1280 044b 07       		.uleb128 0x7
 1281 044c 25030000 		.4byte	.LASF64
 1282 0450 03       		.byte	0x3
 1283 0451 84       		.byte	0x84
 1284 0452 6A000000 		.4byte	0x6a
 1285 0456 03       		.byte	0x3
 1286 0457 23       		.byte	0x23
 1287 0458 9401     		.uleb128 0x94
 1288 045a 07       		.uleb128 0x7
 1289 045b 5E050000 		.4byte	.LASF65
 1290 045f 03       		.byte	0x3
 1291 0460 85       		.byte	0x85
 1292 0461 4C000000 		.4byte	0x4c
 1293 0465 03       		.byte	0x3
 1294 0466 23       		.byte	0x23
 1295 0467 9601     		.uleb128 0x96
 1296 0469 07       		.uleb128 0x7
 1297 046a 2A030000 		.4byte	.LASF66
 1298 046e 03       		.byte	0x3
 1299 046f 86       		.byte	0x86
 1300 0470 6A000000 		.4byte	0x6a
 1301 0474 03       		.byte	0x3
 1302 0475 23       		.byte	0x23
 1303 0476 9801     		.uleb128 0x98
 1304 0478 07       		.uleb128 0x7
 1305 0479 69050000 		.4byte	.LASF67
 1306 047d 03       		.byte	0x3
 1307 047e 87       		.byte	0x87
 1308 047f 4C000000 		.4byte	0x4c
 1309 0483 03       		.byte	0x3
 1310 0484 23       		.byte	0x23
 1311 0485 9A01     		.uleb128 0x9a
 1312 0487 07       		.uleb128 0x7
 1313 0488 2F030000 		.4byte	.LASF68
 1314 048c 03       		.byte	0x3
 1315 048d 88       		.byte	0x88
 1316 048e 6A000000 		.4byte	0x6a
 1317 0492 03       		.byte	0x3
 1318 0493 23       		.byte	0x23
 1319 0494 9C01     		.uleb128 0x9c
 1320 0496 07       		.uleb128 0x7
 1321 0497 74050000 		.4byte	.LASF69
 1322 049b 03       		.byte	0x3
 1323 049c 89       		.byte	0x89
 1324 049d 4C000000 		.4byte	0x4c
 1325 04a1 03       		.byte	0x3
 1326 04a2 23       		.byte	0x23
 1327 04a3 9E01     		.uleb128 0x9e
 1328 04a5 07       		.uleb128 0x7
 1329 04a6 34030000 		.4byte	.LASF70
 1330 04aa 03       		.byte	0x3
 1331 04ab 8A       		.byte	0x8a
 1332 04ac 6A000000 		.4byte	0x6a
 1333 04b0 03       		.byte	0x3
 1334 04b1 23       		.byte	0x23
 1335 04b2 A001     		.uleb128 0xa0
 1336 04b4 07       		.uleb128 0x7
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 112


 1337 04b5 7F050000 		.4byte	.LASF71
 1338 04b9 03       		.byte	0x3
 1339 04ba 8B       		.byte	0x8b
 1340 04bb 4C000000 		.4byte	0x4c
 1341 04bf 03       		.byte	0x3
 1342 04c0 23       		.byte	0x23
 1343 04c1 A201     		.uleb128 0xa2
 1344 04c3 07       		.uleb128 0x7
 1345 04c4 39030000 		.4byte	.LASF72
 1346 04c8 03       		.byte	0x3
 1347 04c9 8C       		.byte	0x8c
 1348 04ca 6A000000 		.4byte	0x6a
 1349 04ce 03       		.byte	0x3
 1350 04cf 23       		.byte	0x23
 1351 04d0 A401     		.uleb128 0xa4
 1352 04d2 07       		.uleb128 0x7
 1353 04d3 8A050000 		.4byte	.LASF73
 1354 04d7 03       		.byte	0x3
 1355 04d8 8D       		.byte	0x8d
 1356 04d9 4C000000 		.4byte	0x4c
 1357 04dd 03       		.byte	0x3
 1358 04de 23       		.byte	0x23
 1359 04df A601     		.uleb128 0xa6
 1360 04e1 07       		.uleb128 0x7
 1361 04e2 3E030000 		.4byte	.LASF74
 1362 04e6 03       		.byte	0x3
 1363 04e7 8E       		.byte	0x8e
 1364 04e8 6A000000 		.4byte	0x6a
 1365 04ec 03       		.byte	0x3
 1366 04ed 23       		.byte	0x23
 1367 04ee A801     		.uleb128 0xa8
 1368 04f0 07       		.uleb128 0x7
 1369 04f1 24000000 		.4byte	.LASF75
 1370 04f5 03       		.byte	0x3
 1371 04f6 8F       		.byte	0x8f
 1372 04f7 4C000000 		.4byte	0x4c
 1373 04fb 03       		.byte	0x3
 1374 04fc 23       		.byte	0x23
 1375 04fd AA01     		.uleb128 0xaa
 1376 04ff 07       		.uleb128 0x7
 1377 0500 43030000 		.4byte	.LASF76
 1378 0504 03       		.byte	0x3
 1379 0505 90       		.byte	0x90
 1380 0506 6A000000 		.4byte	0x6a
 1381 050a 03       		.byte	0x3
 1382 050b 23       		.byte	0x23
 1383 050c AC01     		.uleb128 0xac
 1384 050e 07       		.uleb128 0x7
 1385 050f 2F000000 		.4byte	.LASF77
 1386 0513 03       		.byte	0x3
 1387 0514 91       		.byte	0x91
 1388 0515 4C000000 		.4byte	0x4c
 1389 0519 03       		.byte	0x3
 1390 051a 23       		.byte	0x23
 1391 051b AE01     		.uleb128 0xae
 1392 051d 07       		.uleb128 0x7
 1393 051e 48030000 		.4byte	.LASF78
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 113


 1394 0522 03       		.byte	0x3
 1395 0523 92       		.byte	0x92
 1396 0524 6A000000 		.4byte	0x6a
 1397 0528 03       		.byte	0x3
 1398 0529 23       		.byte	0x23
 1399 052a B001     		.uleb128 0xb0
 1400 052c 07       		.uleb128 0x7
 1401 052d 3A000000 		.4byte	.LASF79
 1402 0531 03       		.byte	0x3
 1403 0532 93       		.byte	0x93
 1404 0533 4C000000 		.4byte	0x4c
 1405 0537 03       		.byte	0x3
 1406 0538 23       		.byte	0x23
 1407 0539 B201     		.uleb128 0xb2
 1408 053b 07       		.uleb128 0x7
 1409 053c 8C030000 		.4byte	.LASF80
 1410 0540 03       		.byte	0x3
 1411 0541 94       		.byte	0x94
 1412 0542 6A000000 		.4byte	0x6a
 1413 0546 03       		.byte	0x3
 1414 0547 23       		.byte	0x23
 1415 0548 B401     		.uleb128 0xb4
 1416 054a 07       		.uleb128 0x7
 1417 054b 45000000 		.4byte	.LASF81
 1418 054f 03       		.byte	0x3
 1419 0550 95       		.byte	0x95
 1420 0551 4C000000 		.4byte	0x4c
 1421 0555 03       		.byte	0x3
 1422 0556 23       		.byte	0x23
 1423 0557 B601     		.uleb128 0xb6
 1424 0559 07       		.uleb128 0x7
 1425 055a 91030000 		.4byte	.LASF82
 1426 055e 03       		.byte	0x3
 1427 055f 96       		.byte	0x96
 1428 0560 6A000000 		.4byte	0x6a
 1429 0564 03       		.byte	0x3
 1430 0565 23       		.byte	0x23
 1431 0566 B801     		.uleb128 0xb8
 1432 0568 07       		.uleb128 0x7
 1433 0569 50000000 		.4byte	.LASF83
 1434 056d 03       		.byte	0x3
 1435 056e 97       		.byte	0x97
 1436 056f 4C000000 		.4byte	0x4c
 1437 0573 03       		.byte	0x3
 1438 0574 23       		.byte	0x23
 1439 0575 BA01     		.uleb128 0xba
 1440 0577 07       		.uleb128 0x7
 1441 0578 96030000 		.4byte	.LASF84
 1442 057c 03       		.byte	0x3
 1443 057d 98       		.byte	0x98
 1444 057e 6A000000 		.4byte	0x6a
 1445 0582 03       		.byte	0x3
 1446 0583 23       		.byte	0x23
 1447 0584 BC01     		.uleb128 0xbc
 1448 0586 07       		.uleb128 0x7
 1449 0587 81020000 		.4byte	.LASF85
 1450 058b 03       		.byte	0x3
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 114


 1451 058c 99       		.byte	0x99
 1452 058d 4C000000 		.4byte	0x4c
 1453 0591 03       		.byte	0x3
 1454 0592 23       		.byte	0x23
 1455 0593 BE01     		.uleb128 0xbe
 1456 0595 00       		.byte	0x0
 1457 0596 09       		.uleb128 0x9
 1458 0597 4C000000 		.4byte	0x4c
 1459 059b A6050000 		.4byte	0x5a6
 1460 059f 0A       		.uleb128 0xa
 1461 05a0 A6050000 		.4byte	0x5a6
 1462 05a4 04       		.byte	0x4
 1463 05a5 00       		.byte	0x0
 1464 05a6 0B       		.uleb128 0xb
 1465 05a7 04       		.byte	0x4
 1466 05a8 07       		.byte	0x7
 1467 05a9 0C       		.uleb128 0xc
 1468 05aa 18       		.byte	0x18
 1469 05ab 03       		.byte	0x3
 1470 05ac 0201     		.2byte	0x102
 1471 05ae 0C060000 		.4byte	0x60c
 1472 05b2 0D       		.uleb128 0xd
 1473 05b3 494D5200 		.ascii	"IMR\000"
 1474 05b7 03       		.byte	0x3
 1475 05b8 0301     		.2byte	0x103
 1476 05ba 65000000 		.4byte	0x65
 1477 05be 02       		.byte	0x2
 1478 05bf 23       		.byte	0x23
 1479 05c0 00       		.uleb128 0x0
 1480 05c1 0D       		.uleb128 0xd
 1481 05c2 454D5200 		.ascii	"EMR\000"
 1482 05c6 03       		.byte	0x3
 1483 05c7 0401     		.2byte	0x104
 1484 05c9 65000000 		.4byte	0x65
 1485 05cd 02       		.byte	0x2
 1486 05ce 23       		.byte	0x23
 1487 05cf 04       		.uleb128 0x4
 1488 05d0 0E       		.uleb128 0xe
 1489 05d1 4A020000 		.4byte	.LASF86
 1490 05d5 03       		.byte	0x3
 1491 05d6 0501     		.2byte	0x105
 1492 05d8 65000000 		.4byte	0x65
 1493 05dc 02       		.byte	0x2
 1494 05dd 23       		.byte	0x23
 1495 05de 08       		.uleb128 0x8
 1496 05df 0E       		.uleb128 0xe
 1497 05e0 BC030000 		.4byte	.LASF87
 1498 05e4 03       		.byte	0x3
 1499 05e5 0601     		.2byte	0x106
 1500 05e7 65000000 		.4byte	0x65
 1501 05eb 02       		.byte	0x2
 1502 05ec 23       		.byte	0x23
 1503 05ed 0C       		.uleb128 0xc
 1504 05ee 0E       		.uleb128 0xe
 1505 05ef 9A010000 		.4byte	.LASF88
 1506 05f3 03       		.byte	0x3
 1507 05f4 0701     		.2byte	0x107
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 115


 1508 05f6 65000000 		.4byte	0x65
 1509 05fa 02       		.byte	0x2
 1510 05fb 23       		.byte	0x23
 1511 05fc 10       		.uleb128 0x10
 1512 05fd 0D       		.uleb128 0xd
 1513 05fe 505200   		.ascii	"PR\000"
 1514 0601 03       		.byte	0x3
 1515 0602 0801     		.2byte	0x108
 1516 0604 65000000 		.4byte	0x65
 1517 0608 02       		.byte	0x2
 1518 0609 23       		.byte	0x23
 1519 060a 14       		.uleb128 0x14
 1520 060b 00       		.byte	0x0
 1521 060c 0C       		.uleb128 0xc
 1522 060d 24       		.byte	0x24
 1523 060e 03       		.byte	0x3
 1524 060f 0D01     		.2byte	0x10d
 1525 0611 9A060000 		.4byte	0x69a
 1526 0615 0D       		.uleb128 0xd
 1527 0616 41435200 		.ascii	"ACR\000"
 1528 061a 03       		.byte	0x3
 1529 061b 0E01     		.2byte	0x10e
 1530 061d 65000000 		.4byte	0x65
 1531 0621 02       		.byte	0x2
 1532 0622 23       		.byte	0x23
 1533 0623 00       		.uleb128 0x0
 1534 0624 0E       		.uleb128 0xe
 1535 0625 CF000000 		.4byte	.LASF89
 1536 0629 03       		.byte	0x3
 1537 062a 0F01     		.2byte	0x10f
 1538 062c 65000000 		.4byte	0x65
 1539 0630 02       		.byte	0x2
 1540 0631 23       		.byte	0x23
 1541 0632 04       		.uleb128 0x4
 1542 0633 0E       		.uleb128 0xe
 1543 0634 17010000 		.4byte	.LASF90
 1544 0638 03       		.byte	0x3
 1545 0639 1001     		.2byte	0x110
 1546 063b 65000000 		.4byte	0x65
 1547 063f 02       		.byte	0x2
 1548 0640 23       		.byte	0x23
 1549 0641 08       		.uleb128 0x8
 1550 0642 0D       		.uleb128 0xd
 1551 0643 535200   		.ascii	"SR\000"
 1552 0646 03       		.byte	0x3
 1553 0647 1101     		.2byte	0x111
 1554 0649 65000000 		.4byte	0x65
 1555 064d 02       		.byte	0x2
 1556 064e 23       		.byte	0x23
 1557 064f 0C       		.uleb128 0xc
 1558 0650 0D       		.uleb128 0xd
 1559 0651 435200   		.ascii	"CR\000"
 1560 0654 03       		.byte	0x3
 1561 0655 1201     		.2byte	0x112
 1562 0657 65000000 		.4byte	0x65
 1563 065b 02       		.byte	0x2
 1564 065c 23       		.byte	0x23
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 116


 1565 065d 10       		.uleb128 0x10
 1566 065e 0D       		.uleb128 0xd
 1567 065f 415200   		.ascii	"AR\000"
 1568 0662 03       		.byte	0x3
 1569 0663 1301     		.2byte	0x113
 1570 0665 65000000 		.4byte	0x65
 1571 0669 02       		.byte	0x2
 1572 066a 23       		.byte	0x23
 1573 066b 14       		.uleb128 0x14
 1574 066c 0E       		.uleb128 0xe
 1575 066d 00000000 		.4byte	.LASF91
 1576 0671 03       		.byte	0x3
 1577 0672 1401     		.2byte	0x114
 1578 0674 65000000 		.4byte	0x65
 1579 0678 02       		.byte	0x2
 1580 0679 23       		.byte	0x23
 1581 067a 18       		.uleb128 0x18
 1582 067b 0D       		.uleb128 0xd
 1583 067c 4F425200 		.ascii	"OBR\000"
 1584 0680 03       		.byte	0x3
 1585 0681 1501     		.2byte	0x115
 1586 0683 65000000 		.4byte	0x65
 1587 0687 02       		.byte	0x2
 1588 0688 23       		.byte	0x23
 1589 0689 1C       		.uleb128 0x1c
 1590 068a 0E       		.uleb128 0xe
 1591 068b 34020000 		.4byte	.LASF92
 1592 068f 03       		.byte	0x3
 1593 0690 1601     		.2byte	0x116
 1594 0692 65000000 		.4byte	0x65
 1595 0696 02       		.byte	0x2
 1596 0697 23       		.byte	0x23
 1597 0698 20       		.uleb128 0x20
 1598 0699 00       		.byte	0x0
 1599 069a 0C       		.uleb128 0xc
 1600 069b 1C       		.byte	0x1c
 1601 069c 03       		.byte	0x3
 1602 069d 4F01     		.2byte	0x14f
 1603 069f 0D070000 		.4byte	0x70d
 1604 06a3 0D       		.uleb128 0xd
 1605 06a4 43524C00 		.ascii	"CRL\000"
 1606 06a8 03       		.byte	0x3
 1607 06a9 5001     		.2byte	0x150
 1608 06ab 65000000 		.4byte	0x65
 1609 06af 02       		.byte	0x2
 1610 06b0 23       		.byte	0x23
 1611 06b1 00       		.uleb128 0x0
 1612 06b2 0D       		.uleb128 0xd
 1613 06b3 43524800 		.ascii	"CRH\000"
 1614 06b7 03       		.byte	0x3
 1615 06b8 5101     		.2byte	0x151
 1616 06ba 65000000 		.4byte	0x65
 1617 06be 02       		.byte	0x2
 1618 06bf 23       		.byte	0x23
 1619 06c0 04       		.uleb128 0x4
 1620 06c1 0D       		.uleb128 0xd
 1621 06c2 49445200 		.ascii	"IDR\000"
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 117


 1622 06c6 03       		.byte	0x3
 1623 06c7 5201     		.2byte	0x152
 1624 06c9 65000000 		.4byte	0x65
 1625 06cd 02       		.byte	0x2
 1626 06ce 23       		.byte	0x23
 1627 06cf 08       		.uleb128 0x8
 1628 06d0 0D       		.uleb128 0xd
 1629 06d1 4F445200 		.ascii	"ODR\000"
 1630 06d5 03       		.byte	0x3
 1631 06d6 5301     		.2byte	0x153
 1632 06d8 65000000 		.4byte	0x65
 1633 06dc 02       		.byte	0x2
 1634 06dd 23       		.byte	0x23
 1635 06de 0C       		.uleb128 0xc
 1636 06df 0E       		.uleb128 0xe
 1637 06e0 11000000 		.4byte	.LASF93
 1638 06e4 03       		.byte	0x3
 1639 06e5 5401     		.2byte	0x154
 1640 06e7 65000000 		.4byte	0x65
 1641 06eb 02       		.byte	0x2
 1642 06ec 23       		.byte	0x23
 1643 06ed 10       		.uleb128 0x10
 1644 06ee 0D       		.uleb128 0xd
 1645 06ef 42525200 		.ascii	"BRR\000"
 1646 06f3 03       		.byte	0x3
 1647 06f4 5501     		.2byte	0x155
 1648 06f6 65000000 		.4byte	0x65
 1649 06fa 02       		.byte	0x2
 1650 06fb 23       		.byte	0x23
 1651 06fc 14       		.uleb128 0x14
 1652 06fd 0E       		.uleb128 0xe
 1653 06fe F7010000 		.4byte	.LASF94
 1654 0702 03       		.byte	0x3
 1655 0703 5601     		.2byte	0x156
 1656 0705 65000000 		.4byte	0x65
 1657 0709 02       		.byte	0x2
 1658 070a 23       		.byte	0x23
 1659 070b 18       		.uleb128 0x18
 1660 070c 00       		.byte	0x0
 1661 070d 0C       		.uleb128 0xc
 1662 070e 18       		.byte	0x18
 1663 070f 03       		.byte	0x3
 1664 0710 5A01     		.2byte	0x15a
 1665 0712 44070000 		.4byte	0x744
 1666 0716 0E       		.uleb128 0xe
 1667 0717 0F050000 		.4byte	.LASF95
 1668 071b 03       		.byte	0x3
 1669 071c 5B01     		.2byte	0x15b
 1670 071e 65000000 		.4byte	0x65
 1671 0722 02       		.byte	0x2
 1672 0723 23       		.byte	0x23
 1673 0724 00       		.uleb128 0x0
 1674 0725 0E       		.uleb128 0xe
 1675 0726 CA000000 		.4byte	.LASF96
 1676 072a 03       		.byte	0x3
 1677 072b 5C01     		.2byte	0x15c
 1678 072d 65000000 		.4byte	0x65
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 118


 1679 0731 02       		.byte	0x2
 1680 0732 23       		.byte	0x23
 1681 0733 04       		.uleb128 0x4
 1682 0734 0E       		.uleb128 0xe
 1683 0735 A0010000 		.4byte	.LASF97
 1684 0739 03       		.byte	0x3
 1685 073a 5D01     		.2byte	0x15d
 1686 073c 54070000 		.4byte	0x754
 1687 0740 02       		.byte	0x2
 1688 0741 23       		.byte	0x23
 1689 0742 08       		.uleb128 0x8
 1690 0743 00       		.byte	0x0
 1691 0744 09       		.uleb128 0x9
 1692 0745 45000000 		.4byte	0x45
 1693 0749 54070000 		.4byte	0x754
 1694 074d 0A       		.uleb128 0xa
 1695 074e A6050000 		.4byte	0x5a6
 1696 0752 03       		.byte	0x3
 1697 0753 00       		.byte	0x0
 1698 0754 04       		.uleb128 0x4
 1699 0755 44070000 		.4byte	0x744
 1700 0759 0C       		.uleb128 0xc
 1701 075a 10       		.byte	0x10
 1702 075b 03       		.byte	0x3
 1703 075c 7901     		.2byte	0x179
 1704 075e 9C070000 		.4byte	0x79c
 1705 0762 0D       		.uleb128 0xd
 1706 0763 4B5200   		.ascii	"KR\000"
 1707 0766 03       		.byte	0x3
 1708 0767 7A01     		.2byte	0x17a
 1709 0769 65000000 		.4byte	0x65
 1710 076d 02       		.byte	0x2
 1711 076e 23       		.byte	0x23
 1712 076f 00       		.uleb128 0x0
 1713 0770 0D       		.uleb128 0xd
 1714 0771 505200   		.ascii	"PR\000"
 1715 0774 03       		.byte	0x3
 1716 0775 7B01     		.2byte	0x17b
 1717 0777 65000000 		.4byte	0x65
 1718 077b 02       		.byte	0x2
 1719 077c 23       		.byte	0x23
 1720 077d 04       		.uleb128 0x4
 1721 077e 0D       		.uleb128 0xd
 1722 077f 524C5200 		.ascii	"RLR\000"
 1723 0783 03       		.byte	0x3
 1724 0784 7C01     		.2byte	0x17c
 1725 0786 65000000 		.4byte	0x65
 1726 078a 02       		.byte	0x2
 1727 078b 23       		.byte	0x23
 1728 078c 08       		.uleb128 0x8
 1729 078d 0D       		.uleb128 0xd
 1730 078e 535200   		.ascii	"SR\000"
 1731 0791 03       		.byte	0x3
 1732 0792 7D01     		.2byte	0x17d
 1733 0794 65000000 		.4byte	0x65
 1734 0798 02       		.byte	0x2
 1735 0799 23       		.byte	0x23
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 119


 1736 079a 0C       		.uleb128 0xc
 1737 079b 00       		.byte	0x0
 1738 079c 0F       		.uleb128 0xf
 1739 079d 3C03     		.2byte	0x33c
 1740 079f 03       		.byte	0x3
 1741 07a0 8201     		.2byte	0x182
 1742 07a2 55080000 		.4byte	0x855
 1743 07a6 0E       		.uleb128 0xe
 1744 07a7 DE000000 		.4byte	.LASF98
 1745 07ab 03       		.byte	0x3
 1746 07ac 8301     		.2byte	0x183
 1747 07ae 65080000 		.4byte	0x865
 1748 07b2 02       		.byte	0x2
 1749 07b3 23       		.byte	0x23
 1750 07b4 00       		.uleb128 0x0
 1751 07b5 0E       		.uleb128 0xe
 1752 07b6 91020000 		.4byte	.LASF6
 1753 07ba 03       		.byte	0x3
 1754 07bb 8401     		.2byte	0x184
 1755 07bd 6A080000 		.4byte	0x86a
 1756 07c1 02       		.byte	0x2
 1757 07c2 23       		.byte	0x23
 1758 07c3 08       		.uleb128 0x8
 1759 07c4 0E       		.uleb128 0xe
 1760 07c5 5D040000 		.4byte	.LASF99
 1761 07c9 03       		.byte	0x3
 1762 07ca 8501     		.2byte	0x185
 1763 07cc 7A080000 		.4byte	0x87a
 1764 07d0 03       		.byte	0x3
 1765 07d1 23       		.byte	0x23
 1766 07d2 8001     		.uleb128 0x80
 1767 07d4 0E       		.uleb128 0xe
 1768 07d5 F2000000 		.4byte	.LASF100
 1769 07d9 03       		.byte	0x3
 1770 07da 8601     		.2byte	0x186
 1771 07dc 6A080000 		.4byte	0x86a
 1772 07e0 03       		.byte	0x3
 1773 07e1 23       		.byte	0x23
 1774 07e2 8801     		.uleb128 0x88
 1775 07e4 0E       		.uleb128 0xe
 1776 07e5 FA040000 		.4byte	.LASF101
 1777 07e9 03       		.byte	0x3
 1778 07ea 8701     		.2byte	0x187
 1779 07ec 7F080000 		.4byte	0x87f
 1780 07f0 03       		.byte	0x3
 1781 07f1 23       		.byte	0x23
 1782 07f2 8002     		.uleb128 0x100
 1783 07f4 0E       		.uleb128 0xe
 1784 07f5 A5020000 		.4byte	.LASF8
 1785 07f9 03       		.byte	0x3
 1786 07fa 8801     		.2byte	0x188
 1787 07fc 6A080000 		.4byte	0x86a
 1788 0800 03       		.byte	0x3
 1789 0801 23       		.byte	0x23
 1790 0802 8802     		.uleb128 0x108
 1791 0804 0E       		.uleb128 0xe
 1792 0805 16000000 		.4byte	.LASF102
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 120


 1793 0809 03       		.byte	0x3
 1794 080a 8901     		.2byte	0x189
 1795 080c 84080000 		.4byte	0x884
 1796 0810 03       		.byte	0x3
 1797 0811 23       		.byte	0x23
 1798 0812 8003     		.uleb128 0x180
 1799 0814 0E       		.uleb128 0xe
 1800 0815 AF020000 		.4byte	.LASF9
 1801 0819 03       		.byte	0x3
 1802 081a 8A01     		.2byte	0x18a
 1803 081c 6A080000 		.4byte	0x86a
 1804 0820 03       		.byte	0x3
 1805 0821 23       		.byte	0x23
 1806 0822 8803     		.uleb128 0x188
 1807 0824 0E       		.uleb128 0xe
 1808 0825 62040000 		.4byte	.LASF103
 1809 0829 03       		.byte	0x3
 1810 082a 8B01     		.2byte	0x18b
 1811 082c 89080000 		.4byte	0x889
 1812 0830 03       		.byte	0x3
 1813 0831 23       		.byte	0x23
 1814 0832 8004     		.uleb128 0x200
 1815 0834 0E       		.uleb128 0xe
 1816 0835 B9020000 		.4byte	.LASF10
 1817 0839 03       		.byte	0x3
 1818 083a 8C01     		.2byte	0x18c
 1819 083c 8E080000 		.4byte	0x88e
 1820 0840 03       		.byte	0x3
 1821 0841 23       		.byte	0x23
 1822 0842 8804     		.uleb128 0x208
 1823 0844 0D       		.uleb128 0xd
 1824 0845 49505200 		.ascii	"IPR\000"
 1825 0849 03       		.byte	0x3
 1826 084a 8D01     		.2byte	0x18d
 1827 084c AE080000 		.4byte	0x8ae
 1828 0850 03       		.byte	0x3
 1829 0851 23       		.byte	0x23
 1830 0852 8006     		.uleb128 0x300
 1831 0854 00       		.byte	0x0
 1832 0855 09       		.uleb128 0x9
 1833 0856 45000000 		.4byte	0x45
 1834 085a 65080000 		.4byte	0x865
 1835 085e 0A       		.uleb128 0xa
 1836 085f A6050000 		.4byte	0x5a6
 1837 0863 01       		.byte	0x1
 1838 0864 00       		.byte	0x0
 1839 0865 04       		.uleb128 0x4
 1840 0866 55080000 		.4byte	0x855
 1841 086a 09       		.uleb128 0x9
 1842 086b 3A000000 		.4byte	0x3a
 1843 086f 7A080000 		.4byte	0x87a
 1844 0873 0A       		.uleb128 0xa
 1845 0874 A6050000 		.4byte	0x5a6
 1846 0878 1D       		.byte	0x1d
 1847 0879 00       		.byte	0x0
 1848 087a 04       		.uleb128 0x4
 1849 087b 55080000 		.4byte	0x855
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 121


 1850 087f 04       		.uleb128 0x4
 1851 0880 55080000 		.4byte	0x855
 1852 0884 04       		.uleb128 0x4
 1853 0885 55080000 		.4byte	0x855
 1854 0889 04       		.uleb128 0x4
 1855 088a 55080000 		.4byte	0x855
 1856 088e 09       		.uleb128 0x9
 1857 088f 3A000000 		.4byte	0x3a
 1858 0893 9E080000 		.4byte	0x89e
 1859 0897 0A       		.uleb128 0xa
 1860 0898 A6050000 		.4byte	0x5a6
 1861 089c 3D       		.byte	0x3d
 1862 089d 00       		.byte	0x0
 1863 089e 09       		.uleb128 0x9
 1864 089f 45000000 		.4byte	0x45
 1865 08a3 AE080000 		.4byte	0x8ae
 1866 08a7 0A       		.uleb128 0xa
 1867 08a8 A6050000 		.4byte	0x5a6
 1868 08ac 0E       		.byte	0xe
 1869 08ad 00       		.byte	0x0
 1870 08ae 04       		.uleb128 0x4
 1871 08af 9E080000 		.4byte	0x89e
 1872 08b3 0C       		.uleb128 0xc
 1873 08b4 40       		.byte	0x40
 1874 08b5 03       		.byte	0x3
 1875 08b6 9101     		.2byte	0x191
 1876 08b8 8F090000 		.4byte	0x98f
 1877 08bc 0E       		.uleb128 0xe
 1878 08bd 45010000 		.4byte	.LASF104
 1879 08c1 03       		.byte	0x3
 1880 08c2 9201     		.2byte	0x192
 1881 08c4 6F000000 		.4byte	0x6f
 1882 08c8 02       		.byte	0x2
 1883 08c9 23       		.byte	0x23
 1884 08ca 00       		.uleb128 0x0
 1885 08cb 0E       		.uleb128 0xe
 1886 08cc 8E010000 		.4byte	.LASF105
 1887 08d0 03       		.byte	0x3
 1888 08d1 9301     		.2byte	0x193
 1889 08d3 65000000 		.4byte	0x65
 1890 08d7 02       		.byte	0x2
 1891 08d8 23       		.byte	0x23
 1892 08d9 04       		.uleb128 0x4
 1893 08da 0E       		.uleb128 0xe
 1894 08db 77030000 		.4byte	.LASF106
 1895 08df 03       		.byte	0x3
 1896 08e0 9401     		.2byte	0x194
 1897 08e2 65000000 		.4byte	0x65
 1898 08e6 02       		.byte	0x2
 1899 08e7 23       		.byte	0x23
 1900 08e8 08       		.uleb128 0x8
 1901 08e9 0E       		.uleb128 0xe
 1902 08ea 88010000 		.4byte	.LASF107
 1903 08ee 03       		.byte	0x3
 1904 08ef 9501     		.2byte	0x195
 1905 08f1 65000000 		.4byte	0x65
 1906 08f5 02       		.byte	0x2
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 122


 1907 08f6 23       		.byte	0x23
 1908 08f7 0C       		.uleb128 0xc
 1909 08f8 0D       		.uleb128 0xd
 1910 08f9 53435200 		.ascii	"SCR\000"
 1911 08fd 03       		.byte	0x3
 1912 08fe 9601     		.2byte	0x196
 1913 0900 65000000 		.4byte	0x65
 1914 0904 02       		.byte	0x2
 1915 0905 23       		.byte	0x23
 1916 0906 10       		.uleb128 0x10
 1917 0907 0D       		.uleb128 0xd
 1918 0908 43435200 		.ascii	"CCR\000"
 1919 090c 03       		.byte	0x3
 1920 090d 9701     		.2byte	0x197
 1921 090f 65000000 		.4byte	0x65
 1922 0913 02       		.byte	0x2
 1923 0914 23       		.byte	0x23
 1924 0915 14       		.uleb128 0x14
 1925 0916 0E       		.uleb128 0xe
 1926 0917 4B010000 		.4byte	.LASF108
 1927 091b 03       		.byte	0x3
 1928 091c 9801     		.2byte	0x198
 1929 091e 9F090000 		.4byte	0x99f
 1930 0922 02       		.byte	0x2
 1931 0923 23       		.byte	0x23
 1932 0924 18       		.uleb128 0x18
 1933 0925 0E       		.uleb128 0xe
 1934 0926 D6010000 		.4byte	.LASF109
 1935 092a 03       		.byte	0x3
 1936 092b 9901     		.2byte	0x199
 1937 092d 65000000 		.4byte	0x65
 1938 0931 02       		.byte	0x2
 1939 0932 23       		.byte	0x23
 1940 0933 24       		.uleb128 0x24
 1941 0934 0E       		.uleb128 0xe
 1942 0935 DC010000 		.4byte	.LASF110
 1943 0939 03       		.byte	0x3
 1944 093a 9A01     		.2byte	0x19a
 1945 093c 65000000 		.4byte	0x65
 1946 0940 02       		.byte	0x2
 1947 0941 23       		.byte	0x23
 1948 0942 28       		.uleb128 0x28
 1949 0943 0E       		.uleb128 0xe
 1950 0944 C5000000 		.4byte	.LASF111
 1951 0948 03       		.byte	0x3
 1952 0949 9B01     		.2byte	0x19b
 1953 094b 65000000 		.4byte	0x65
 1954 094f 02       		.byte	0x2
 1955 0950 23       		.byte	0x23
 1956 0951 2C       		.uleb128 0x2c
 1957 0952 0E       		.uleb128 0xe
 1958 0953 BB000000 		.4byte	.LASF112
 1959 0957 03       		.byte	0x3
 1960 0958 9C01     		.2byte	0x19c
 1961 095a 65000000 		.4byte	0x65
 1962 095e 02       		.byte	0x2
 1963 095f 23       		.byte	0x23
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 123


 1964 0960 30       		.uleb128 0x30
 1965 0961 0E       		.uleb128 0xe
 1966 0962 FF040000 		.4byte	.LASF113
 1967 0966 03       		.byte	0x3
 1968 0967 9D01     		.2byte	0x19d
 1969 0969 65000000 		.4byte	0x65
 1970 096d 02       		.byte	0x2
 1971 096e 23       		.byte	0x23
 1972 096f 34       		.uleb128 0x34
 1973 0970 0E       		.uleb128 0xe
 1974 0971 72030000 		.4byte	.LASF114
 1975 0975 03       		.byte	0x3
 1976 0976 9E01     		.2byte	0x19e
 1977 0978 65000000 		.4byte	0x65
 1978 097c 02       		.byte	0x2
 1979 097d 23       		.byte	0x23
 1980 097e 38       		.uleb128 0x38
 1981 097f 0E       		.uleb128 0xe
 1982 0980 70010000 		.4byte	.LASF115
 1983 0984 03       		.byte	0x3
 1984 0985 9F01     		.2byte	0x19f
 1985 0987 65000000 		.4byte	0x65
 1986 098b 02       		.byte	0x2
 1987 098c 23       		.byte	0x23
 1988 098d 3C       		.uleb128 0x3c
 1989 098e 00       		.byte	0x0
 1990 098f 09       		.uleb128 0x9
 1991 0990 45000000 		.4byte	0x45
 1992 0994 9F090000 		.4byte	0x99f
 1993 0998 0A       		.uleb128 0xa
 1994 0999 A6050000 		.4byte	0x5a6
 1995 099d 02       		.byte	0x2
 1996 099e 00       		.byte	0x0
 1997 099f 04       		.uleb128 0x4
 1998 09a0 8F090000 		.4byte	0x98f
 1999 09a4 0C       		.uleb128 0xc
 2000 09a5 08       		.byte	0x8
 2001 09a6 03       		.byte	0x3
 2002 09a7 A401     		.2byte	0x1a4
 2003 09a9 CB090000 		.4byte	0x9cb
 2004 09ad 0D       		.uleb128 0xd
 2005 09ae 435200   		.ascii	"CR\000"
 2006 09b1 03       		.byte	0x3
 2007 09b2 A501     		.2byte	0x1a5
 2008 09b4 65000000 		.4byte	0x65
 2009 09b8 02       		.byte	0x2
 2010 09b9 23       		.byte	0x23
 2011 09ba 00       		.uleb128 0x0
 2012 09bb 0D       		.uleb128 0xd
 2013 09bc 43535200 		.ascii	"CSR\000"
 2014 09c0 03       		.byte	0x3
 2015 09c1 A601     		.2byte	0x1a6
 2016 09c3 65000000 		.4byte	0x65
 2017 09c7 02       		.byte	0x2
 2018 09c8 23       		.byte	0x23
 2019 09c9 04       		.uleb128 0x4
 2020 09ca 00       		.byte	0x0
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 124


 2021 09cb 0C       		.uleb128 0xc
 2022 09cc 28       		.byte	0x28
 2023 09cd 03       		.byte	0x3
 2024 09ce AB01     		.2byte	0x1ab
 2025 09d0 6A0A0000 		.4byte	0xa6a
 2026 09d4 0D       		.uleb128 0xd
 2027 09d5 435200   		.ascii	"CR\000"
 2028 09d8 03       		.byte	0x3
 2029 09d9 AC01     		.2byte	0x1ac
 2030 09db 65000000 		.4byte	0x65
 2031 09df 02       		.byte	0x2
 2032 09e0 23       		.byte	0x23
 2033 09e1 00       		.uleb128 0x0
 2034 09e2 0E       		.uleb128 0xe
 2035 09e3 58040000 		.4byte	.LASF116
 2036 09e7 03       		.byte	0x3
 2037 09e8 AD01     		.2byte	0x1ad
 2038 09ea 65000000 		.4byte	0x65
 2039 09ee 02       		.byte	0x2
 2040 09ef 23       		.byte	0x23
 2041 09f0 04       		.uleb128 0x4
 2042 09f1 0D       		.uleb128 0xd
 2043 09f2 43495200 		.ascii	"CIR\000"
 2044 09f6 03       		.byte	0x3
 2045 09f7 AE01     		.2byte	0x1ae
 2046 09f9 65000000 		.4byte	0x65
 2047 09fd 02       		.byte	0x2
 2048 09fe 23       		.byte	0x23
 2049 09ff 08       		.uleb128 0x8
 2050 0a00 0E       		.uleb128 0xe
 2051 0a01 1B000000 		.4byte	.LASF117
 2052 0a05 03       		.byte	0x3
 2053 0a06 AF01     		.2byte	0x1af
 2054 0a08 65000000 		.4byte	0x65
 2055 0a0c 02       		.byte	0x2
 2056 0a0d 23       		.byte	0x23
 2057 0a0e 0C       		.uleb128 0xc
 2058 0a0f 0E       		.uleb128 0xe
 2059 0a10 7A010000 		.4byte	.LASF118
 2060 0a14 03       		.byte	0x3
 2061 0a15 B001     		.2byte	0x1b0
 2062 0a17 65000000 		.4byte	0x65
 2063 0a1b 02       		.byte	0x2
 2064 0a1c 23       		.byte	0x23
 2065 0a1d 10       		.uleb128 0x10
 2066 0a1e 0E       		.uleb128 0xe
 2067 0a1f 93010000 		.4byte	.LASF119
 2068 0a23 03       		.byte	0x3
 2069 0a24 B101     		.2byte	0x1b1
 2070 0a26 65000000 		.4byte	0x65
 2071 0a2a 02       		.byte	0x2
 2072 0a2b 23       		.byte	0x23
 2073 0a2c 14       		.uleb128 0x14
 2074 0a2d 0E       		.uleb128 0xe
 2075 0a2e 03030000 		.4byte	.LASF120
 2076 0a32 03       		.byte	0x3
 2077 0a33 B201     		.2byte	0x1b2
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 125


 2078 0a35 65000000 		.4byte	0x65
 2079 0a39 02       		.byte	0x2
 2080 0a3a 23       		.byte	0x23
 2081 0a3b 18       		.uleb128 0x18
 2082 0a3c 0E       		.uleb128 0xe
 2083 0a3d 09000000 		.4byte	.LASF121
 2084 0a41 03       		.byte	0x3
 2085 0a42 B301     		.2byte	0x1b3
 2086 0a44 65000000 		.4byte	0x65
 2087 0a48 02       		.byte	0x2
 2088 0a49 23       		.byte	0x23
 2089 0a4a 1C       		.uleb128 0x1c
 2090 0a4b 0E       		.uleb128 0xe
 2091 0a4c C0000000 		.4byte	.LASF122
 2092 0a50 03       		.byte	0x3
 2093 0a51 B401     		.2byte	0x1b4
 2094 0a53 65000000 		.4byte	0x65
 2095 0a57 02       		.byte	0x2
 2096 0a58 23       		.byte	0x23
 2097 0a59 20       		.uleb128 0x20
 2098 0a5a 0D       		.uleb128 0xd
 2099 0a5b 43535200 		.ascii	"CSR\000"
 2100 0a5f 03       		.byte	0x3
 2101 0a60 B501     		.2byte	0x1b5
 2102 0a62 65000000 		.4byte	0x65
 2103 0a66 02       		.byte	0x2
 2104 0a67 23       		.byte	0x23
 2105 0a68 24       		.uleb128 0x24
 2106 0a69 00       		.byte	0x0
 2107 0a6a 0C       		.uleb128 0xc
 2108 0a6b 28       		.byte	0x28
 2109 0a6c 03       		.byte	0x3
 2110 0a6d BA01     		.2byte	0x1ba
 2111 0a6f A00B0000 		.4byte	0xba0
 2112 0a73 0D       		.uleb128 0xd
 2113 0a74 43524800 		.ascii	"CRH\000"
 2114 0a78 03       		.byte	0x3
 2115 0a79 BB01     		.2byte	0x1bb
 2116 0a7b 6A000000 		.4byte	0x6a
 2117 0a7f 02       		.byte	0x2
 2118 0a80 23       		.byte	0x23
 2119 0a81 00       		.uleb128 0x0
 2120 0a82 0E       		.uleb128 0xe
 2121 0a83 91020000 		.4byte	.LASF6
 2122 0a87 03       		.byte	0x3
 2123 0a88 BC01     		.2byte	0x1bc
 2124 0a8a 4C000000 		.4byte	0x4c
 2125 0a8e 02       		.byte	0x2
 2126 0a8f 23       		.byte	0x23
 2127 0a90 02       		.uleb128 0x2
 2128 0a91 0D       		.uleb128 0xd
 2129 0a92 43524C00 		.ascii	"CRL\000"
 2130 0a96 03       		.byte	0x3
 2131 0a97 BD01     		.2byte	0x1bd
 2132 0a99 6A000000 		.4byte	0x6a
 2133 0a9d 02       		.byte	0x2
 2134 0a9e 23       		.byte	0x23
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 126


 2135 0a9f 04       		.uleb128 0x4
 2136 0aa0 0E       		.uleb128 0xe
 2137 0aa1 9B020000 		.4byte	.LASF7
 2138 0aa5 03       		.byte	0x3
 2139 0aa6 BE01     		.2byte	0x1be
 2140 0aa8 4C000000 		.4byte	0x4c
 2141 0aac 02       		.byte	0x2
 2142 0aad 23       		.byte	0x23
 2143 0aae 06       		.uleb128 0x6
 2144 0aaf 0E       		.uleb128 0xe
 2145 0ab0 3B010000 		.4byte	.LASF123
 2146 0ab4 03       		.byte	0x3
 2147 0ab5 BF01     		.2byte	0x1bf
 2148 0ab7 6A000000 		.4byte	0x6a
 2149 0abb 02       		.byte	0x2
 2150 0abc 23       		.byte	0x23
 2151 0abd 08       		.uleb128 0x8
 2152 0abe 0E       		.uleb128 0xe
 2153 0abf A5020000 		.4byte	.LASF8
 2154 0ac3 03       		.byte	0x3
 2155 0ac4 C001     		.2byte	0x1c0
 2156 0ac6 4C000000 		.4byte	0x4c
 2157 0aca 02       		.byte	0x2
 2158 0acb 23       		.byte	0x23
 2159 0acc 0A       		.uleb128 0xa
 2160 0acd 0E       		.uleb128 0xe
 2161 0ace 40010000 		.4byte	.LASF124
 2162 0ad2 03       		.byte	0x3
 2163 0ad3 C101     		.2byte	0x1c1
 2164 0ad5 6A000000 		.4byte	0x6a
 2165 0ad9 02       		.byte	0x2
 2166 0ada 23       		.byte	0x23
 2167 0adb 0C       		.uleb128 0xc
 2168 0adc 0E       		.uleb128 0xe
 2169 0add AF020000 		.4byte	.LASF9
 2170 0ae1 03       		.byte	0x3
 2171 0ae2 C201     		.2byte	0x1c2
 2172 0ae4 4C000000 		.4byte	0x4c
 2173 0ae8 02       		.byte	0x2
 2174 0ae9 23       		.byte	0x23
 2175 0aea 0E       		.uleb128 0xe
 2176 0aeb 0E       		.uleb128 0xe
 2177 0aec A7010000 		.4byte	.LASF125
 2178 0af0 03       		.byte	0x3
 2179 0af1 C301     		.2byte	0x1c3
 2180 0af3 6A000000 		.4byte	0x6a
 2181 0af7 02       		.byte	0x2
 2182 0af8 23       		.byte	0x23
 2183 0af9 10       		.uleb128 0x10
 2184 0afa 0E       		.uleb128 0xe
 2185 0afb B9020000 		.4byte	.LASF10
 2186 0aff 03       		.byte	0x3
 2187 0b00 C401     		.2byte	0x1c4
 2188 0b02 4C000000 		.4byte	0x4c
 2189 0b06 02       		.byte	0x2
 2190 0b07 23       		.byte	0x23
 2191 0b08 12       		.uleb128 0x12
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 127


 2192 0b09 0E       		.uleb128 0xe
 2193 0b0a B1010000 		.4byte	.LASF126
 2194 0b0e 03       		.byte	0x3
 2195 0b0f C501     		.2byte	0x1c5
 2196 0b11 6A000000 		.4byte	0x6a
 2197 0b15 02       		.byte	0x2
 2198 0b16 23       		.byte	0x23
 2199 0b17 14       		.uleb128 0x14
 2200 0b18 0E       		.uleb128 0xe
 2201 0b19 C3020000 		.4byte	.LASF11
 2202 0b1d 03       		.byte	0x3
 2203 0b1e C601     		.2byte	0x1c6
 2204 0b20 4C000000 		.4byte	0x4c
 2205 0b24 02       		.byte	0x2
 2206 0b25 23       		.byte	0x23
 2207 0b26 16       		.uleb128 0x16
 2208 0b27 0E       		.uleb128 0xe
 2209 0b28 58030000 		.4byte	.LASF127
 2210 0b2c 03       		.byte	0x3
 2211 0b2d C701     		.2byte	0x1c7
 2212 0b2f 6A000000 		.4byte	0x6a
 2213 0b33 02       		.byte	0x2
 2214 0b34 23       		.byte	0x23
 2215 0b35 18       		.uleb128 0x18
 2216 0b36 0E       		.uleb128 0xe
 2217 0b37 CD020000 		.4byte	.LASF12
 2218 0b3b 03       		.byte	0x3
 2219 0b3c C801     		.2byte	0x1c8
 2220 0b3e 4C000000 		.4byte	0x4c
 2221 0b42 02       		.byte	0x2
 2222 0b43 23       		.byte	0x23
 2223 0b44 1A       		.uleb128 0x1a
 2224 0b45 0E       		.uleb128 0xe
 2225 0b46 5D030000 		.4byte	.LASF128
 2226 0b4a 03       		.byte	0x3
 2227 0b4b C901     		.2byte	0x1c9
 2228 0b4d 6A000000 		.4byte	0x6a
 2229 0b51 02       		.byte	0x2
 2230 0b52 23       		.byte	0x23
 2231 0b53 1C       		.uleb128 0x1c
 2232 0b54 0E       		.uleb128 0xe
 2233 0b55 05050000 		.4byte	.LASF13
 2234 0b59 03       		.byte	0x3
 2235 0b5a CA01     		.2byte	0x1ca
 2236 0b5c 4C000000 		.4byte	0x4c
 2237 0b60 02       		.byte	0x2
 2238 0b61 23       		.byte	0x23
 2239 0b62 1E       		.uleb128 0x1e
 2240 0b63 0E       		.uleb128 0xe
 2241 0b64 8C020000 		.4byte	.LASF129
 2242 0b68 03       		.byte	0x3
 2243 0b69 CB01     		.2byte	0x1cb
 2244 0b6b 6A000000 		.4byte	0x6a
 2245 0b6f 02       		.byte	0x2
 2246 0b70 23       		.byte	0x23
 2247 0b71 20       		.uleb128 0x20
 2248 0b72 0E       		.uleb128 0xe
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 128


 2249 0b73 E1020000 		.4byte	.LASF14
 2250 0b77 03       		.byte	0x3
 2251 0b78 CC01     		.2byte	0x1cc
 2252 0b7a 4C000000 		.4byte	0x4c
 2253 0b7e 02       		.byte	0x2
 2254 0b7f 23       		.byte	0x23
 2255 0b80 22       		.uleb128 0x22
 2256 0b81 0E       		.uleb128 0xe
 2257 0b82 45020000 		.4byte	.LASF130
 2258 0b86 03       		.byte	0x3
 2259 0b87 CD01     		.2byte	0x1cd
 2260 0b89 6A000000 		.4byte	0x6a
 2261 0b8d 02       		.byte	0x2
 2262 0b8e 23       		.byte	0x23
 2263 0b8f 24       		.uleb128 0x24
 2264 0b90 0E       		.uleb128 0xe
 2265 0b91 EB020000 		.4byte	.LASF15
 2266 0b95 03       		.byte	0x3
 2267 0b96 CE01     		.2byte	0x1ce
 2268 0b98 4C000000 		.4byte	0x4c
 2269 0b9c 02       		.byte	0x2
 2270 0b9d 23       		.byte	0x23
 2271 0b9e 26       		.uleb128 0x26
 2272 0b9f 00       		.byte	0x0
 2273 0ba0 0C       		.uleb128 0xc
 2274 0ba1 10       		.byte	0x10
 2275 0ba2 03       		.byte	0x3
 2276 0ba3 0302     		.2byte	0x203
 2277 0ba5 E60B0000 		.4byte	0xbe6
 2278 0ba9 0E       		.uleb128 0xe
 2279 0baa E1010000 		.4byte	.LASF131
 2280 0bae 03       		.byte	0x3
 2281 0baf 0402     		.2byte	0x204
 2282 0bb1 65000000 		.4byte	0x65
 2283 0bb5 02       		.byte	0x2
 2284 0bb6 23       		.byte	0x23
 2285 0bb7 00       		.uleb128 0x0
 2286 0bb8 0E       		.uleb128 0xe
 2287 0bb9 68000000 		.4byte	.LASF132
 2288 0bbd 03       		.byte	0x3
 2289 0bbe 0502     		.2byte	0x205
 2290 0bc0 65000000 		.4byte	0x65
 2291 0bc4 02       		.byte	0x2
 2292 0bc5 23       		.byte	0x23
 2293 0bc6 04       		.uleb128 0x4
 2294 0bc7 0D       		.uleb128 0xd
 2295 0bc8 56414C00 		.ascii	"VAL\000"
 2296 0bcc 03       		.byte	0x3
 2297 0bcd 0602     		.2byte	0x206
 2298 0bcf 65000000 		.4byte	0x65
 2299 0bd3 02       		.byte	0x2
 2300 0bd4 23       		.byte	0x23
 2301 0bd5 08       		.uleb128 0x8
 2302 0bd6 0E       		.uleb128 0xe
 2303 0bd7 2E020000 		.4byte	.LASF133
 2304 0bdb 03       		.byte	0x3
 2305 0bdc 0702     		.2byte	0x207
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 129


 2306 0bde 6F000000 		.4byte	0x6f
 2307 0be2 02       		.byte	0x2
 2308 0be3 23       		.byte	0x23
 2309 0be4 0C       		.uleb128 0xc
 2310 0be5 00       		.byte	0x0
 2311 0be6 0C       		.uleb128 0xc
 2312 0be7 50       		.byte	0x50
 2313 0be8 03       		.byte	0x3
 2314 0be9 0C02     		.2byte	0x20c
 2315 0beb 470E0000 		.4byte	0xe47
 2316 0bef 0D       		.uleb128 0xd
 2317 0bf0 43523100 		.ascii	"CR1\000"
 2318 0bf4 03       		.byte	0x3
 2319 0bf5 0D02     		.2byte	0x20d
 2320 0bf7 6A000000 		.4byte	0x6a
 2321 0bfb 02       		.byte	0x2
 2322 0bfc 23       		.byte	0x23
 2323 0bfd 00       		.uleb128 0x0
 2324 0bfe 0E       		.uleb128 0xe
 2325 0bff 91020000 		.4byte	.LASF6
 2326 0c03 03       		.byte	0x3
 2327 0c04 0E02     		.2byte	0x20e
 2328 0c06 4C000000 		.4byte	0x4c
 2329 0c0a 02       		.byte	0x2
 2330 0c0b 23       		.byte	0x23
 2331 0c0c 02       		.uleb128 0x2
 2332 0c0d 0D       		.uleb128 0xd
 2333 0c0e 43523200 		.ascii	"CR2\000"
 2334 0c12 03       		.byte	0x3
 2335 0c13 0F02     		.2byte	0x20f
 2336 0c15 6A000000 		.4byte	0x6a
 2337 0c19 02       		.byte	0x2
 2338 0c1a 23       		.byte	0x23
 2339 0c1b 04       		.uleb128 0x4
 2340 0c1c 0E       		.uleb128 0xe
 2341 0c1d 9B020000 		.4byte	.LASF7
 2342 0c21 03       		.byte	0x3
 2343 0c22 1002     		.2byte	0x210
 2344 0c24 4C000000 		.4byte	0x4c
 2345 0c28 02       		.byte	0x2
 2346 0c29 23       		.byte	0x23
 2347 0c2a 06       		.uleb128 0x6
 2348 0c2b 0E       		.uleb128 0xe
 2349 0c2c AC010000 		.4byte	.LASF134
 2350 0c30 03       		.byte	0x3
 2351 0c31 1102     		.2byte	0x211
 2352 0c33 6A000000 		.4byte	0x6a
 2353 0c37 02       		.byte	0x2
 2354 0c38 23       		.byte	0x23
 2355 0c39 08       		.uleb128 0x8
 2356 0c3a 0E       		.uleb128 0xe
 2357 0c3b A5020000 		.4byte	.LASF8
 2358 0c3f 03       		.byte	0x3
 2359 0c40 1202     		.2byte	0x212
 2360 0c42 4C000000 		.4byte	0x4c
 2361 0c46 02       		.byte	0x2
 2362 0c47 23       		.byte	0x23
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 130


 2363 0c48 0A       		.uleb128 0xa
 2364 0c49 0E       		.uleb128 0xe
 2365 0c4a 75010000 		.4byte	.LASF135
 2366 0c4e 03       		.byte	0x3
 2367 0c4f 1302     		.2byte	0x213
 2368 0c51 6A000000 		.4byte	0x6a
 2369 0c55 02       		.byte	0x2
 2370 0c56 23       		.byte	0x23
 2371 0c57 0C       		.uleb128 0xc
 2372 0c58 0E       		.uleb128 0xe
 2373 0c59 AF020000 		.4byte	.LASF9
 2374 0c5d 03       		.byte	0x3
 2375 0c5e 1402     		.2byte	0x214
 2376 0c60 4C000000 		.4byte	0x4c
 2377 0c64 02       		.byte	0x2
 2378 0c65 23       		.byte	0x23
 2379 0c66 0E       		.uleb128 0xe
 2380 0c67 0D       		.uleb128 0xd
 2381 0c68 535200   		.ascii	"SR\000"
 2382 0c6b 03       		.byte	0x3
 2383 0c6c 1502     		.2byte	0x215
 2384 0c6e 6A000000 		.4byte	0x6a
 2385 0c72 02       		.byte	0x2
 2386 0c73 23       		.byte	0x23
 2387 0c74 10       		.uleb128 0x10
 2388 0c75 0E       		.uleb128 0xe
 2389 0c76 B9020000 		.4byte	.LASF10
 2390 0c7a 03       		.byte	0x3
 2391 0c7b 1602     		.2byte	0x216
 2392 0c7d 4C000000 		.4byte	0x4c
 2393 0c81 02       		.byte	0x2
 2394 0c82 23       		.byte	0x23
 2395 0c83 12       		.uleb128 0x12
 2396 0c84 0D       		.uleb128 0xd
 2397 0c85 45475200 		.ascii	"EGR\000"
 2398 0c89 03       		.byte	0x3
 2399 0c8a 1702     		.2byte	0x217
 2400 0c8c 6A000000 		.4byte	0x6a
 2401 0c90 02       		.byte	0x2
 2402 0c91 23       		.byte	0x23
 2403 0c92 14       		.uleb128 0x14
 2404 0c93 0E       		.uleb128 0xe
 2405 0c94 C3020000 		.4byte	.LASF11
 2406 0c98 03       		.byte	0x3
 2407 0c99 1802     		.2byte	0x218
 2408 0c9b 4C000000 		.4byte	0x4c
 2409 0c9f 02       		.byte	0x2
 2410 0ca0 23       		.byte	0x23
 2411 0ca1 16       		.uleb128 0x16
 2412 0ca2 0E       		.uleb128 0xe
 2413 0ca3 FB000000 		.4byte	.LASF136
 2414 0ca7 03       		.byte	0x3
 2415 0ca8 1902     		.2byte	0x219
 2416 0caa 6A000000 		.4byte	0x6a
 2417 0cae 02       		.byte	0x2
 2418 0caf 23       		.byte	0x23
 2419 0cb0 18       		.uleb128 0x18
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 131


 2420 0cb1 0E       		.uleb128 0xe
 2421 0cb2 CD020000 		.4byte	.LASF12
 2422 0cb6 03       		.byte	0x3
 2423 0cb7 1A02     		.2byte	0x21a
 2424 0cb9 4C000000 		.4byte	0x4c
 2425 0cbd 02       		.byte	0x2
 2426 0cbe 23       		.byte	0x23
 2427 0cbf 1A       		.uleb128 0x1a
 2428 0cc0 0E       		.uleb128 0xe
 2429 0cc1 01010000 		.4byte	.LASF137
 2430 0cc5 03       		.byte	0x3
 2431 0cc6 1B02     		.2byte	0x21b
 2432 0cc8 6A000000 		.4byte	0x6a
 2433 0ccc 02       		.byte	0x2
 2434 0ccd 23       		.byte	0x23
 2435 0cce 1C       		.uleb128 0x1c
 2436 0ccf 0E       		.uleb128 0xe
 2437 0cd0 05050000 		.4byte	.LASF13
 2438 0cd4 03       		.byte	0x3
 2439 0cd5 1C02     		.2byte	0x21c
 2440 0cd7 4C000000 		.4byte	0x4c
 2441 0cdb 02       		.byte	0x2
 2442 0cdc 23       		.byte	0x23
 2443 0cdd 1E       		.uleb128 0x1e
 2444 0cde 0E       		.uleb128 0xe
 2445 0cdf 83010000 		.4byte	.LASF138
 2446 0ce3 03       		.byte	0x3
 2447 0ce4 1D02     		.2byte	0x21d
 2448 0ce6 6A000000 		.4byte	0x6a
 2449 0cea 02       		.byte	0x2
 2450 0ceb 23       		.byte	0x23
 2451 0cec 20       		.uleb128 0x20
 2452 0ced 0E       		.uleb128 0xe
 2453 0cee E1020000 		.4byte	.LASF14
 2454 0cf2 03       		.byte	0x3
 2455 0cf3 1E02     		.2byte	0x21e
 2456 0cf5 4C000000 		.4byte	0x4c
 2457 0cf9 02       		.byte	0x2
 2458 0cfa 23       		.byte	0x23
 2459 0cfb 22       		.uleb128 0x22
 2460 0cfc 0D       		.uleb128 0xd
 2461 0cfd 434E5400 		.ascii	"CNT\000"
 2462 0d01 03       		.byte	0x3
 2463 0d02 1F02     		.2byte	0x21f
 2464 0d04 6A000000 		.4byte	0x6a
 2465 0d08 02       		.byte	0x2
 2466 0d09 23       		.byte	0x23
 2467 0d0a 24       		.uleb128 0x24
 2468 0d0b 0E       		.uleb128 0xe
 2469 0d0c EB020000 		.4byte	.LASF15
 2470 0d10 03       		.byte	0x3
 2471 0d11 2002     		.2byte	0x220
 2472 0d13 4C000000 		.4byte	0x4c
 2473 0d17 02       		.byte	0x2
 2474 0d18 23       		.byte	0x23
 2475 0d19 26       		.uleb128 0x26
 2476 0d1a 0D       		.uleb128 0xd
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 132


 2477 0d1b 50534300 		.ascii	"PSC\000"
 2478 0d1f 03       		.byte	0x3
 2479 0d20 2102     		.2byte	0x221
 2480 0d22 6A000000 		.4byte	0x6a
 2481 0d26 02       		.byte	0x2
 2482 0d27 23       		.byte	0x23
 2483 0d28 28       		.uleb128 0x28
 2484 0d29 0E       		.uleb128 0xe
 2485 0d2a F5030000 		.4byte	.LASF17
 2486 0d2e 03       		.byte	0x3
 2487 0d2f 2202     		.2byte	0x222
 2488 0d31 4C000000 		.4byte	0x4c
 2489 0d35 02       		.byte	0x2
 2490 0d36 23       		.byte	0x23
 2491 0d37 2A       		.uleb128 0x2a
 2492 0d38 0D       		.uleb128 0xd
 2493 0d39 41525200 		.ascii	"ARR\000"
 2494 0d3d 03       		.byte	0x3
 2495 0d3e 2302     		.2byte	0x223
 2496 0d40 6A000000 		.4byte	0x6a
 2497 0d44 02       		.byte	0x2
 2498 0d45 23       		.byte	0x23
 2499 0d46 2C       		.uleb128 0x2c
 2500 0d47 0E       		.uleb128 0xe
 2501 0d48 00040000 		.4byte	.LASF19
 2502 0d4c 03       		.byte	0x3
 2503 0d4d 2402     		.2byte	0x224
 2504 0d4f 4C000000 		.4byte	0x4c
 2505 0d53 02       		.byte	0x2
 2506 0d54 23       		.byte	0x23
 2507 0d55 2E       		.uleb128 0x2e
 2508 0d56 0D       		.uleb128 0xd
 2509 0d57 52435200 		.ascii	"RCR\000"
 2510 0d5b 03       		.byte	0x3
 2511 0d5c 2502     		.2byte	0x225
 2512 0d5e 6A000000 		.4byte	0x6a
 2513 0d62 02       		.byte	0x2
 2514 0d63 23       		.byte	0x23
 2515 0d64 30       		.uleb128 0x30
 2516 0d65 0E       		.uleb128 0xe
 2517 0d66 0B040000 		.4byte	.LASF20
 2518 0d6a 03       		.byte	0x3
 2519 0d6b 2602     		.2byte	0x226
 2520 0d6d 4C000000 		.4byte	0x4c
 2521 0d71 02       		.byte	0x2
 2522 0d72 23       		.byte	0x23
 2523 0d73 32       		.uleb128 0x32
 2524 0d74 0E       		.uleb128 0xe
 2525 0d75 E3000000 		.4byte	.LASF139
 2526 0d79 03       		.byte	0x3
 2527 0d7a 2702     		.2byte	0x227
 2528 0d7c 6A000000 		.4byte	0x6a
 2529 0d80 02       		.byte	0x2
 2530 0d81 23       		.byte	0x23
 2531 0d82 34       		.uleb128 0x34
 2532 0d83 0E       		.uleb128 0xe
 2533 0d84 16040000 		.4byte	.LASF21
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 133


 2534 0d88 03       		.byte	0x3
 2535 0d89 2802     		.2byte	0x228
 2536 0d8b 4C000000 		.4byte	0x4c
 2537 0d8f 02       		.byte	0x2
 2538 0d90 23       		.byte	0x23
 2539 0d91 36       		.uleb128 0x36
 2540 0d92 0E       		.uleb128 0xe
 2541 0d93 E8000000 		.4byte	.LASF140
 2542 0d97 03       		.byte	0x3
 2543 0d98 2902     		.2byte	0x229
 2544 0d9a 6A000000 		.4byte	0x6a
 2545 0d9e 02       		.byte	0x2
 2546 0d9f 23       		.byte	0x23
 2547 0da0 38       		.uleb128 0x38
 2548 0da1 0E       		.uleb128 0xe
 2549 0da2 21040000 		.4byte	.LASF23
 2550 0da6 03       		.byte	0x3
 2551 0da7 2A02     		.2byte	0x22a
 2552 0da9 4C000000 		.4byte	0x4c
 2553 0dad 02       		.byte	0x2
 2554 0dae 23       		.byte	0x23
 2555 0daf 3A       		.uleb128 0x3a
 2556 0db0 0E       		.uleb128 0xe
 2557 0db1 ED000000 		.4byte	.LASF141
 2558 0db5 03       		.byte	0x3
 2559 0db6 2B02     		.2byte	0x22b
 2560 0db8 6A000000 		.4byte	0x6a
 2561 0dbc 02       		.byte	0x2
 2562 0dbd 23       		.byte	0x23
 2563 0dbe 3C       		.uleb128 0x3c
 2564 0dbf 0E       		.uleb128 0xe
 2565 0dc0 1F010000 		.4byte	.LASF25
 2566 0dc4 03       		.byte	0x3
 2567 0dc5 2C02     		.2byte	0x22c
 2568 0dc7 4C000000 		.4byte	0x4c
 2569 0dcb 02       		.byte	0x2
 2570 0dcc 23       		.byte	0x23
 2571 0dcd 3E       		.uleb128 0x3e
 2572 0dce 0E       		.uleb128 0xe
 2573 0dcf E1030000 		.4byte	.LASF142
 2574 0dd3 03       		.byte	0x3
 2575 0dd4 2D02     		.2byte	0x22d
 2576 0dd6 6A000000 		.4byte	0x6a
 2577 0dda 02       		.byte	0x2
 2578 0ddb 23       		.byte	0x23
 2579 0ddc 40       		.uleb128 0x40
 2580 0ddd 0E       		.uleb128 0xe
 2581 0dde 2C040000 		.4byte	.LASF27
 2582 0de2 03       		.byte	0x3
 2583 0de3 2E02     		.2byte	0x22e
 2584 0de5 4C000000 		.4byte	0x4c
 2585 0de9 02       		.byte	0x2
 2586 0dea 23       		.byte	0x23
 2587 0deb 42       		.uleb128 0x42
 2588 0dec 0E       		.uleb128 0xe
 2589 0ded D9000000 		.4byte	.LASF143
 2590 0df1 03       		.byte	0x3
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 134


 2591 0df2 2F02     		.2byte	0x22f
 2592 0df4 6A000000 		.4byte	0x6a
 2593 0df8 02       		.byte	0x2
 2594 0df9 23       		.byte	0x23
 2595 0dfa 44       		.uleb128 0x44
 2596 0dfb 0E       		.uleb128 0xe
 2597 0dfc 37040000 		.4byte	.LASF29
 2598 0e00 03       		.byte	0x3
 2599 0e01 3002     		.2byte	0x230
 2600 0e03 4C000000 		.4byte	0x4c
 2601 0e07 02       		.byte	0x2
 2602 0e08 23       		.byte	0x23
 2603 0e09 46       		.uleb128 0x46
 2604 0e0a 0D       		.uleb128 0xd
 2605 0e0b 44435200 		.ascii	"DCR\000"
 2606 0e0f 03       		.byte	0x3
 2607 0e10 3102     		.2byte	0x231
 2608 0e12 6A000000 		.4byte	0x6a
 2609 0e16 02       		.byte	0x2
 2610 0e17 23       		.byte	0x23
 2611 0e18 48       		.uleb128 0x48
 2612 0e19 0E       		.uleb128 0xe
 2613 0e1a 42040000 		.4byte	.LASF31
 2614 0e1e 03       		.byte	0x3
 2615 0e1f 3202     		.2byte	0x232
 2616 0e21 4C000000 		.4byte	0x4c
 2617 0e25 02       		.byte	0x2
 2618 0e26 23       		.byte	0x23
 2619 0e27 4A       		.uleb128 0x4a
 2620 0e28 0E       		.uleb128 0xe
 2621 0e29 FE020000 		.4byte	.LASF144
 2622 0e2d 03       		.byte	0x3
 2623 0e2e 3302     		.2byte	0x233
 2624 0e30 6A000000 		.4byte	0x6a
 2625 0e34 02       		.byte	0x2
 2626 0e35 23       		.byte	0x23
 2627 0e36 4C       		.uleb128 0x4c
 2628 0e37 0E       		.uleb128 0xe
 2629 0e38 4D040000 		.4byte	.LASF33
 2630 0e3c 03       		.byte	0x3
 2631 0e3d 3402     		.2byte	0x234
 2632 0e3f 4C000000 		.4byte	0x4c
 2633 0e43 02       		.byte	0x2
 2634 0e44 23       		.byte	0x23
 2635 0e45 4E       		.uleb128 0x4e
 2636 0e46 00       		.byte	0x0
 2637 0e47 0C       		.uleb128 0xc
 2638 0e48 1C       		.byte	0x1c
 2639 0e49 03       		.byte	0x3
 2640 0e4a 3902     		.2byte	0x239
 2641 0e4c 210F0000 		.4byte	0xf21
 2642 0e50 0D       		.uleb128 0xd
 2643 0e51 535200   		.ascii	"SR\000"
 2644 0e54 03       		.byte	0x3
 2645 0e55 3A02     		.2byte	0x23a
 2646 0e57 6A000000 		.4byte	0x6a
 2647 0e5b 02       		.byte	0x2
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 135


 2648 0e5c 23       		.byte	0x23
 2649 0e5d 00       		.uleb128 0x0
 2650 0e5e 0E       		.uleb128 0xe
 2651 0e5f 91020000 		.4byte	.LASF6
 2652 0e63 03       		.byte	0x3
 2653 0e64 3B02     		.2byte	0x23b
 2654 0e66 4C000000 		.4byte	0x4c
 2655 0e6a 02       		.byte	0x2
 2656 0e6b 23       		.byte	0x23
 2657 0e6c 02       		.uleb128 0x2
 2658 0e6d 0D       		.uleb128 0xd
 2659 0e6e 445200   		.ascii	"DR\000"
 2660 0e71 03       		.byte	0x3
 2661 0e72 3C02     		.2byte	0x23c
 2662 0e74 6A000000 		.4byte	0x6a
 2663 0e78 02       		.byte	0x2
 2664 0e79 23       		.byte	0x23
 2665 0e7a 04       		.uleb128 0x4
 2666 0e7b 0E       		.uleb128 0xe
 2667 0e7c 9B020000 		.4byte	.LASF7
 2668 0e80 03       		.byte	0x3
 2669 0e81 3D02     		.2byte	0x23d
 2670 0e83 4C000000 		.4byte	0x4c
 2671 0e87 02       		.byte	0x2
 2672 0e88 23       		.byte	0x23
 2673 0e89 06       		.uleb128 0x6
 2674 0e8a 0D       		.uleb128 0xd
 2675 0e8b 42525200 		.ascii	"BRR\000"
 2676 0e8f 03       		.byte	0x3
 2677 0e90 3E02     		.2byte	0x23e
 2678 0e92 6A000000 		.4byte	0x6a
 2679 0e96 02       		.byte	0x2
 2680 0e97 23       		.byte	0x23
 2681 0e98 08       		.uleb128 0x8
 2682 0e99 0E       		.uleb128 0xe
 2683 0e9a A5020000 		.4byte	.LASF8
 2684 0e9e 03       		.byte	0x3
 2685 0e9f 3F02     		.2byte	0x23f
 2686 0ea1 4C000000 		.4byte	0x4c
 2687 0ea5 02       		.byte	0x2
 2688 0ea6 23       		.byte	0x23
 2689 0ea7 0A       		.uleb128 0xa
 2690 0ea8 0D       		.uleb128 0xd
 2691 0ea9 43523100 		.ascii	"CR1\000"
 2692 0ead 03       		.byte	0x3
 2693 0eae 4002     		.2byte	0x240
 2694 0eb0 6A000000 		.4byte	0x6a
 2695 0eb4 02       		.byte	0x2
 2696 0eb5 23       		.byte	0x23
 2697 0eb6 0C       		.uleb128 0xc
 2698 0eb7 0E       		.uleb128 0xe
 2699 0eb8 AF020000 		.4byte	.LASF9
 2700 0ebc 03       		.byte	0x3
 2701 0ebd 4102     		.2byte	0x241
 2702 0ebf 4C000000 		.4byte	0x4c
 2703 0ec3 02       		.byte	0x2
 2704 0ec4 23       		.byte	0x23
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 136


 2705 0ec5 0E       		.uleb128 0xe
 2706 0ec6 0D       		.uleb128 0xd
 2707 0ec7 43523200 		.ascii	"CR2\000"
 2708 0ecb 03       		.byte	0x3
 2709 0ecc 4202     		.2byte	0x242
 2710 0ece 6A000000 		.4byte	0x6a
 2711 0ed2 02       		.byte	0x2
 2712 0ed3 23       		.byte	0x23
 2713 0ed4 10       		.uleb128 0x10
 2714 0ed5 0E       		.uleb128 0xe
 2715 0ed6 B9020000 		.4byte	.LASF10
 2716 0eda 03       		.byte	0x3
 2717 0edb 4302     		.2byte	0x243
 2718 0edd 4C000000 		.4byte	0x4c
 2719 0ee1 02       		.byte	0x2
 2720 0ee2 23       		.byte	0x23
 2721 0ee3 12       		.uleb128 0x12
 2722 0ee4 0D       		.uleb128 0xd
 2723 0ee5 43523300 		.ascii	"CR3\000"
 2724 0ee9 03       		.byte	0x3
 2725 0eea 4402     		.2byte	0x244
 2726 0eec 6A000000 		.4byte	0x6a
 2727 0ef0 02       		.byte	0x2
 2728 0ef1 23       		.byte	0x23
 2729 0ef2 14       		.uleb128 0x14
 2730 0ef3 0E       		.uleb128 0xe
 2731 0ef4 C3020000 		.4byte	.LASF11
 2732 0ef8 03       		.byte	0x3
 2733 0ef9 4502     		.2byte	0x245
 2734 0efb 4C000000 		.4byte	0x4c
 2735 0eff 02       		.byte	0x2
 2736 0f00 23       		.byte	0x23
 2737 0f01 16       		.uleb128 0x16
 2738 0f02 0E       		.uleb128 0xe
 2739 0f03 D4000000 		.4byte	.LASF145
 2740 0f07 03       		.byte	0x3
 2741 0f08 4602     		.2byte	0x246
 2742 0f0a 6A000000 		.4byte	0x6a
 2743 0f0e 02       		.byte	0x2
 2744 0f0f 23       		.byte	0x23
 2745 0f10 18       		.uleb128 0x18
 2746 0f11 0E       		.uleb128 0xe
 2747 0f12 CD020000 		.4byte	.LASF12
 2748 0f16 03       		.byte	0x3
 2749 0f17 4702     		.2byte	0x247
 2750 0f19 4C000000 		.4byte	0x4c
 2751 0f1d 02       		.byte	0x2
 2752 0f1e 23       		.byte	0x23
 2753 0f1f 1A       		.uleb128 0x1a
 2754 0f20 00       		.byte	0x0
 2755 0f21 10       		.uleb128 0x10
 2756 0f22 01       		.byte	0x1
 2757 0f23 E6030000 		.4byte	.LASF146
 2758 0f27 01       		.byte	0x1
 2759 0f28 F40F     		.2byte	0xff4
 2760 0f2a 01       		.byte	0x1
 2761 0f2b 00000000 		.4byte	.LFB2
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 137


 2762 0f2f 10000000 		.4byte	.LFE2
 2763 0f33 01       		.byte	0x1
 2764 0f34 5D       		.byte	0x5d
 2765 0f35 10       		.uleb128 0x10
 2766 0f36 01       		.byte	0x1
 2767 0f37 E6010000 		.4byte	.LASF147
 2768 0f3b 01       		.byte	0x1
 2769 0f3c FD0F     		.2byte	0xffd
 2770 0f3e 01       		.byte	0x1
 2771 0f3f 10000000 		.4byte	.LFB3
 2772 0f43 5E000000 		.4byte	.LFE3
 2773 0f47 01       		.byte	0x1
 2774 0f48 5D       		.byte	0x5d
 2775 0f49 10       		.uleb128 0x10
 2776 0f4a 01       		.byte	0x1
 2777 0f4b 7C030000 		.4byte	.LASF148
 2778 0f4f 01       		.byte	0x1
 2779 0f50 1810     		.2byte	0x1018
 2780 0f52 01       		.byte	0x1
 2781 0f53 60000000 		.4byte	.LFB4
 2782 0f57 62000000 		.4byte	.LFE4
 2783 0f5b 01       		.byte	0x1
 2784 0f5c 5D       		.byte	0x5d
 2785 0f5d 10       		.uleb128 0x10
 2786 0f5e 01       		.byte	0x1
 2787 0f5f 07010000 		.4byte	.LASF149
 2788 0f63 01       		.byte	0x1
 2789 0f64 2510     		.2byte	0x1025
 2790 0f66 01       		.byte	0x1
 2791 0f67 64000000 		.4byte	.LFB5
 2792 0f6b 8C000000 		.4byte	.LFE5
 2793 0f6f 01       		.byte	0x1
 2794 0f70 5D       		.byte	0x5d
 2795 0f71 10       		.uleb128 0x10
 2796 0f72 01       		.byte	0x1
 2797 0f73 14050000 		.4byte	.LASF150
 2798 0f77 01       		.byte	0x1
 2799 0f78 3610     		.2byte	0x1036
 2800 0f7a 01       		.byte	0x1
 2801 0f7b 8C000000 		.4byte	.LFB6
 2802 0f7f B4000000 		.4byte	.LFE6
 2803 0f83 01       		.byte	0x1
 2804 0f84 5D       		.byte	0x5d
 2805 0f85 10       		.uleb128 0x10
 2806 0f86 01       		.byte	0x1
 2807 0f87 AD030000 		.4byte	.LASF151
 2808 0f8b 01       		.byte	0x1
 2809 0f8c 4810     		.2byte	0x1048
 2810 0f8e 01       		.byte	0x1
 2811 0f8f B4000000 		.4byte	.LFB7
 2812 0f93 62010000 		.4byte	.LFE7
 2813 0f97 01       		.byte	0x1
 2814 0f98 5D       		.byte	0x5d
 2815 0f99 10       		.uleb128 0x10
 2816 0f9a 01       		.byte	0x1
 2817 0f9b 2A010000 		.4byte	.LASF152
 2818 0f9f 01       		.byte	0x1
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 138


 2819 0fa0 7210     		.2byte	0x1072
 2820 0fa2 01       		.byte	0x1
 2821 0fa3 64010000 		.4byte	.LFB8
 2822 0fa7 66010000 		.4byte	.LFE8
 2823 0fab 01       		.byte	0x1
 2824 0fac 5D       		.byte	0x5d
 2825 0fad 10       		.uleb128 0x10
 2826 0fae 01       		.byte	0x1
 2827 0faf 62030000 		.4byte	.LASF153
 2828 0fb3 01       		.byte	0x1
 2829 0fb4 0411     		.2byte	0x1104
 2830 0fb6 01       		.byte	0x1
 2831 0fb7 68010000 		.4byte	.LFB9
 2832 0fbb A2010000 		.4byte	.LFE9
 2833 0fbf 01       		.byte	0x1
 2834 0fc0 5D       		.byte	0x5d
 2835 0fc1 10       		.uleb128 0x10
 2836 0fc2 01       		.byte	0x1
 2837 0fc3 B6010000 		.4byte	.LASF154
 2838 0fc7 01       		.byte	0x1
 2839 0fc8 2B11     		.2byte	0x112b
 2840 0fca 01       		.byte	0x1
 2841 0fcb A4010000 		.4byte	.LFB10
 2842 0fcf 20020000 		.4byte	.LFE10
 2843 0fd3 01       		.byte	0x1
 2844 0fd4 5D       		.byte	0x5d
 2845 0fd5 10       		.uleb128 0x10
 2846 0fd6 01       		.byte	0x1
 2847 0fd7 0B030000 		.4byte	.LASF155
 2848 0fdb 01       		.byte	0x1
 2849 0fdc CA11     		.2byte	0x11ca
 2850 0fde 01       		.byte	0x1
 2851 0fdf 20020000 		.4byte	.LFB11
 2852 0fe3 22020000 		.4byte	.LFE11
 2853 0fe7 01       		.byte	0x1
 2854 0fe8 5D       		.byte	0x5d
 2855 0fe9 10       		.uleb128 0x10
 2856 0fea 01       		.byte	0x1
 2857 0feb 5D010000 		.4byte	.LASF156
 2858 0fef 01       		.byte	0x1
 2859 0ff0 D312     		.2byte	0x12d3
 2860 0ff2 01       		.byte	0x1
 2861 0ff3 24020000 		.4byte	.LFB12
 2862 0ff7 26020000 		.4byte	.LFE12
 2863 0ffb 01       		.byte	0x1
 2864 0ffc 5D       		.byte	0x5d
 2865 0ffd 10       		.uleb128 0x10
 2866 0ffe 01       		.byte	0x1
 2867 0fff C1030000 		.4byte	.LASF157
 2868 1003 01       		.byte	0x1
 2869 1004 2A13     		.2byte	0x132a
 2870 1006 01       		.byte	0x1
 2871 1007 28020000 		.4byte	.LFB13
 2872 100b 8E020000 		.4byte	.LFE13
 2873 100f 01       		.byte	0x1
 2874 1010 5D       		.byte	0x5d
 2875 1011 11       		.uleb128 0x11
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 139


 2876 1012 01       		.byte	0x1
 2877 1013 4D030000 		.4byte	.LASF162
 2878 1017 01       		.byte	0x1
 2879 1018 4013     		.2byte	0x1340
 2880 101a 90020000 		.4byte	.LFB14
 2881 101e A8020000 		.4byte	.LFE14
 2882 1022 00000000 		.4byte	.LLST12
 2883 1026 12       		.uleb128 0x12
 2884 1027 01       		.byte	0x1
 2885 1028 C7010000 		.4byte	.LASF163
 2886 102c 01       		.byte	0x1
 2887 102d 7913     		.2byte	0x1379
 2888 102f 01       		.byte	0x1
 2889 1030 3E100000 		.4byte	0x103e
 2890 1034 A8020000 		.4byte	.LFB15
 2891 1038 B2020000 		.4byte	.LFE15
 2892 103c 01       		.byte	0x1
 2893 103d 5D       		.byte	0x5d
 2894 103e 02       		.uleb128 0x2
 2895 103f 04       		.byte	0x4
 2896 1040 07       		.byte	0x7
 2897 1041 5B000000 		.4byte	.LASF158
 2898 1045 00       		.byte	0x0
 2899              		.section	.debug_abbrev
 2900 0000 01       		.uleb128 0x1
 2901 0001 11       		.uleb128 0x11
 2902 0002 01       		.byte	0x1
 2903 0003 25       		.uleb128 0x25
 2904 0004 0E       		.uleb128 0xe
 2905 0005 13       		.uleb128 0x13
 2906 0006 0B       		.uleb128 0xb
 2907 0007 03       		.uleb128 0x3
 2908 0008 0E       		.uleb128 0xe
 2909 0009 1B       		.uleb128 0x1b
 2910 000a 0E       		.uleb128 0xe
 2911 000b 11       		.uleb128 0x11
 2912 000c 01       		.uleb128 0x1
 2913 000d 12       		.uleb128 0x12
 2914 000e 01       		.uleb128 0x1
 2915 000f 10       		.uleb128 0x10
 2916 0010 06       		.uleb128 0x6
 2917 0011 00       		.byte	0x0
 2918 0012 00       		.byte	0x0
 2919 0013 02       		.uleb128 0x2
 2920 0014 24       		.uleb128 0x24
 2921 0015 00       		.byte	0x0
 2922 0016 0B       		.uleb128 0xb
 2923 0017 0B       		.uleb128 0xb
 2924 0018 3E       		.uleb128 0x3e
 2925 0019 0B       		.uleb128 0xb
 2926 001a 03       		.uleb128 0x3
 2927 001b 0E       		.uleb128 0xe
 2928 001c 00       		.byte	0x0
 2929 001d 00       		.byte	0x0
 2930 001e 03       		.uleb128 0x3
 2931 001f 16       		.uleb128 0x16
 2932 0020 00       		.byte	0x0
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 140


 2933 0021 03       		.uleb128 0x3
 2934 0022 08       		.uleb128 0x8
 2935 0023 3A       		.uleb128 0x3a
 2936 0024 0B       		.uleb128 0xb
 2937 0025 3B       		.uleb128 0x3b
 2938 0026 0B       		.uleb128 0xb
 2939 0027 49       		.uleb128 0x49
 2940 0028 13       		.uleb128 0x13
 2941 0029 00       		.byte	0x0
 2942 002a 00       		.byte	0x0
 2943 002b 04       		.uleb128 0x4
 2944 002c 35       		.uleb128 0x35
 2945 002d 00       		.byte	0x0
 2946 002e 49       		.uleb128 0x49
 2947 002f 13       		.uleb128 0x13
 2948 0030 00       		.byte	0x0
 2949 0031 00       		.byte	0x0
 2950 0032 05       		.uleb128 0x5
 2951 0033 26       		.uleb128 0x26
 2952 0034 00       		.byte	0x0
 2953 0035 49       		.uleb128 0x49
 2954 0036 13       		.uleb128 0x13
 2955 0037 00       		.byte	0x0
 2956 0038 00       		.byte	0x0
 2957 0039 06       		.uleb128 0x6
 2958 003a 13       		.uleb128 0x13
 2959 003b 01       		.byte	0x1
 2960 003c 0B       		.uleb128 0xb
 2961 003d 0B       		.uleb128 0xb
 2962 003e 3A       		.uleb128 0x3a
 2963 003f 0B       		.uleb128 0xb
 2964 0040 3B       		.uleb128 0x3b
 2965 0041 0B       		.uleb128 0xb
 2966 0042 01       		.uleb128 0x1
 2967 0043 13       		.uleb128 0x13
 2968 0044 00       		.byte	0x0
 2969 0045 00       		.byte	0x0
 2970 0046 07       		.uleb128 0x7
 2971 0047 0D       		.uleb128 0xd
 2972 0048 00       		.byte	0x0
 2973 0049 03       		.uleb128 0x3
 2974 004a 0E       		.uleb128 0xe
 2975 004b 3A       		.uleb128 0x3a
 2976 004c 0B       		.uleb128 0xb
 2977 004d 3B       		.uleb128 0x3b
 2978 004e 0B       		.uleb128 0xb
 2979 004f 49       		.uleb128 0x49
 2980 0050 13       		.uleb128 0x13
 2981 0051 38       		.uleb128 0x38
 2982 0052 0A       		.uleb128 0xa
 2983 0053 00       		.byte	0x0
 2984 0054 00       		.byte	0x0
 2985 0055 08       		.uleb128 0x8
 2986 0056 0D       		.uleb128 0xd
 2987 0057 00       		.byte	0x0
 2988 0058 03       		.uleb128 0x3
 2989 0059 08       		.uleb128 0x8
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 141


 2990 005a 3A       		.uleb128 0x3a
 2991 005b 0B       		.uleb128 0xb
 2992 005c 3B       		.uleb128 0x3b
 2993 005d 0B       		.uleb128 0xb
 2994 005e 49       		.uleb128 0x49
 2995 005f 13       		.uleb128 0x13
 2996 0060 38       		.uleb128 0x38
 2997 0061 0A       		.uleb128 0xa
 2998 0062 00       		.byte	0x0
 2999 0063 00       		.byte	0x0
 3000 0064 09       		.uleb128 0x9
 3001 0065 01       		.uleb128 0x1
 3002 0066 01       		.byte	0x1
 3003 0067 49       		.uleb128 0x49
 3004 0068 13       		.uleb128 0x13
 3005 0069 01       		.uleb128 0x1
 3006 006a 13       		.uleb128 0x13
 3007 006b 00       		.byte	0x0
 3008 006c 00       		.byte	0x0
 3009 006d 0A       		.uleb128 0xa
 3010 006e 21       		.uleb128 0x21
 3011 006f 00       		.byte	0x0
 3012 0070 49       		.uleb128 0x49
 3013 0071 13       		.uleb128 0x13
 3014 0072 2F       		.uleb128 0x2f
 3015 0073 0B       		.uleb128 0xb
 3016 0074 00       		.byte	0x0
 3017 0075 00       		.byte	0x0
 3018 0076 0B       		.uleb128 0xb
 3019 0077 24       		.uleb128 0x24
 3020 0078 00       		.byte	0x0
 3021 0079 0B       		.uleb128 0xb
 3022 007a 0B       		.uleb128 0xb
 3023 007b 3E       		.uleb128 0x3e
 3024 007c 0B       		.uleb128 0xb
 3025 007d 00       		.byte	0x0
 3026 007e 00       		.byte	0x0
 3027 007f 0C       		.uleb128 0xc
 3028 0080 13       		.uleb128 0x13
 3029 0081 01       		.byte	0x1
 3030 0082 0B       		.uleb128 0xb
 3031 0083 0B       		.uleb128 0xb
 3032 0084 3A       		.uleb128 0x3a
 3033 0085 0B       		.uleb128 0xb
 3034 0086 3B       		.uleb128 0x3b
 3035 0087 05       		.uleb128 0x5
 3036 0088 01       		.uleb128 0x1
 3037 0089 13       		.uleb128 0x13
 3038 008a 00       		.byte	0x0
 3039 008b 00       		.byte	0x0
 3040 008c 0D       		.uleb128 0xd
 3041 008d 0D       		.uleb128 0xd
 3042 008e 00       		.byte	0x0
 3043 008f 03       		.uleb128 0x3
 3044 0090 08       		.uleb128 0x8
 3045 0091 3A       		.uleb128 0x3a
 3046 0092 0B       		.uleb128 0xb
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 142


 3047 0093 3B       		.uleb128 0x3b
 3048 0094 05       		.uleb128 0x5
 3049 0095 49       		.uleb128 0x49
 3050 0096 13       		.uleb128 0x13
 3051 0097 38       		.uleb128 0x38
 3052 0098 0A       		.uleb128 0xa
 3053 0099 00       		.byte	0x0
 3054 009a 00       		.byte	0x0
 3055 009b 0E       		.uleb128 0xe
 3056 009c 0D       		.uleb128 0xd
 3057 009d 00       		.byte	0x0
 3058 009e 03       		.uleb128 0x3
 3059 009f 0E       		.uleb128 0xe
 3060 00a0 3A       		.uleb128 0x3a
 3061 00a1 0B       		.uleb128 0xb
 3062 00a2 3B       		.uleb128 0x3b
 3063 00a3 05       		.uleb128 0x5
 3064 00a4 49       		.uleb128 0x49
 3065 00a5 13       		.uleb128 0x13
 3066 00a6 38       		.uleb128 0x38
 3067 00a7 0A       		.uleb128 0xa
 3068 00a8 00       		.byte	0x0
 3069 00a9 00       		.byte	0x0
 3070 00aa 0F       		.uleb128 0xf
 3071 00ab 13       		.uleb128 0x13
 3072 00ac 01       		.byte	0x1
 3073 00ad 0B       		.uleb128 0xb
 3074 00ae 05       		.uleb128 0x5
 3075 00af 3A       		.uleb128 0x3a
 3076 00b0 0B       		.uleb128 0xb
 3077 00b1 3B       		.uleb128 0x3b
 3078 00b2 05       		.uleb128 0x5
 3079 00b3 01       		.uleb128 0x1
 3080 00b4 13       		.uleb128 0x13
 3081 00b5 00       		.byte	0x0
 3082 00b6 00       		.byte	0x0
 3083 00b7 10       		.uleb128 0x10
 3084 00b8 2E       		.uleb128 0x2e
 3085 00b9 00       		.byte	0x0
 3086 00ba 3F       		.uleb128 0x3f
 3087 00bb 0C       		.uleb128 0xc
 3088 00bc 03       		.uleb128 0x3
 3089 00bd 0E       		.uleb128 0xe
 3090 00be 3A       		.uleb128 0x3a
 3091 00bf 0B       		.uleb128 0xb
 3092 00c0 3B       		.uleb128 0x3b
 3093 00c1 05       		.uleb128 0x5
 3094 00c2 27       		.uleb128 0x27
 3095 00c3 0C       		.uleb128 0xc
 3096 00c4 11       		.uleb128 0x11
 3097 00c5 01       		.uleb128 0x1
 3098 00c6 12       		.uleb128 0x12
 3099 00c7 01       		.uleb128 0x1
 3100 00c8 40       		.uleb128 0x40
 3101 00c9 0A       		.uleb128 0xa
 3102 00ca 00       		.byte	0x0
 3103 00cb 00       		.byte	0x0
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 143


 3104 00cc 11       		.uleb128 0x11
 3105 00cd 2E       		.uleb128 0x2e
 3106 00ce 00       		.byte	0x0
 3107 00cf 3F       		.uleb128 0x3f
 3108 00d0 0C       		.uleb128 0xc
 3109 00d1 03       		.uleb128 0x3
 3110 00d2 0E       		.uleb128 0xe
 3111 00d3 3A       		.uleb128 0x3a
 3112 00d4 0B       		.uleb128 0xb
 3113 00d5 3B       		.uleb128 0x3b
 3114 00d6 05       		.uleb128 0x5
 3115 00d7 11       		.uleb128 0x11
 3116 00d8 01       		.uleb128 0x1
 3117 00d9 12       		.uleb128 0x12
 3118 00da 01       		.uleb128 0x1
 3119 00db 40       		.uleb128 0x40
 3120 00dc 06       		.uleb128 0x6
 3121 00dd 00       		.byte	0x0
 3122 00de 00       		.byte	0x0
 3123 00df 12       		.uleb128 0x12
 3124 00e0 2E       		.uleb128 0x2e
 3125 00e1 00       		.byte	0x0
 3126 00e2 3F       		.uleb128 0x3f
 3127 00e3 0C       		.uleb128 0xc
 3128 00e4 03       		.uleb128 0x3
 3129 00e5 0E       		.uleb128 0xe
 3130 00e6 3A       		.uleb128 0x3a
 3131 00e7 0B       		.uleb128 0xb
 3132 00e8 3B       		.uleb128 0x3b
 3133 00e9 05       		.uleb128 0x5
 3134 00ea 27       		.uleb128 0x27
 3135 00eb 0C       		.uleb128 0xc
 3136 00ec 49       		.uleb128 0x49
 3137 00ed 13       		.uleb128 0x13
 3138 00ee 11       		.uleb128 0x11
 3139 00ef 01       		.uleb128 0x1
 3140 00f0 12       		.uleb128 0x12
 3141 00f1 01       		.uleb128 0x1
 3142 00f2 40       		.uleb128 0x40
 3143 00f3 0A       		.uleb128 0xa
 3144 00f4 00       		.byte	0x0
 3145 00f5 00       		.byte	0x0
 3146 00f6 00       		.byte	0x0
 3147              		.section	.debug_pubnames,"",%progbits
 3148 0000 29010000 		.4byte	0x129
 3149 0004 0200     		.2byte	0x2
 3150 0006 00000000 		.4byte	.Ldebug_info0
 3151 000a 46100000 		.4byte	0x1046
 3152 000e 210F0000 		.4byte	0xf21
 3153 0012 73746D33 		.ascii	"stm32_EfiSetup\000"
 3153      325F4566 
 3153      69536574 
 3153      757000
 3154 0021 350F0000 		.4byte	0xf35
 3155 0025 73746D33 		.ascii	"stm32_ClockSetup\000"
 3155      325F436C 
 3155      6F636B53 
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 144


 3155      65747570 
 3155      00
 3156 0036 490F0000 		.4byte	0xf49
 3157 003a 73746D33 		.ascii	"stm32_NvicSetup\000"
 3157      325F4E76 
 3157      69635365 
 3157      74757000 
 3158 004a 5D0F0000 		.4byte	0xf5d
 3159 004e 73746D33 		.ascii	"stm32_IwdgSetup\000"
 3159      325F4977 
 3159      64675365 
 3159      74757000 
 3160 005e 710F0000 		.4byte	0xf71
 3161 0062 73746D33 		.ascii	"stm32_SysTickSetup\000"
 3161      325F5379 
 3161      73546963 
 3161      6B536574 
 3161      757000
 3162 0075 850F0000 		.4byte	0xf85
 3163 0079 73746D33 		.ascii	"stm32_RtcSetup\000"
 3163      325F5274 
 3163      63536574 
 3163      757000
 3164 0088 990F0000 		.4byte	0xf99
 3165 008c 73746D33 		.ascii	"stm32_TimerSetup\000"
 3165      325F5469 
 3165      6D657253 
 3165      65747570 
 3165      00
 3166 009d AD0F0000 		.4byte	0xfad
 3167 00a1 73746D33 		.ascii	"stm32_GpioSetup\000"
 3167      325F4770 
 3167      696F5365 
 3167      74757000 
 3168 00b1 C10F0000 		.4byte	0xfc1
 3169 00b5 73746D33 		.ascii	"stm32_UsartSetup\000"
 3169      325F5573 
 3169      61727453 
 3169      65747570 
 3169      00
 3170 00c6 D50F0000 		.4byte	0xfd5
 3171 00ca 73746D33 		.ascii	"stm32_ExtiSetup\000"
 3171      325F4578 
 3171      74695365 
 3171      74757000 
 3172 00da E90F0000 		.4byte	0xfe9
 3173 00de 73746D33 		.ascii	"stm32_AfRemapSetup\000"
 3173      325F4166 
 3173      52656D61 
 3173      70536574 
 3173      757000
 3174 00f1 FD0F0000 		.4byte	0xffd
 3175 00f5 73746D33 		.ascii	"stm32_TamperSetup\000"
 3175      325F5461 
 3175      6D706572 
 3175      53657475 
 3175      7000
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 145


 3176 0107 11100000 		.4byte	0x1011
 3177 010b 73746D33 		.ascii	"stm32_Init\000"
 3177      325F496E 
 3177      697400
 3178 0116 26100000 		.4byte	0x1026
 3179 011a 73746D33 		.ascii	"stm32_GetPCLK1\000"
 3179      325F4765 
 3179      7450434C 
 3179      4B3100
 3180 0129 00000000 		.4byte	0x0
 3181              		.section	.debug_aranges,"",%progbits
 3182 0000 1C000000 		.4byte	0x1c
 3183 0004 0200     		.2byte	0x2
 3184 0006 00000000 		.4byte	.Ldebug_info0
 3185 000a 04       		.byte	0x4
 3186 000b 00       		.byte	0x0
 3187 000c 0000     		.2byte	0x0
 3188 000e 0000     		.2byte	0x0
 3189 0010 00000000 		.4byte	.Ltext0
 3190 0014 B2020000 		.4byte	.Letext0-.Ltext0
 3191 0018 00000000 		.4byte	0x0
 3192 001c 00000000 		.4byte	0x0
 3193              		.section	.debug_str,"MS",%progbits,1
 3194              	.LASF91:
 3195 0000 52455345 		.ascii	"RESERVED\000"
 3195      52564544 
 3195      00
 3196              	.LASF121:
 3197 0009 41504231 		.ascii	"APB1ENR\000"
 3197      454E5200 
 3198              	.LASF93:
 3199 0011 42535252 		.ascii	"BSRR\000"
 3199      00
 3200              	.LASF102:
 3201 0016 49435052 		.ascii	"ICPR\000"
 3201      00
 3202              	.LASF117:
 3203 001b 41504232 		.ascii	"APB2RSTR\000"
 3203      52535452 
 3203      00
 3204              	.LASF75:
 3205 0024 52455345 		.ascii	"RESERVED40\000"
 3205      52564544 
 3205      343000
 3206              	.LASF77:
 3207 002f 52455345 		.ascii	"RESERVED41\000"
 3207      52564544 
 3207      343100
 3208              	.LASF79:
 3209 003a 52455345 		.ascii	"RESERVED42\000"
 3209      52564544 
 3209      343200
 3210              	.LASF81:
 3211 0045 52455345 		.ascii	"RESERVED43\000"
 3211      52564544 
 3211      343300
 3212              	.LASF83:
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 146


 3213 0050 52455345 		.ascii	"RESERVED44\000"
 3213      52564544 
 3213      343400
 3214              	.LASF158:
 3215 005b 756E7369 		.ascii	"unsigned int\000"
 3215      676E6564 
 3215      20696E74 
 3215      00
 3216              	.LASF132:
 3217 0068 4C4F4144 		.ascii	"LOAD\000"
 3217      00
 3218              	.LASF161:
 3219 006d 4A3A5C61 		.ascii	"J:\\acco\\zipzap\\cortex_dev\\projets\\ap note 199\\"
 3219      63636F5C 
 3219      7A69707A 
 3219      61705C63 
 3219      6F727465 
 3220 009b 41504E31 		.ascii	"APN199_Examples\\MCBSTM32_Blinky\000"
 3220      39395F45 
 3220      78616D70 
 3220      6C65735C 
 3220      4D434253 
 3221              	.LASF112:
 3222 00bb 44465352 		.ascii	"DFSR\000"
 3222      00
 3223              	.LASF122:
 3224 00c0 42444352 		.ascii	"BDCR\000"
 3224      00
 3225              	.LASF111:
 3226 00c5 48465352 		.ascii	"HFSR\000"
 3226      00
 3227              	.LASF96:
 3228 00ca 4D415052 		.ascii	"MAPR\000"
 3228      00
 3229              	.LASF89:
 3230 00cf 4B455952 		.ascii	"KEYR\000"
 3230      00
 3231              	.LASF145:
 3232 00d4 47545052 		.ascii	"GTPR\000"
 3232      00
 3233              	.LASF143:
 3234 00d9 42445452 		.ascii	"BDTR\000"
 3234      00
 3235              	.LASF98:
 3236 00de 49534552 		.ascii	"ISER\000"
 3236      00
 3237              	.LASF139:
 3238 00e3 43435231 		.ascii	"CCR1\000"
 3238      00
 3239              	.LASF140:
 3240 00e8 43435232 		.ascii	"CCR2\000"
 3240      00
 3241              	.LASF141:
 3242 00ed 43435233 		.ascii	"CCR3\000"
 3242      00
 3243              	.LASF100:
 3244 00f2 52534552 		.ascii	"RSERVED1\000"
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 147


 3244      56454431 
 3244      00
 3245              	.LASF136:
 3246 00fb 43434D52 		.ascii	"CCMR1\000"
 3246      3100
 3247              	.LASF137:
 3248 0101 43434D52 		.ascii	"CCMR2\000"
 3248      3200
 3249              	.LASF149:
 3250 0107 73746D33 		.ascii	"stm32_IwdgSetup\000"
 3250      325F4977 
 3250      64675365 
 3250      74757000 
 3251              	.LASF90:
 3252 0117 4F50544B 		.ascii	"OPTKEYR\000"
 3252      45595200 
 3253              	.LASF25:
 3254 011f 52455345 		.ascii	"RESERVED15\000"
 3254      52564544 
 3254      313500
 3255              	.LASF152:
 3256 012a 73746D33 		.ascii	"stm32_TimerSetup\000"
 3256      325F5469 
 3256      6D657253 
 3256      65747570 
 3256      00
 3257              	.LASF123:
 3258 013b 50524C48 		.ascii	"PRLH\000"
 3258      00
 3259              	.LASF124:
 3260 0140 50524C4C 		.ascii	"PRLL\000"
 3260      00
 3261              	.LASF104:
 3262 0145 43505549 		.ascii	"CPUID\000"
 3262      4400
 3263              	.LASF108:
 3264 014b 53485052 		.ascii	"SHPR\000"
 3264      00
 3265              	.LASF160:
 3266 0150 53544D33 		.ascii	"STM32_Init.c\000"
 3266      325F496E 
 3266      69742E63 
 3266      00
 3267              	.LASF156:
 3268 015d 73746D33 		.ascii	"stm32_AfRemapSetup\000"
 3268      325F4166 
 3268      52656D61 
 3268      70536574 
 3268      757000
 3269              	.LASF115:
 3270 0170 41465352 		.ascii	"AFSR\000"
 3270      00
 3271              	.LASF135:
 3272 0175 44494552 		.ascii	"DIER\000"
 3272      00
 3273              	.LASF118:
 3274 017a 41504231 		.ascii	"APB1RSTR\000"
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 148


 3274      52535452 
 3274      00
 3275              	.LASF138:
 3276 0183 43434552 		.ascii	"CCER\000"
 3276      00
 3277              	.LASF107:
 3278 0188 41495243 		.ascii	"AIRCR\000"
 3278      5200
 3279              	.LASF105:
 3280 018e 49435352 		.ascii	"ICSR\000"
 3280      00
 3281              	.LASF119:
 3282 0193 41484245 		.ascii	"AHBENR\000"
 3282      4E5200
 3283              	.LASF88:
 3284 019a 53574945 		.ascii	"SWIER\000"
 3284      5200
 3285              	.LASF97:
 3286 01a0 45585449 		.ascii	"EXTICR\000"
 3286      435200
 3287              	.LASF125:
 3288 01a7 44495648 		.ascii	"DIVH\000"
 3288      00
 3289              	.LASF134:
 3290 01ac 534D4352 		.ascii	"SMCR\000"
 3290      00
 3291              	.LASF126:
 3292 01b1 4449564C 		.ascii	"DIVL\000"
 3292      00
 3293              	.LASF154:
 3294 01b6 73746D33 		.ascii	"stm32_UsartSetup\000"
 3294      325F5573 
 3294      61727453 
 3294      65747570 
 3294      00
 3295              	.LASF163:
 3296 01c7 73746D33 		.ascii	"stm32_GetPCLK1\000"
 3296      325F4765 
 3296      7450434C 
 3296      4B3100
 3297              	.LASF109:
 3298 01d6 53484353 		.ascii	"SHCSR\000"
 3298      5200
 3299              	.LASF110:
 3300 01dc 43465352 		.ascii	"CFSR\000"
 3300      00
 3301              	.LASF131:
 3302 01e1 4354524C 		.ascii	"CTRL\000"
 3302      00
 3303              	.LASF147:
 3304 01e6 73746D33 		.ascii	"stm32_ClockSetup\000"
 3304      325F436C 
 3304      6F636B53 
 3304      65747570 
 3304      00
 3305              	.LASF94:
 3306 01f7 4C434B52 		.ascii	"LCKR\000"
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 149


 3306      00
 3307              	.LASF16:
 3308 01fc 44523130 		.ascii	"DR10\000"
 3308      00
 3309              	.LASF22:
 3310 0201 44523131 		.ascii	"DR11\000"
 3310      00
 3311              	.LASF24:
 3312 0206 44523132 		.ascii	"DR12\000"
 3312      00
 3313              	.LASF26:
 3314 020b 44523133 		.ascii	"DR13\000"
 3314      00
 3315              	.LASF28:
 3316 0210 44523134 		.ascii	"DR14\000"
 3316      00
 3317              	.LASF30:
 3318 0215 44523135 		.ascii	"DR15\000"
 3318      00
 3319              	.LASF32:
 3320 021a 44523136 		.ascii	"DR16\000"
 3320      00
 3321              	.LASF34:
 3322 021f 44523137 		.ascii	"DR17\000"
 3322      00
 3323              	.LASF36:
 3324 0224 44523138 		.ascii	"DR18\000"
 3324      00
 3325              	.LASF38:
 3326 0229 44523139 		.ascii	"DR19\000"
 3326      00
 3327              	.LASF133:
 3328 022e 43414C49 		.ascii	"CALIB\000"
 3328      4200
 3329              	.LASF92:
 3330 0234 57525052 		.ascii	"WRPR\000"
 3330      00
 3331              	.LASF159:
 3332 0239 474E5520 		.ascii	"GNU C 4.3.3\000"
 3332      4320342E 
 3332      332E3300 
 3333              	.LASF130:
 3334 0245 414C524C 		.ascii	"ALRL\000"
 3334      00
 3335              	.LASF86:
 3336 024a 52545352 		.ascii	"RTSR\000"
 3336      00
 3337              	.LASF40:
 3338 024f 44523230 		.ascii	"DR20\000"
 3338      00
 3339              	.LASF42:
 3340 0254 44523231 		.ascii	"DR21\000"
 3340      00
 3341              	.LASF44:
 3342 0259 44523232 		.ascii	"DR22\000"
 3342      00
 3343              	.LASF46:
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 150


 3344 025e 44523233 		.ascii	"DR23\000"
 3344      00
 3345              	.LASF48:
 3346 0263 44523234 		.ascii	"DR24\000"
 3346      00
 3347              	.LASF50:
 3348 0268 44523235 		.ascii	"DR25\000"
 3348      00
 3349              	.LASF52:
 3350 026d 44523236 		.ascii	"DR26\000"
 3350      00
 3351              	.LASF54:
 3352 0272 44523237 		.ascii	"DR27\000"
 3352      00
 3353              	.LASF56:
 3354 0277 44523238 		.ascii	"DR28\000"
 3354      00
 3355              	.LASF58:
 3356 027c 44523239 		.ascii	"DR29\000"
 3356      00
 3357              	.LASF85:
 3358 0281 52455345 		.ascii	"RESERVED45\000"
 3358      52564544 
 3358      343500
 3359              	.LASF129:
 3360 028c 414C5248 		.ascii	"ALRH\000"
 3360      00
 3361              	.LASF6:
 3362 0291 52455345 		.ascii	"RESERVED0\000"
 3362      52564544 
 3362      3000
 3363              	.LASF7:
 3364 029b 52455345 		.ascii	"RESERVED1\000"
 3364      52564544 
 3364      3100
 3365              	.LASF8:
 3366 02a5 52455345 		.ascii	"RESERVED2\000"
 3366      52564544 
 3366      3200
 3367              	.LASF9:
 3368 02af 52455345 		.ascii	"RESERVED3\000"
 3368      52564544 
 3368      3300
 3369              	.LASF10:
 3370 02b9 52455345 		.ascii	"RESERVED4\000"
 3370      52564544 
 3370      3400
 3371              	.LASF11:
 3372 02c3 52455345 		.ascii	"RESERVED5\000"
 3372      52564544 
 3372      3500
 3373              	.LASF12:
 3374 02cd 52455345 		.ascii	"RESERVED6\000"
 3374      52564544 
 3374      3600
 3375              	.LASF1:
 3376 02d7 73686F72 		.ascii	"short int\000"
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 151


 3376      7420696E 
 3376      7400
 3377              	.LASF14:
 3378 02e1 52455345 		.ascii	"RESERVED8\000"
 3378      52564544 
 3378      3800
 3379              	.LASF15:
 3380 02eb 52455345 		.ascii	"RESERVED9\000"
 3380      52564544 
 3380      3900
 3381              	.LASF0:
 3382 02f5 6C6F6E67 		.ascii	"long int\000"
 3382      20696E74 
 3382      00
 3383              	.LASF144:
 3384 02fe 444D4152 		.ascii	"DMAR\000"
 3384      00
 3385              	.LASF120:
 3386 0303 41504232 		.ascii	"APB2ENR\000"
 3386      454E5200 
 3387              	.LASF155:
 3388 030b 73746D33 		.ascii	"stm32_ExtiSetup\000"
 3388      325F4578 
 3388      74695365 
 3388      74757000 
 3389              	.LASF60:
 3390 031b 44523330 		.ascii	"DR30\000"
 3390      00
 3391              	.LASF62:
 3392 0320 44523331 		.ascii	"DR31\000"
 3392      00
 3393              	.LASF64:
 3394 0325 44523332 		.ascii	"DR32\000"
 3394      00
 3395              	.LASF66:
 3396 032a 44523333 		.ascii	"DR33\000"
 3396      00
 3397              	.LASF68:
 3398 032f 44523334 		.ascii	"DR34\000"
 3398      00
 3399              	.LASF70:
 3400 0334 44523335 		.ascii	"DR35\000"
 3400      00
 3401              	.LASF72:
 3402 0339 44523336 		.ascii	"DR36\000"
 3402      00
 3403              	.LASF74:
 3404 033e 44523337 		.ascii	"DR37\000"
 3404      00
 3405              	.LASF76:
 3406 0343 44523338 		.ascii	"DR38\000"
 3406      00
 3407              	.LASF78:
 3408 0348 44523339 		.ascii	"DR39\000"
 3408      00
 3409              	.LASF162:
 3410 034d 73746D33 		.ascii	"stm32_Init\000"
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 152


 3410      325F496E 
 3410      697400
 3411              	.LASF127:
 3412 0358 434E5448 		.ascii	"CNTH\000"
 3412      00
 3413              	.LASF128:
 3414 035d 434E544C 		.ascii	"CNTL\000"
 3414      00
 3415              	.LASF153:
 3416 0362 73746D33 		.ascii	"stm32_GpioSetup\000"
 3416      325F4770 
 3416      696F5365 
 3416      74757000 
 3417              	.LASF114:
 3418 0372 42464152 		.ascii	"BFAR\000"
 3418      00
 3419              	.LASF106:
 3420 0377 56544F52 		.ascii	"VTOR\000"
 3420      00
 3421              	.LASF148:
 3422 037c 73746D33 		.ascii	"stm32_NvicSetup\000"
 3422      325F4E76 
 3422      69635365 
 3422      74757000 
 3423              	.LASF80:
 3424 038c 44523430 		.ascii	"DR40\000"
 3424      00
 3425              	.LASF82:
 3426 0391 44523431 		.ascii	"DR41\000"
 3426      00
 3427              	.LASF84:
 3428 0396 44523432 		.ascii	"DR42\000"
 3428      00
 3429              	.LASF3:
 3430 039b 6C6F6E67 		.ascii	"long unsigned int\000"
 3430      20756E73 
 3430      69676E65 
 3430      6420696E 
 3430      7400
 3431              	.LASF151:
 3432 03ad 73746D33 		.ascii	"stm32_RtcSetup\000"
 3432      325F5274 
 3432      63536574 
 3432      757000
 3433              	.LASF87:
 3434 03bc 46545352 		.ascii	"FTSR\000"
 3434      00
 3435              	.LASF157:
 3436 03c1 73746D33 		.ascii	"stm32_TamperSetup\000"
 3436      325F5461 
 3436      6D706572 
 3436      53657475 
 3436      7000
 3437              	.LASF5:
 3438 03d3 756E7369 		.ascii	"unsigned char\000"
 3438      676E6564 
 3438      20636861 
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 153


 3438      7200
 3439              	.LASF142:
 3440 03e1 43435234 		.ascii	"CCR4\000"
 3440      00
 3441              	.LASF146:
 3442 03e6 73746D33 		.ascii	"stm32_EfiSetup\000"
 3442      325F4566 
 3442      69536574 
 3442      757000
 3443              	.LASF17:
 3444 03f5 52455345 		.ascii	"RESERVED10\000"
 3444      52564544 
 3444      313000
 3445              	.LASF19:
 3446 0400 52455345 		.ascii	"RESERVED11\000"
 3446      52564544 
 3446      313100
 3447              	.LASF20:
 3448 040b 52455345 		.ascii	"RESERVED12\000"
 3448      52564544 
 3448      313200
 3449              	.LASF21:
 3450 0416 52455345 		.ascii	"RESERVED13\000"
 3450      52564544 
 3450      313300
 3451              	.LASF23:
 3452 0421 52455345 		.ascii	"RESERVED14\000"
 3452      52564544 
 3452      313400
 3453              	.LASF27:
 3454 042c 52455345 		.ascii	"RESERVED16\000"
 3454      52564544 
 3454      313600
 3455              	.LASF29:
 3456 0437 52455345 		.ascii	"RESERVED17\000"
 3456      52564544 
 3456      313700
 3457              	.LASF31:
 3458 0442 52455345 		.ascii	"RESERVED18\000"
 3458      52564544 
 3458      313800
 3459              	.LASF33:
 3460 044d 52455345 		.ascii	"RESERVED19\000"
 3460      52564544 
 3460      313900
 3461              	.LASF116:
 3462 0458 43464752 		.ascii	"CFGR\000"
 3462      00
 3463              	.LASF99:
 3464 045d 49434552 		.ascii	"ICER\000"
 3464      00
 3465              	.LASF103:
 3466 0462 49414252 		.ascii	"IABR\000"
 3466      00
 3467              	.LASF18:
 3468 0467 52544343 		.ascii	"RTCCR\000"
 3468      5200
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 154


 3469              	.LASF2:
 3470 046d 7369676E 		.ascii	"signed char\000"
 3470      65642063 
 3470      68617200 
 3471              	.LASF4:
 3472 0479 73686F72 		.ascii	"short unsigned int\000"
 3472      7420756E 
 3472      7369676E 
 3472      65642069 
 3472      6E7400
 3473              	.LASF35:
 3474 048c 52455345 		.ascii	"RESERVED20\000"
 3474      52564544 
 3474      323000
 3475              	.LASF37:
 3476 0497 52455345 		.ascii	"RESERVED21\000"
 3476      52564544 
 3476      323100
 3477              	.LASF39:
 3478 04a2 52455345 		.ascii	"RESERVED22\000"
 3478      52564544 
 3478      323200
 3479              	.LASF41:
 3480 04ad 52455345 		.ascii	"RESERVED23\000"
 3480      52564544 
 3480      323300
 3481              	.LASF43:
 3482 04b8 52455345 		.ascii	"RESERVED24\000"
 3482      52564544 
 3482      323400
 3483              	.LASF45:
 3484 04c3 52455345 		.ascii	"RESERVED25\000"
 3484      52564544 
 3484      323500
 3485              	.LASF47:
 3486 04ce 52455345 		.ascii	"RESERVED26\000"
 3486      52564544 
 3486      323600
 3487              	.LASF49:
 3488 04d9 52455345 		.ascii	"RESERVED27\000"
 3488      52564544 
 3488      323700
 3489              	.LASF51:
 3490 04e4 52455345 		.ascii	"RESERVED28\000"
 3490      52564544 
 3490      323800
 3491              	.LASF53:
 3492 04ef 52455345 		.ascii	"RESERVED29\000"
 3492      52564544 
 3492      323900
 3493              	.LASF101:
 3494 04fa 49535052 		.ascii	"ISPR\000"
 3494      00
 3495              	.LASF113:
 3496 04ff 4D4D4641 		.ascii	"MMFAR\000"
 3496      5200
 3497              	.LASF13:
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 155


 3498 0505 52455345 		.ascii	"RESERVED7\000"
 3498      52564544 
 3498      3700
 3499              	.LASF95:
 3500 050f 45564352 		.ascii	"EVCR\000"
 3500      00
 3501              	.LASF150:
 3502 0514 73746D33 		.ascii	"stm32_SysTickSetup\000"
 3502      325F5379 
 3502      73546963 
 3502      6B536574 
 3502      757000
 3503              	.LASF55:
 3504 0527 52455345 		.ascii	"RESERVED30\000"
 3504      52564544 
 3504      333000
 3505              	.LASF57:
 3506 0532 52455345 		.ascii	"RESERVED31\000"
 3506      52564544 
 3506      333100
 3507              	.LASF59:
 3508 053d 52455345 		.ascii	"RESERVED32\000"
 3508      52564544 
 3508      333200
 3509              	.LASF61:
 3510 0548 52455345 		.ascii	"RESERVED33\000"
 3510      52564544 
 3510      333300
 3511              	.LASF63:
 3512 0553 52455345 		.ascii	"RESERVED34\000"
 3512      52564544 
 3512      333400
 3513              	.LASF65:
 3514 055e 52455345 		.ascii	"RESERVED35\000"
 3514      52564544 
 3514      333500
 3515              	.LASF67:
 3516 0569 52455345 		.ascii	"RESERVED36\000"
 3516      52564544 
 3516      333600
 3517              	.LASF69:
 3518 0574 52455345 		.ascii	"RESERVED37\000"
 3518      52564544 
 3518      333700
 3519              	.LASF71:
 3520 057f 52455345 		.ascii	"RESERVED38\000"
 3520      52564544 
 3520      333800
 3521              	.LASF73:
 3522 058a 52455345 		.ascii	"RESERVED39\000"
 3522      52564544 
 3522      333900
 3523              		.ident	"GCC: (Sourcery G++ Lite 2009q1-161) 4.3.3"
ARM GAS  D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s 			page 156


DEFINED SYMBOLS
                            *ABS*:00000000 STM32_Init.c
D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s:22     .text:00000000 $t
D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s:27     .text:00000000 stm32_EfiSetup
D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s:48     .text:00000010 stm32_ClockSetup
D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s:96     .text:00000060 stm32_NvicSetup
D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s:111    .text:00000064 stm32_IwdgSetup
D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s:143    .text:0000008c stm32_SysTickSetup
D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s:174    .text:000000b4 stm32_RtcSetup
D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s:266    .text:00000164 stm32_TimerSetup
D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s:281    .text:00000168 stm32_GpioSetup
D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s:320    .text:000001a4 stm32_UsartSetup
D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s:391    .text:00000220 stm32_ExtiSetup
D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s:406    .text:00000224 stm32_AfRemapSetup
D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s:421    .text:00000228 stm32_TamperSetup
D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s:479    .text:00000290 stm32_Init
D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s:505    .text:000002a8 stm32_GetPCLK1
D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s:519    .debug_frame:00000000 $d
D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s:657    .debug_loc:00000000 $d
D:\DOCUME~1\admin\LOCALS~1\Temp\ccNQ6MXO.s:654    .text:000002b2 $t

NO UNDEFINED SYMBOLS
